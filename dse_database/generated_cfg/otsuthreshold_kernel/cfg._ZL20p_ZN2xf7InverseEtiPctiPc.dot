digraph "CFG for '_ZL20p_ZN2xf7InverseEtiPctiPc' function" {
	label="CFG for '_ZL20p_ZN2xf7InverseEtiPctiPc' function";

	Node0x2082f60 [shape=record,label="{%0:\l  %1 = alloca i32, align 4\l  %2 = alloca i16, align 2\l  %3 = alloca i32, align 4\l  %4 = alloca i8*, align 8\l  %val = alloca i32, align 4\l  %index = alloca i32, align 4\l  %B_L = alloca i32, align 4\l  %tmp = alloca i32, align 4\l  %pos = alloca i32, align 4\l  %block = alloca i32, align 4\l  %shift = alloca i32, align 4\l  %x1 = alloca i16, align 2\l  %x2 = alloca i16, align 2\l  %x3 = alloca i16, align 2\l  %x4 = alloca i16, align 2\l  %tmpx = alloca i16, align 2\l  store i16 %x, i16* %2, align 2\l  store i32 %M, i32* %3, align 4\l  store i8* %N, i8** %4, align 8\l  %5 = load i32* %3, align 4\l  %6 = icmp sle i32 %5, 16\l  br i1 %6, label %7, label %8\l|{<s0>T|<s1>F}}"];
	Node0x2082f60:s0 -> Node0x2087a90;
	Node0x2082f60:s1 -> Node0x2087af0;
	Node0x2087a90 [shape=record,label="{%7:\l\l  br label %10\l}"];
	Node0x2087a90 -> Node0x2087c00;
	Node0x2087af0 [shape=record,label="{%8:\l\l  call void @__assert_fail(i8* getelementptr inbounds ([79 x i8]* @.str2, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str3, i32 0, i32 0), i32 234, i8* getelementptr inbounds ([63 x i8]* @__PRETTY_FUNCTION__._ZL20p_ZN2xf7InverseEtiPctiPc, i32 0, i32 0)) noreturn nounwind\l  unreachable\l}"];
	Node0x2088260 [shape=record,label="{%9:                                                  \l  br label %10\l}"];
	Node0x2088260 -> Node0x2087c00;
	Node0x2087c00 [shape=record,label="{%10:\l\l  store i32 0, i32* %val, align 4\l  store i32 17, i32* %B_L, align 4\l  store i32 4, i32* %tmp, align 4\l  store i32 0, i32* %block, align 4\l  store i32 0, i32* %pos, align 4\l  store i32 0, i32* %shift, align 4\l  %11 = load i16* %2, align 2\l  %12 = zext i16 %11 to i32\l  %13 = ashr i32 %12, 12\l  %14 = and i32 %13, 15\l  %15 = trunc i32 %14 to i16\l  store i16 %15, i16* %x1, align 2\l  %16 = load i16* %2, align 2\l  %17 = zext i16 %16 to i32\l  %18 = ashr i32 %17, 8\l  %19 = and i32 %18, 15\l  %20 = trunc i32 %19 to i16\l  store i16 %20, i16* %x2, align 2\l  %21 = load i16* %2, align 2\l  %22 = zext i16 %21 to i32\l  %23 = ashr i32 %22, 4\l  %24 = and i32 %23, 15\l  %25 = trunc i32 %24 to i16\l  store i16 %25, i16* %x3, align 2\l  %26 = load i16* %2, align 2\l  %27 = zext i16 %26 to i32\l  %28 = and i32 %27, 15\l  %29 = trunc i32 %28 to i16\l  store i16 %29, i16* %x4, align 2\l  store i16 0, i16* %tmpx, align 2\l  %30 = load i16* %2, align 2\l  %31 = zext i16 %30 to i32\l  %32 = icmp eq i32 %31, 0\l  br i1 %32, label %33, label %36\l|{<s0>T|<s1>F}}"];
	Node0x2087c00:s0 -> Node0x20895f0;
	Node0x2087c00:s1 -> Node0x2089650;
	Node0x20895f0 [shape=record,label="{%33:\l\l  %34 = load i16* getelementptr inbounds ([2049 x i16]* @_ZN2xf12division_lutE, i32 0, i64 0), align 2\l  %35 = zext i16 %34 to i32\l  store i32 %35, i32* %1\l  br label %174\l}"];
	Node0x20895f0 -> Node0x2089a20;
	Node0x2089650 [shape=record,label="{%36:\l\l  %37 = load i16* %x1, align 2\l  %38 = zext i16 %37 to i32\l  %39 = icmp sgt i32 %38, 0\l  br i1 %39, label %40, label %62\l|{<s0>T|<s1>F}}"];
	Node0x2089650:s0 -> Node0x2089c90;
	Node0x2089650:s1 -> Node0x2089cf0;
	Node0x2089c90 [shape=record,label="{%40:\l\l  %41 = load i16* %x1, align 2\l  store i16 %41, i16* %tmpx, align 2\l  store i32 0, i32* %block, align 4\l  store i32 0, i32* %tmp, align 4\l  br label %42\l}"];
	Node0x2089c90 -> Node0x208a030;
	Node0x208a030 [shape=record,label="{%42:\l\l  %43 = load i32* %tmp, align 4\l  %44 = icmp slt i32 %43, 4\l  br i1 %44, label %45, label %61\l|{<s0>T|<s1>F}}"];
	Node0x208a030:s0 -> Node0x208a220;
	Node0x208a030:s1 -> Node0x208a280;
	Node0x208a220 [shape=record,label="{%45:\l\l  %46 = load i16* %x1, align 2\l  %47 = zext i16 %46 to i32\l  %48 = load i32* %tmp, align 4\l  %49 = sub nsw i32 3, %48\l  %50 = ashr i32 %47, %49\l  %51 = trunc i32 %50 to i16\l  store i16 %51, i16* %tmpx, align 2\l  %52 = load i16* %tmpx, align 2\l  %53 = icmp ne i16 %52, 0\l  br i1 %53, label %54, label %57\l|{<s0>T|<s1>F}}"];
	Node0x208a220:s0 -> Node0x208a8a0;
	Node0x208a220:s1 -> Node0x208a900;
	Node0x208a8a0 [shape=record,label="{%54:\l\l  %55 = load i32* %tmp, align 4\l  %56 = add nsw i32 %55, 1\l  store i32 %56, i32* %pos, align 4\l  br label %61\l}"];
	Node0x208a8a0 -> Node0x208a280;
	Node0x208a900 [shape=record,label="{%57:\l\l  br label %58\l}"];
	Node0x208a900 -> Node0x208ac30;
	Node0x208ac30 [shape=record,label="{%58:\l\l  %59 = load i32* %tmp, align 4\l  %60 = add nsw i32 %59, 1\l  store i32 %60, i32* %tmp, align 4\l  br label %42\l}"];
	Node0x208ac30 -> Node0x208a030;
	Node0x208a280 [shape=record,label="{%61:\l\l  br label %138\l}"];
	Node0x208a280 -> Node0x208af30;
	Node0x2089cf0 [shape=record,label="{%62:\l\l  %63 = load i16* %x2, align 2\l  %64 = zext i16 %63 to i32\l  %65 = icmp sgt i32 %64, 0\l  br i1 %65, label %66, label %88\l|{<s0>T|<s1>F}}"];
	Node0x2089cf0:s0 -> Node0x208b1a0;
	Node0x2089cf0:s1 -> Node0x208b200;
	Node0x208b1a0 [shape=record,label="{%66:\l\l  store i32 1, i32* %block, align 4\l  %67 = load i16* %x2, align 2\l  store i16 %67, i16* %tmpx, align 2\l  store i32 0, i32* %tmp, align 4\l  br label %68\l}"];
	Node0x208b1a0 -> Node0x208b540;
	Node0x208b540 [shape=record,label="{%68:\l\l  %69 = load i32* %tmp, align 4\l  %70 = icmp slt i32 %69, 4\l  br i1 %70, label %71, label %87\l|{<s0>T|<s1>F}}"];
	Node0x208b540:s0 -> Node0x208b730;
	Node0x208b540:s1 -> Node0x208b790;
	Node0x208b730 [shape=record,label="{%71:\l\l  %72 = load i16* %x2, align 2\l  %73 = zext i16 %72 to i32\l  %74 = load i32* %tmp, align 4\l  %75 = sub nsw i32 3, %74\l  %76 = ashr i32 %73, %75\l  %77 = trunc i32 %76 to i16\l  store i16 %77, i16* %tmpx, align 2\l  %78 = load i16* %tmpx, align 2\l  %79 = icmp ne i16 %78, 0\l  br i1 %79, label %80, label %83\l|{<s0>T|<s1>F}}"];
	Node0x208b730:s0 -> Node0x208bd60;
	Node0x208b730:s1 -> Node0x208bdc0;
	Node0x208bd60 [shape=record,label="{%80:\l\l  %81 = load i32* %tmp, align 4\l  %82 = add nsw i32 %81, 1\l  store i32 %82, i32* %pos, align 4\l  br label %87\l}"];
	Node0x208bd60 -> Node0x208b790;
	Node0x208bdc0 [shape=record,label="{%83:\l\l  br label %84\l}"];
	Node0x208bdc0 -> Node0x208c0f0;
	Node0x208c0f0 [shape=record,label="{%84:\l\l  %85 = load i32* %tmp, align 4\l  %86 = add nsw i32 %85, 1\l  store i32 %86, i32* %tmp, align 4\l  br label %68\l}"];
	Node0x208c0f0 -> Node0x208b540;
	Node0x208b790 [shape=record,label="{%87:\l\l  br label %137\l}"];
	Node0x208b790 -> Node0x208c3f0;
	Node0x208b200 [shape=record,label="{%88:\l\l  %89 = load i16* %x3, align 2\l  %90 = zext i16 %89 to i32\l  %91 = icmp sgt i32 %90, 0\l  br i1 %91, label %92, label %114\l|{<s0>T|<s1>F}}"];
	Node0x208b200:s0 -> Node0x208c660;
	Node0x208b200:s1 -> Node0x208c6c0;
	Node0x208c660 [shape=record,label="{%92:\l\l  store i32 2, i32* %block, align 4\l  %93 = load i16* %x3, align 2\l  store i16 %93, i16* %tmpx, align 2\l  store i32 0, i32* %tmp, align 4\l  br label %94\l}"];
	Node0x208c660 -> Node0x208ca00;
	Node0x208ca00 [shape=record,label="{%94:\l\l  %95 = load i32* %tmp, align 4\l  %96 = icmp slt i32 %95, 4\l  br i1 %96, label %97, label %113\l|{<s0>T|<s1>F}}"];
	Node0x208ca00:s0 -> Node0x208cbf0;
	Node0x208ca00:s1 -> Node0x208cc50;
	Node0x208cbf0 [shape=record,label="{%97:\l\l  %98 = load i16* %x3, align 2\l  %99 = zext i16 %98 to i32\l  %100 = load i32* %tmp, align 4\l  %101 = sub nsw i32 3, %100\l  %102 = ashr i32 %99, %101\l  %103 = trunc i32 %102 to i16\l  store i16 %103, i16* %tmpx, align 2\l  %104 = load i16* %tmpx, align 2\l  %105 = icmp ne i16 %104, 0\l  br i1 %105, label %106, label %109\l|{<s0>T|<s1>F}}"];
	Node0x208cbf0:s0 -> Node0x208d220;
	Node0x208cbf0:s1 -> Node0x208d280;
	Node0x208d220 [shape=record,label="{%106:\l\l  %107 = load i32* %tmp, align 4\l  %108 = add nsw i32 %107, 1\l  store i32 %108, i32* %pos, align 4\l  br label %113\l}"];
	Node0x208d220 -> Node0x208cc50;
	Node0x208d280 [shape=record,label="{%109:\l\l  br label %110\l}"];
	Node0x208d280 -> Node0x208d5b0;
	Node0x208d5b0 [shape=record,label="{%110:\l\l  %111 = load i32* %tmp, align 4\l  %112 = add nsw i32 %111, 1\l  store i32 %112, i32* %tmp, align 4\l  br label %94\l}"];
	Node0x208d5b0 -> Node0x208ca00;
	Node0x208cc50 [shape=record,label="{%113:\l\l  br label %136\l}"];
	Node0x208cc50 -> Node0x208d8b0;
	Node0x208c6c0 [shape=record,label="{%114:\l\l  store i32 3, i32* %block, align 4\l  %115 = load i16* %x4, align 2\l  store i16 %115, i16* %tmpx, align 2\l  store i32 0, i32* %tmp, align 4\l  br label %116\l}"];
	Node0x208c6c0 -> Node0x208dbc0;
	Node0x208dbc0 [shape=record,label="{%116:\l\l  %117 = load i32* %tmp, align 4\l  %118 = icmp slt i32 %117, 4\l  br i1 %118, label %119, label %135\l|{<s0>T|<s1>F}}"];
	Node0x208dbc0:s0 -> Node0x208ddb0;
	Node0x208dbc0:s1 -> Node0x208de10;
	Node0x208ddb0 [shape=record,label="{%119:\l\l  %120 = load i16* %x4, align 2\l  %121 = zext i16 %120 to i32\l  %122 = load i32* %tmp, align 4\l  %123 = sub nsw i32 3, %122\l  %124 = ashr i32 %121, %123\l  %125 = trunc i32 %124 to i16\l  store i16 %125, i16* %tmpx, align 2\l  %126 = load i16* %tmpx, align 2\l  %127 = icmp ne i16 %126, 0\l  br i1 %127, label %128, label %131\l|{<s0>T|<s1>F}}"];
	Node0x208ddb0:s0 -> Node0x208e3e0;
	Node0x208ddb0:s1 -> Node0x208e440;
	Node0x208e3e0 [shape=record,label="{%128:\l\l  %129 = load i32* %tmp, align 4\l  %130 = add nsw i32 %129, 1\l  store i32 %130, i32* %pos, align 4\l  br label %135\l}"];
	Node0x208e3e0 -> Node0x208de10;
	Node0x208e440 [shape=record,label="{%131:\l\l  br label %132\l}"];
	Node0x208e440 -> Node0x208ef80;
	Node0x208ef80 [shape=record,label="{%132:\l\l  %133 = load i32* %tmp, align 4\l  %134 = add nsw i32 %133, 1\l  store i32 %134, i32* %tmp, align 4\l  br label %116\l}"];
	Node0x208ef80 -> Node0x208dbc0;
	Node0x208de10 [shape=record,label="{%135:\l\l  br label %136\l}"];
	Node0x208de10 -> Node0x208d8b0;
	Node0x208d8b0 [shape=record,label="{%136:\l\l  br label %137\l}"];
	Node0x208d8b0 -> Node0x208c3f0;
	Node0x208c3f0 [shape=record,label="{%137:\l\l  br label %138\l}"];
	Node0x208c3f0 -> Node0x208af30;
	Node0x208af30 [shape=record,label="{%138:\l\l  br label %139\l}"];
	Node0x208af30 -> Node0x208f400;
	Node0x208f400 [shape=record,label="{%139:\l\l  %140 = load i32* %block, align 4\l  %141 = mul nsw i32 4, %140\l  %142 = load i32* %pos, align 4\l  %143 = add nsw i32 %141, %142\l  store i32 %143, i32* %B_L, align 4\l  store i32 4, i32* %shift, align 4\l  %144 = load i32* %B_L, align 4\l  %145 = icmp sge i32 %144, 1\l  br i1 %145, label %146, label %155\l|{<s0>T|<s1>F}}"];
	Node0x208f400:s0 -> Node0x208f930;
	Node0x208f400:s1 -> Node0x208f990;
	Node0x208f930 [shape=record,label="{%146:\l\l  %147 = load i16* %2, align 2\l  %148 = zext i16 %147 to i32\l  %149 = load i32* %B_L, align 4\l  %150 = sub nsw i32 %149, 1\l  %151 = shl i32 %148, %150\l  %152 = and i32 %151, 32767\l  %153 = load i32* %shift, align 4\l  %154 = ashr i32 %152, %153\l  store i32 %154, i32* %index, align 4\l  br label %161\l}"];
	Node0x208f930 -> Node0x208ffc0;
	Node0x208f990 [shape=record,label="{%155:\l\l  %156 = load i16* %2, align 2\l  %157 = zext i16 %156 to i32\l  %158 = and i32 %157, 32767\l  %159 = load i32* %shift, align 4\l  %160 = ashr i32 %158, %159\l  store i32 %160, i32* %index, align 4\l  br label %161\l}"];
	Node0x208f990 -> Node0x208ffc0;
	Node0x208ffc0 [shape=record,label="{%161:\l\l  %162 = load i32* %index, align 4\l  %163 = zext i32 %162 to i64\l  %164 = getelementptr inbounds [2049 x i16]* @_ZN2xf12division_lutE, i32 0, i64 %163\l  %165 = load i16* %164, align 2\l  %166 = zext i16 %165 to i32\l  store i32 %166, i32* %val, align 4\l  %167 = load i32* %3, align 4\l  %168 = add nsw i32 %167, 16\l  %169 = load i32* %B_L, align 4\l  %170 = sub nsw i32 %168, %169\l  %171 = trunc i32 %170 to i8\l  %172 = load i8** %4, align 8\l  store i8 %171, i8* %172, align 1\l  %173 = load i32* %val, align 4\l  store i32 %173, i32* %1\l  br label %174\l}"];
	Node0x208ffc0 -> Node0x2089a20;
	Node0x2089a20 [shape=record,label="{%174:\l\l  %175 = load i32* %1\l  ret i32 %175\l}"];
}
