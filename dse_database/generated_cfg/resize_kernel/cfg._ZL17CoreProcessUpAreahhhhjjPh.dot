digraph "CFG for '_ZL17CoreProcessUpAreahhhhjjPh' function" {
	label="CFG for '_ZL17CoreProcessUpAreahhhhjjPh' function";

	Node0x191a780 [shape=record,label="{%0:\l  %1 = alloca i8, align 1\l  %2 = alloca i8, align 1\l  %3 = alloca i8, align 1\l  %4 = alloca i8, align 1\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i8*, align 8\l  %Wxy = alloca i32, align 4\l  %val0 = alloca i16, align 2\l  %val1 = alloca i16, align 2\l  %val2 = alloca i16, align 2\l  %P1 = alloca i64, align 8\l  %P2 = alloca i64, align 8\l  %P3 = alloca i64, align 8\l  %P4 = alloca i64, align 8\l  store i8 %A0, i8* %1, align 1\l  store i8 %B0, i8* %2, align 1\l  store i8 %A1, i8* %3, align 1\l  store i8 %B1, i8* %4, align 1\l  store i32 %Wx, i32* %5, align 4\l  store i32 %Wy, i32* %6, align 4\l  store i8* %pixel, i8** %7, align 8\l  %8 = load i32* %5, align 4\l  %9 = zext i32 %8 to i64\l  %10 = load i32* %6, align 4\l  %11 = zext i32 %10 to i64\l  %12 = mul i64 %9, %11\l  %13 = lshr i64 %12, 32\l  %14 = trunc i64 %13 to i32\l  store i32 %14, i32* %Wxy, align 4\l  %15 = load i8* %1, align 1\l  %16 = zext i8 %15 to i32\l  %17 = load i8* %4, align 1\l  %18 = zext i8 %17 to i32\l  %19 = add nsw i32 %16, %18\l  %20 = load i8* %2, align 1\l  %21 = zext i8 %20 to i32\l  %22 = load i8* %3, align 1\l  %23 = zext i8 %22 to i32\l  %24 = add nsw i32 %21, %23\l  %25 = sub nsw i32 %19, %24\l  %26 = trunc i32 %25 to i16\l  store i16 %26, i16* %val0, align 2\l  %27 = load i8* %2, align 1\l  %28 = zext i8 %27 to i32\l  %29 = load i8* %1, align 1\l  %30 = zext i8 %29 to i32\l  %31 = sub nsw i32 %28, %30\l  %32 = trunc i32 %31 to i16\l  store i16 %32, i16* %val1, align 2\l  %33 = load i8* %3, align 1\l  %34 = zext i8 %33 to i32\l  %35 = load i8* %1, align 1\l  %36 = zext i8 %35 to i32\l  %37 = sub nsw i32 %34, %36\l  %38 = trunc i32 %37 to i16\l  store i16 %38, i16* %val2, align 2\l  %39 = load i16* %val0, align 2\l  %40 = sext i16 %39 to i64\l  %41 = load i32* %Wxy, align 4\l  %42 = zext i32 %41 to i64\l  %43 = mul nsw i64 %40, %42\l  store i64 %43, i64* %P1, align 8\l  %44 = load i16* %val1, align 2\l  %45 = sext i16 %44 to i64\l  %46 = load i32* %5, align 4\l  %47 = zext i32 %46 to i64\l  %48 = mul nsw i64 %45, %47\l  store i64 %48, i64* %P2, align 8\l  %49 = load i16* %val2, align 2\l  %50 = sext i16 %49 to i64\l  %51 = load i32* %6, align 4\l  %52 = zext i32 %51 to i64\l  %53 = mul nsw i64 %50, %52\l  store i64 %53, i64* %P3, align 8\l  %54 = load i8* %1, align 1\l  %55 = zext i8 %54 to i64\l  %56 = shl i64 %55, 32\l  store i64 %56, i64* %P4, align 8\l  %57 = load i64* %P1, align 8\l  %58 = load i64* %P2, align 8\l  %59 = add nsw i64 %57, %58\l  %60 = load i64* %P3, align 8\l  %61 = add nsw i64 %59, %60\l  %62 = load i64* %P4, align 8\l  %63 = add nsw i64 %61, %62\l  %64 = ashr i64 %63, 32\l  %65 = trunc i64 %64 to i8\l  %66 = load i8** %7, align 8\l  store i8 %65, i8* %66, align 1\l  ret void\l}"];
}
