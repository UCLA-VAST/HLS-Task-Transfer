; ModuleID = '/home/vagrant/software-gnn/dse_database/ast_kernels/resize_kernel.cpp'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.ap_uint = type { [32 x i8] }
%struct.xf_Mat_0_256_256_1_ = type { i8, i32, i32, i32, [65536 x %class.ap_uint.0] }
%class.ap_uint.0 = type { [1 x i8] }
%struct.xf_Mat_0_1080_1920_1_ = type { i8, i32, i32, i32, [2073600 x %class.ap_uint.0] }
%struct.xf_accel_utils = type { i8 }
%"class.hls::stream" = type { %class.ap_uint }
%class.ap_uint.1 = type { [2 x i8] }
%class.ap_uint.2 = type { [1 x i8] }
%class.ap_uint.3 = type { [2 x i8] }
%class.ap_int = type { [4 x i8] }
%class.ap_uint.4 = type { [1 x i8] }

@_ZN2xf12division_lutE = global [2049 x i16] [i16 -1, i16 -1, i16 -1, i16 -32, i16 -64, i16 -96, i16 -128, i16 -160, i16 -192, i16 -224, i16 -256, i16 -287, i16 -319, i16 -351, i16 -382, i16 -414, i16 -445, i16 -477, i16 -509, i16 -540, i16 -571, i16 -603, i16 -634, i16 -666, i16 -697, i16 -728, i16 -760, i16 -791, i16 -822, i16 -853, i16 -884, i16 -916, i16 -947, i16 -978, i16 -1009, i16 -1040, i16 -1071, i16 -1102, i16 -1133, i16 -1163, i16 -1194, i16 -1225, i16 -1256, i16 -1287, i16 -1317, i16 -1348, i16 -1379, i16 -1410, i16 -1440, i16 -1471, i16 -1501, i16 -1532, i16 -1562, i16 -1593, i16 -1623, i16 -1654, i16 -1684, i16 -1714, i16 -1745, i16 -1775, i16 -1805, i16 -1836, i16 -1866, i16 -1896, i16 -1926, i16 -1956, i16 -1986, i16 -2017, i16 -2047, i16 -2077, i16 -2107, i16 -2137, i16 -2166, i16 -2196, i16 -2226, i16 -2256, i16 -2286, i16 -2316, i16 -2345, i16 -2375, i16 -2405, i16 -2435, i16 -2464, i16 -2494, i16 -2523, i16 -2553, i16 -2583, i16 -2612, i16 -2642, i16 -2671, i16 -2700, i16 -2730, i16 -2759, i16 -2789, i16 -2818, i16 -2847, i16 -2876, i16 -2906, i16 -2935, i16 -2964, i16 -2993, i16 -3022, i16 -3052, i16 -3081, i16 -3110, i16 -3139, i16 -3168, i16 -3197, i16 -3226, i16 -3254, i16 -3283, i16 -3312, i16 -3341, i16 -3370, i16 -3399, i16 -3427, i16 -3456, i16 -3485, i16 -3514, i16 -3542, i16 -3571, i16 -3599, i16 -3628, i16 -3656, i16 -3685, i16 -3714, i16 -3742, i16 -3770, i16 -3799, i16 -3827, i16 -3856, i16 -3884, i16 -3912, i16 -3940, i16 -3969, i16 -3997, i16 -4025, i16 -4053, i16 -4081, i16 -4110, i16 -4138, i16 -4166, i16 -4194, i16 -4222, i16 -4250, i16 -4278, i16 -4306, i16 -4334, i16 -4362, i16 -4389, i16 -4417, i16 -4445, i16 -4473, i16 -4501, i16 -4528, i16 -4556, i16 -4584, i16 -4612, i16 -4639, i16 -4667, i16 -4694, i16 -4722, i16 -4749, i16 -4777, i16 -4804, i16 -4832, i16 -4859, i16 -4887, i16 -4914, i16 -4942, i16 -4969, i16 -4996, i16 -5024, i16 -5051, i16 -5078, i16 -5105, i16 -5132, i16 -5160, i16 -5187, i16 -5214, i16 -5241, i16 -5268, i16 -5295, i16 -5322, i16 -5349, i16 -5376, i16 -5403, i16 -5430, i16 -5457, i16 -5484, i16 -5511, i16 -5538, i16 -5564, i16 -5591, i16 -5618, i16 -5645, i16 -5671, i16 -5698, i16 -5725, i16 -5751, i16 -5778, i16 -5805, i16 -5831, i16 -5858, i16 -5884, i16 -5911, i16 -5937, i16 -5964, i16 -5990, i16 -6016, i16 -6043, i16 -6069, i16 -6096, i16 -6122, i16 -6148, i16 -6174, i16 -6201, i16 -6227, i16 -6253, i16 -6279, i16 -6305, i16 -6332, i16 -6358, i16 -6384, i16 -6410, i16 -6436, i16 -6462, i16 -6488, i16 -6514, i16 -6540, i16 -6566, i16 -6592, i16 -6617, i16 -6643, i16 -6669, i16 -6695, i16 -6721, i16 -6746, i16 -6772, i16 -6798, i16 -6824, i16 -6849, i16 -6875, i16 -6901, i16 -6926, i16 -6952, i16 -6977, i16 -7003, i16 -7028, i16 -7054, i16 -7079, i16 -7105, i16 -7130, i16 -7156, i16 -7181, i16 -7206, i16 -7232, i16 -7257, i16 -7282, i16 -7308, i16 -7333, i16 -7358, i16 -7383, i16 -7408, i16 -7434, i16 -7459, i16 -7484, i16 -7509, i16 -7534, i16 -7559, i16 -7584, i16 -7609, i16 -7634, i16 -7659, i16 -7684, i16 -7709, i16 -7734, i16 -7759, i16 -7784, i16 -7808, i16 -7833, i16 -7858, i16 -7883, i16 -7908, i16 -7932, i16 -7957, i16 -7982, i16 -8006, i16 -8031, i16 -8056, i16 -8080, i16 -8105, i16 -8129, i16 -8154, i16 -8178, i16 -8203, i16 -8227, i16 -8252, i16 -8276, i16 -8301, i16 -8325, i16 -8350, i16 -8374, i16 -8398, i16 -8423, i16 -8447, i16 -8471, i16 -8495, i16 -8520, i16 -8544, i16 -8568, i16 -8592, i16 -8616, i16 -8640, i16 -8665, i16 -8689, i16 -8713, i16 -8737, i16 -8761, i16 -8785, i16 -8809, i16 -8833, i16 -8857, i16 -8881, i16 -8905, i16 -8928, i16 -8952, i16 -8976, i16 -9000, i16 -9024, i16 -9048, i16 -9071, i16 -9095, i16 -9119, i16 -9142, i16 -9166, i16 -9190, i16 -9213, i16 -9237, i16 -9261, i16 -9284, i16 -9308, i16 -9331, i16 -9355, i16 -9378, i16 -9402, i16 -9425, i16 -9449, i16 -9472, i16 -9496, i16 -9519, i16 -9542, i16 -9566, i16 -9589, i16 -9612, i16 -9636, i16 -9659, i16 -9682, i16 -9705, i16 -9729, i16 -9752, i16 -9775, i16 -9798, i16 -9821, i16 -9844, i16 -9868, i16 -9891, i16 -9914, i16 -9937, i16 -9960, i16 -9983, i16 -10006, i16 -10029, i16 -10052, i16 -10075, i16 -10098, i16 -10120, i16 -10143, i16 -10166, i16 -10189, i16 -10212, i16 -10235, i16 -10257, i16 -10280, i16 -10303, i16 -10326, i16 -10348, i16 -10371, i16 -10394, i16 -10416, i16 -10439, i16 -10462, i16 -10484, i16 -10507, i16 -10529, i16 -10552, i16 -10574, i16 -10597, i16 -10619, i16 -10642, i16 -10664, i16 -10687, i16 -10709, i16 -10731, i16 -10754, i16 -10776, i16 -10798, i16 -10821, i16 -10843, i16 -10865, i16 -10888, i16 -10910, i16 -10932, i16 -10954, i16 -10976, i16 -10999, i16 -11021, i16 -11043, i16 -11065, i16 -11087, i16 -11109, i16 -11131, i16 -11153, i16 -11175, i16 -11197, i16 -11219, i16 -11241, i16 -11263, i16 -11285, i16 -11307, i16 -11329, i16 -11351, i16 -11373, i16 -11395, i16 -11416, i16 -11438, i16 -11460, i16 -11482, i16 -11504, i16 -11525, i16 -11547, i16 -11569, i16 -11590, i16 -11612, i16 -11634, i16 -11655, i16 -11677, i16 -11699, i16 -11720, i16 -11742, i16 -11763, i16 -11785, i16 -11806, i16 -11828, i16 -11849, i16 -11871, i16 -11892, i16 -11914, i16 -11935, i16 -11957, i16 -11978, i16 -11999, i16 -12021, i16 -12042, i16 -12063, i16 -12085, i16 -12106, i16 -12127, i16 -12148, i16 -12170, i16 -12191, i16 -12212, i16 -12233, i16 -12254, i16 -12275, i16 -12297, i16 -12318, i16 -12339, i16 -12360, i16 -12381, i16 -12402, i16 -12423, i16 -12444, i16 -12465, i16 -12486, i16 -12507, i16 -12528, i16 -12549, i16 -12570, i16 -12591, i16 -12612, i16 -12632, i16 -12653, i16 -12674, i16 -12695, i16 -12716, i16 -12736, i16 -12757, i16 -12778, i16 -12799, i16 -12819, i16 -12840, i16 -12861, i16 -12881, i16 -12902, i16 -12923, i16 -12943, i16 -12964, i16 -12985, i16 -13005, i16 -13026, i16 -13046, i16 -13067, i16 -13087, i16 -13108, i16 -13128, i16 -13149, i16 -13169, i16 -13189, i16 -13210, i16 -13230, i16 -13251, i16 -13271, i16 -13291, i16 -13312, i16 -13332, i16 -13352, i16 -13373, i16 -13393, i16 -13413, i16 -13433, i16 -13454, i16 -13474, i16 -13494, i16 -13514, i16 -13534, i16 -13554, i16 -13575, i16 -13595, i16 -13615, i16 -13635, i16 -13655, i16 -13675, i16 -13695, i16 -13715, i16 -13735, i16 -13755, i16 -13775, i16 -13795, i16 -13815, i16 -13835, i16 -13855, i16 -13875, i16 -13894, i16 -13914, i16 -13934, i16 -13954, i16 -13974, i16 -13994, i16 -14013, i16 -14033, i16 -14053, i16 -14073, i16 -14092, i16 -14112, i16 -14132, i16 -14151, i16 -14171, i16 -14191, i16 -14210, i16 -14230, i16 -14250, i16 -14269, i16 -14289, i16 -14308, i16 -14328, i16 -14347, i16 -14367, i16 -14386, i16 -14406, i16 -14425, i16 -14445, i16 -14464, i16 -14484, i16 -14503, i16 -14523, i16 -14542, i16 -14561, i16 -14581, i16 -14600, i16 -14619, i16 -14639, i16 -14658, i16 -14677, i16 -14696, i16 -14716, i16 -14735, i16 -14754, i16 -14773, i16 -14793, i16 -14812, i16 -14831, i16 -14850, i16 -14869, i16 -14888, i16 -14907, i16 -14926, i16 -14946, i16 -14965, i16 -14984, i16 -15003, i16 -15022, i16 -15041, i16 -15060, i16 -15079, i16 -15098, i16 -15117, i16 -15136, i16 -15154, i16 -15173, i16 -15192, i16 -15211, i16 -15230, i16 -15249, i16 -15268, i16 -15287, i16 -15305, i16 -15324, i16 -15343, i16 -15362, i16 -15380, i16 -15399, i16 -15418, i16 -15437, i16 -15455, i16 -15474, i16 -15493, i16 -15511, i16 -15530, i16 -15549, i16 -15567, i16 -15586, i16 -15604, i16 -15623, i16 -15641, i16 -15660, i16 -15679, i16 -15697, i16 -15716, i16 -15734, i16 -15752, i16 -15771, i16 -15789, i16 -15808, i16 -15826, i16 -15845, i16 -15863, i16 -15881, i16 -15900, i16 -15918, i16 -15936, i16 -15955, i16 -15973, i16 -15991, i16 -16010, i16 -16028, i16 -16046, i16 -16064, i16 -16083, i16 -16101, i16 -16119, i16 -16137, i16 -16155, i16 -16174, i16 -16192, i16 -16210, i16 -16228, i16 -16246, i16 -16264, i16 -16282, i16 -16300, i16 -16318, i16 -16336, i16 -16354, i16 -16372, i16 -16390, i16 -16408, i16 -16426, i16 -16444, i16 -16462, i16 -16480, i16 -16498, i16 -16516, i16 -16534, i16 -16552, i16 -16570, i16 -16588, i16 -16605, i16 -16623, i16 -16641, i16 -16659, i16 -16677, i16 -16695, i16 -16712, i16 -16730, i16 -16748, i16 -16766, i16 -16783, i16 -16801, i16 -16819, i16 -16836, i16 -16854, i16 -16872, i16 -16889, i16 -16907, i16 -16924, i16 -16942, i16 -16960, i16 -16977, i16 -16995, i16 -17012, i16 -17030, i16 -17047, i16 -17065, i16 -17082, i16 -17100, i16 -17117, i16 -17135, i16 -17152, i16 -17170, i16 -17187, i16 -17205, i16 -17222, i16 -17239, i16 -17257, i16 -17274, i16 -17291, i16 -17309, i16 -17326, i16 -17343, i16 -17361, i16 -17378, i16 -17395, i16 -17413, i16 -17430, i16 -17447, i16 -17464, i16 -17481, i16 -17499, i16 -17516, i16 -17533, i16 -17550, i16 -17567, i16 -17584, i16 -17602, i16 -17619, i16 -17636, i16 -17653, i16 -17670, i16 -17687, i16 -17704, i16 -17721, i16 -17738, i16 -17755, i16 -17772, i16 -17789, i16 -17806, i16 -17823, i16 -17840, i16 -17857, i16 -17874, i16 -17891, i16 -17908, i16 -17925, i16 -17942, i16 -17958, i16 -17975, i16 -17992, i16 -18009, i16 -18026, i16 -18043, i16 -18059, i16 -18076, i16 -18093, i16 -18110, i16 -18126, i16 -18143, i16 -18160, i16 -18177, i16 -18193, i16 -18210, i16 -18227, i16 -18243, i16 -18260, i16 -18277, i16 -18293, i16 -18310, i16 -18327, i16 -18343, i16 -18360, i16 -18376, i16 -18393, i16 -18409, i16 -18426, i16 -18443, i16 -18459, i16 -18476, i16 -18492, i16 -18509, i16 -18525, i16 -18541, i16 -18558, i16 -18574, i16 -18591, i16 -18607, i16 -18624, i16 -18640, i16 -18656, i16 -18673, i16 -18689, i16 -18705, i16 -18722, i16 -18738, i16 -18754, i16 -18771, i16 -18787, i16 -18803, i16 -18820, i16 -18836, i16 -18852, i16 -18868, i16 -18885, i16 -18901, i16 -18917, i16 -18933, i16 -18949, i16 -18965, i16 -18982, i16 -18998, i16 -19014, i16 -19030, i16 -19046, i16 -19062, i16 -19078, i16 -19094, i16 -19110, i16 -19126, i16 -19143, i16 -19159, i16 -19175, i16 -19191, i16 -19207, i16 -19223, i16 -19239, i16 -19255, i16 -19270, i16 -19286, i16 -19302, i16 -19318, i16 -19334, i16 -19350, i16 -19366, i16 -19382, i16 -19398, i16 -19414, i16 -19429, i16 -19445, i16 -19461, i16 -19477, i16 -19493, i16 -19508, i16 -19524, i16 -19540, i16 -19556, i16 -19572, i16 -19587, i16 -19603, i16 -19619, i16 -19634, i16 -19650, i16 -19666, i16 -19681, i16 -19697, i16 -19713, i16 -19728, i16 -19744, i16 -19760, i16 -19775, i16 -19791, i16 -19806, i16 -19822, i16 -19838, i16 -19853, i16 -19869, i16 -19884, i16 -19900, i16 -19915, i16 -19931, i16 -19946, i16 -19962, i16 -19977, i16 -19993, i16 -20008, i16 -20024, i16 -20039, i16 -20054, i16 -20070, i16 -20085, i16 -20101, i16 -20116, i16 -20131, i16 -20147, i16 -20162, i16 -20177, i16 -20193, i16 -20208, i16 -20223, i16 -20239, i16 -20254, i16 -20269, i16 -20284, i16 -20300, i16 -20315, i16 -20330, i16 -20345, i16 -20361, i16 -20376, i16 -20391, i16 -20406, i16 -20421, i16 -20436, i16 -20452, i16 -20467, i16 -20482, i16 -20497, i16 -20512, i16 -20527, i16 -20542, i16 -20557, i16 -20572, i16 -20587, i16 -20603, i16 -20618, i16 -20633, i16 -20648, i16 -20663, i16 -20678, i16 -20693, i16 -20708, i16 -20723, i16 -20738, i16 -20752, i16 -20767, i16 -20782, i16 -20797, i16 -20812, i16 -20827, i16 -20842, i16 -20857, i16 -20872, i16 -20887, i16 -20901, i16 -20916, i16 -20931, i16 -20946, i16 -20961, i16 -20975, i16 -20990, i16 -21005, i16 -21020, i16 -21035, i16 -21049, i16 -21064, i16 -21079, i16 -21094, i16 -21108, i16 -21123, i16 -21138, i16 -21152, i16 -21167, i16 -21182, i16 -21196, i16 -21211, i16 -21226, i16 -21240, i16 -21255, i16 -21269, i16 -21284, i16 -21299, i16 -21313, i16 -21328, i16 -21342, i16 -21357, i16 -21371, i16 -21386, i16 -21400, i16 -21415, i16 -21429, i16 -21444, i16 -21458, i16 -21473, i16 -21487, i16 -21502, i16 -21516, i16 -21531, i16 -21545, i16 -21560, i16 -21574, i16 -21588, i16 -21603, i16 -21617, i16 -21631, i16 -21646, i16 -21660, i16 -21674, i16 -21689, i16 -21703, i16 -21717, i16 -21732, i16 -21746, i16 -21760, i16 -21775, i16 -21789, i16 -21803, i16 -21817, i16 -21832, i16 -21846, i16 -21860, i16 -21874, i16 -21888, i16 -21903, i16 -21917, i16 -21931, i16 -21945, i16 -21959, i16 -21973, i16 -21988, i16 -22002, i16 -22016, i16 -22030, i16 -22044, i16 -22058, i16 -22072, i16 -22086, i16 -22100, i16 -22114, i16 -22128, i16 -22142, i16 -22156, i16 -22171, i16 -22185, i16 -22199, i16 -22213, i16 -22226, i16 -22240, i16 -22254, i16 -22268, i16 -22282, i16 -22296, i16 -22310, i16 -22324, i16 -22338, i16 -22352, i16 -22366, i16 -22380, i16 -22394, i16 -22407, i16 -22421, i16 -22435, i16 -22449, i16 -22463, i16 -22477, i16 -22490, i16 -22504, i16 -22518, i16 -22532, i16 -22546, i16 -22559, i16 -22573, i16 -22587, i16 -22601, i16 -22614, i16 -22628, i16 -22642, i16 -22655, i16 -22669, i16 -22683, i16 -22696, i16 -22710, i16 -22724, i16 -22737, i16 -22751, i16 -22765, i16 -22778, i16 -22792, i16 -22806, i16 -22819, i16 -22833, i16 -22846, i16 -22860, i16 -22874, i16 -22887, i16 -22901, i16 -22914, i16 -22928, i16 -22941, i16 -22955, i16 -22968, i16 -22982, i16 -22995, i16 -23009, i16 -23022, i16 -23036, i16 -23049, i16 -23063, i16 -23076, i16 -23089, i16 -23103, i16 -23116, i16 -23130, i16 -23143, i16 -23156, i16 -23170, i16 -23183, i16 -23197, i16 -23210, i16 -23223, i16 -23237, i16 -23250, i16 -23263, i16 -23277, i16 -23290, i16 -23303, i16 -23316, i16 -23330, i16 -23343, i16 -23356, i16 -23369, i16 -23383, i16 -23396, i16 -23409, i16 -23422, i16 -23436, i16 -23449, i16 -23462, i16 -23475, i16 -23488, i16 -23502, i16 -23515, i16 -23528, i16 -23541, i16 -23554, i16 -23567, i16 -23580, i16 -23593, i16 -23607, i16 -23620, i16 -23633, i16 -23646, i16 -23659, i16 -23672, i16 -23685, i16 -23698, i16 -23711, i16 -23724, i16 -23737, i16 -23750, i16 -23763, i16 -23776, i16 -23789, i16 -23802, i16 -23815, i16 -23828, i16 -23841, i16 -23854, i16 -23867, i16 -23880, i16 -23893, i16 -23906, i16 -23919, i16 -23931, i16 -23944, i16 -23957, i16 -23970, i16 -23983, i16 -23996, i16 -24009, i16 -24022, i16 -24034, i16 -24047, i16 -24060, i16 -24073, i16 -24086, i16 -24098, i16 -24111, i16 -24124, i16 -24137, i16 -24150, i16 -24162, i16 -24175, i16 -24188, i16 -24201, i16 -24213, i16 -24226, i16 -24239, i16 -24251, i16 -24264, i16 -24277, i16 -24290, i16 -24302, i16 -24315, i16 -24327, i16 -24340, i16 -24353, i16 -24365, i16 -24378, i16 -24391, i16 -24403, i16 -24416, i16 -24428, i16 -24441, i16 -24454, i16 -24466, i16 -24479, i16 -24491, i16 -24504, i16 -24516, i16 -24529, i16 -24541, i16 -24554, i16 -24566, i16 -24579, i16 -24591, i16 -24604, i16 -24616, i16 -24629, i16 -24641, i16 -24654, i16 -24666, i16 -24679, i16 -24691, i16 -24704, i16 -24716, i16 -24728, i16 -24741, i16 -24753, i16 -24766, i16 -24778, i16 -24790, i16 -24803, i16 -24815, i16 -24827, i16 -24840, i16 -24852, i16 -24864, i16 -24877, i16 -24889, i16 -24901, i16 -24914, i16 -24926, i16 -24938, i16 -24951, i16 -24963, i16 -24975, i16 -24987, i16 -25000, i16 -25012, i16 -25024, i16 -25036, i16 -25048, i16 -25061, i16 -25073, i16 -25085, i16 -25097, i16 -25109, i16 -25122, i16 -25134, i16 -25146, i16 -25158, i16 -25170, i16 -25182, i16 -25195, i16 -25207, i16 -25219, i16 -25231, i16 -25243, i16 -25255, i16 -25267, i16 -25279, i16 -25291, i16 -25303, i16 -25315, i16 -25327, i16 -25340, i16 -25352, i16 -25364, i16 -25376, i16 -25388, i16 -25400, i16 -25412, i16 -25424, i16 -25436, i16 -25448, i16 -25460, i16 -25472, i16 -25483, i16 -25495, i16 -25507, i16 -25519, i16 -25531, i16 -25543, i16 -25555, i16 -25567, i16 -25579, i16 -25591, i16 -25603, i16 -25615, i16 -25626, i16 -25638, i16 -25650, i16 -25662, i16 -25674, i16 -25686, i16 -25697, i16 -25709, i16 -25721, i16 -25733, i16 -25745, i16 -25756, i16 -25768, i16 -25780, i16 -25792, i16 -25804, i16 -25815, i16 -25827, i16 -25839, i16 -25851, i16 -25862, i16 -25874, i16 -25886, i16 -25897, i16 -25909, i16 -25921, i16 -25933, i16 -25944, i16 -25956, i16 -25968, i16 -25979, i16 -25991, i16 -26003, i16 -26014, i16 -26026, i16 -26037, i16 -26049, i16 -26061, i16 -26072, i16 -26084, i16 -26095, i16 -26107, i16 -26119, i16 -26130, i16 -26142, i16 -26153, i16 -26165, i16 -26176, i16 -26188, i16 -26200, i16 -26211, i16 -26223, i16 -26234, i16 -26246, i16 -26257, i16 -26269, i16 -26280, i16 -26292, i16 -26303, i16 -26314, i16 -26326, i16 -26337, i16 -26349, i16 -26360, i16 -26372, i16 -26383, i16 -26395, i16 -26406, i16 -26417, i16 -26429, i16 -26440, i16 -26452, i16 -26463, i16 -26474, i16 -26486, i16 -26497, i16 -26508, i16 -26520, i16 -26531, i16 -26542, i16 -26554, i16 -26565, i16 -26576, i16 -26588, i16 -26599, i16 -26610, i16 -26622, i16 -26633, i16 -26644, i16 -26655, i16 -26667, i16 -26678, i16 -26689, i16 -26700, i16 -26712, i16 -26723, i16 -26734, i16 -26745, i16 -26756, i16 -26768, i16 -26779, i16 -26790, i16 -26801, i16 -26812, i16 -26824, i16 -26835, i16 -26846, i16 -26857, i16 -26868, i16 -26879, i16 -26890, i16 -26902, i16 -26913, i16 -26924, i16 -26935, i16 -26946, i16 -26957, i16 -26968, i16 -26979, i16 -26990, i16 -27001, i16 -27012, i16 -27024, i16 -27035, i16 -27046, i16 -27057, i16 -27068, i16 -27079, i16 -27090, i16 -27101, i16 -27112, i16 -27123, i16 -27134, i16 -27145, i16 -27156, i16 -27167, i16 -27178, i16 -27189, i16 -27200, i16 -27210, i16 -27221, i16 -27232, i16 -27243, i16 -27254, i16 -27265, i16 -27276, i16 -27287, i16 -27298, i16 -27309, i16 -27320, i16 -27330, i16 -27341, i16 -27352, i16 -27363, i16 -27374, i16 -27385, i16 -27396, i16 -27406, i16 -27417, i16 -27428, i16 -27439, i16 -27450, i16 -27461, i16 -27471, i16 -27482, i16 -27493, i16 -27504, i16 -27514, i16 -27525, i16 -27536, i16 -27547, i16 -27558, i16 -27568, i16 -27579, i16 -27590, i16 -27600, i16 -27611, i16 -27622, i16 -27633, i16 -27643, i16 -27654, i16 -27665, i16 -27675, i16 -27686, i16 -27697, i16 -27707, i16 -27718, i16 -27729, i16 -27739, i16 -27750, i16 -27761, i16 -27771, i16 -27782, i16 -27792, i16 -27803, i16 -27814, i16 -27824, i16 -27835, i16 -27845, i16 -27856, i16 -27867, i16 -27877, i16 -27888, i16 -27898, i16 -27909, i16 -27919, i16 -27930, i16 -27940, i16 -27951, i16 -27962, i16 -27972, i16 -27983, i16 -27993, i16 -28004, i16 -28014, i16 -28025, i16 -28035, i16 -28046, i16 -28056, i16 -28066, i16 -28077, i16 -28087, i16 -28098, i16 -28108, i16 -28119, i16 -28129, i16 -28140, i16 -28150, i16 -28160, i16 -28171, i16 -28181, i16 -28192, i16 -28202, i16 -28212, i16 -28223, i16 -28233, i16 -28243, i16 -28254, i16 -28264, i16 -28274, i16 -28285, i16 -28295, i16 -28306, i16 -28316, i16 -28326, i16 -28336, i16 -28347, i16 -28357, i16 -28367, i16 -28378, i16 -28388, i16 -28398, i16 -28408, i16 -28419, i16 -28429, i16 -28439, i16 -28450, i16 -28460, i16 -28470, i16 -28480, i16 -28490, i16 -28501, i16 -28511, i16 -28521, i16 -28531, i16 -28542, i16 -28552, i16 -28562, i16 -28572, i16 -28582, i16 -28592, i16 -28603, i16 -28613, i16 -28623, i16 -28633, i16 -28643, i16 -28653, i16 -28663, i16 -28674, i16 -28684, i16 -28694, i16 -28704, i16 -28714, i16 -28724, i16 -28734, i16 -28744, i16 -28754, i16 -28765, i16 -28775, i16 -28785, i16 -28795, i16 -28805, i16 -28815, i16 -28825, i16 -28835, i16 -28845, i16 -28855, i16 -28865, i16 -28875, i16 -28885, i16 -28895, i16 -28905, i16 -28915, i16 -28925, i16 -28935, i16 -28945, i16 -28955, i16 -28965, i16 -28975, i16 -28985, i16 -28995, i16 -29005, i16 -29015, i16 -29025, i16 -29035, i16 -29044, i16 -29054, i16 -29064, i16 -29074, i16 -29084, i16 -29094, i16 -29104, i16 -29114, i16 -29124, i16 -29134, i16 -29143, i16 -29153, i16 -29163, i16 -29173, i16 -29183, i16 -29193, i16 -29203, i16 -29212, i16 -29222, i16 -29232, i16 -29242, i16 -29252, i16 -29261, i16 -29271, i16 -29281, i16 -29291, i16 -29301, i16 -29310, i16 -29320, i16 -29330, i16 -29340, i16 -29349, i16 -29359, i16 -29369, i16 -29379, i16 -29388, i16 -29398, i16 -29408, i16 -29418, i16 -29427, i16 -29437, i16 -29447, i16 -29456, i16 -29466, i16 -29476, i16 -29486, i16 -29495, i16 -29505, i16 -29515, i16 -29524, i16 -29534, i16 -29544, i16 -29553, i16 -29563, i16 -29572, i16 -29582, i16 -29592, i16 -29601, i16 -29611, i16 -29621, i16 -29630, i16 -29640, i16 -29649, i16 -29659, i16 -29669, i16 -29678, i16 -29688, i16 -29697, i16 -29707, i16 -29716, i16 -29726, i16 -29736, i16 -29745, i16 -29755, i16 -29764, i16 -29774, i16 -29783, i16 -29793, i16 -29802, i16 -29812, i16 -29821, i16 -29831, i16 -29840, i16 -29850, i16 -29859, i16 -29869, i16 -29878, i16 -29888, i16 -29897, i16 -29907, i16 -29916, i16 -29926, i16 -29935, i16 -29944, i16 -29954, i16 -29963, i16 -29973, i16 -29982, i16 -29992, i16 -30001, i16 -30010, i16 -30020, i16 -30029, i16 -30039, i16 -30048, i16 -30057, i16 -30067, i16 -30076, i16 -30085, i16 -30095, i16 -30104, i16 -30114, i16 -30123, i16 -30132, i16 -30142, i16 -30151, i16 -30160, i16 -30170, i16 -30179, i16 -30188, i16 -30197, i16 -30207, i16 -30216, i16 -30225, i16 -30235, i16 -30244, i16 -30253, i16 -30262, i16 -30272, i16 -30281, i16 -30290, i16 -30299, i16 -30309, i16 -30318, i16 -30327, i16 -30336, i16 -30346, i16 -30355, i16 -30364, i16 -30373, i16 -30383, i16 -30392, i16 -30401, i16 -30410, i16 -30419, i16 -30429, i16 -30438, i16 -30447, i16 -30456, i16 -30465, i16 -30474, i16 -30484, i16 -30493, i16 -30502, i16 -30511, i16 -30520, i16 -30529, i16 -30538, i16 -30548, i16 -30557, i16 -30566, i16 -30575, i16 -30584, i16 -30593, i16 -30602, i16 -30611, i16 -30620, i16 -30629, i16 -30638, i16 -30648, i16 -30657, i16 -30666, i16 -30675, i16 -30684, i16 -30693, i16 -30702, i16 -30711, i16 -30720, i16 -30729, i16 -30738, i16 -30747, i16 -30756, i16 -30765, i16 -30774, i16 -30783, i16 -30792, i16 -30801, i16 -30810, i16 -30819, i16 -30828, i16 -30837, i16 -30846, i16 -30855, i16 -30864, i16 -30873, i16 -30882, i16 -30891, i16 -30900, i16 -30909, i16 -30918, i16 -30926, i16 -30935, i16 -30944, i16 -30953, i16 -30962, i16 -30971, i16 -30980, i16 -30989, i16 -30998, i16 -31007, i16 -31015, i16 -31024, i16 -31033, i16 -31042, i16 -31051, i16 -31060, i16 -31069, i16 -31078, i16 -31086, i16 -31095, i16 -31104, i16 -31113, i16 -31122, i16 -31131, i16 -31139, i16 -31148, i16 -31157, i16 -31166, i16 -31175, i16 -31183, i16 -31192, i16 -31201, i16 -31210, i16 -31218, i16 -31227, i16 -31236, i16 -31245, i16 -31254, i16 -31262, i16 -31271, i16 -31280, i16 -31289, i16 -31297, i16 -31306, i16 -31315, i16 -31323, i16 -31332, i16 -31341, i16 -31350, i16 -31358, i16 -31367, i16 -31376, i16 -31384, i16 -31393, i16 -31402, i16 -31410, i16 -31419, i16 -31428, i16 -31436, i16 -31445, i16 -31454, i16 -31462, i16 -31471, i16 -31480, i16 -31488, i16 -31497, i16 -31506, i16 -31514, i16 -31523, i16 -31531, i16 -31540, i16 -31549, i16 -31557, i16 -31566, i16 -31575, i16 -31583, i16 -31592, i16 -31600, i16 -31609, i16 -31617, i16 -31626, i16 -31635, i16 -31643, i16 -31652, i16 -31660, i16 -31669, i16 -31677, i16 -31686, i16 -31694, i16 -31703, i16 -31711, i16 -31720, i16 -31729, i16 -31737, i16 -31746, i16 -31754, i16 -31763, i16 -31771, i16 -31780, i16 -31788, i16 -31796, i16 -31805, i16 -31813, i16 -31822, i16 -31830, i16 -31839, i16 -31847, i16 -31856, i16 -31864, i16 -31873, i16 -31881, i16 -31890, i16 -31898, i16 -31906, i16 -31915, i16 -31923, i16 -31932, i16 -31940, i16 -31948, i16 -31957, i16 -31965, i16 -31974, i16 -31982, i16 -31990, i16 -31999, i16 -32007, i16 -32016, i16 -32024, i16 -32032, i16 -32041, i16 -32049, i16 -32057, i16 -32066, i16 -32074, i16 -32082, i16 -32091, i16 -32099, i16 -32107, i16 -32116, i16 -32124, i16 -32132, i16 -32141, i16 -32149, i16 -32157, i16 -32166, i16 -32174, i16 -32182, i16 -32190, i16 -32199, i16 -32207, i16 -32215, i16 -32224, i16 -32232, i16 -32240, i16 -32248, i16 -32257, i16 -32265, i16 -32273, i16 -32281, i16 -32290, i16 -32298, i16 -32306, i16 -32314, i16 -32323, i16 -32331, i16 -32339, i16 -32347, i16 -32355, i16 -32364, i16 -32372, i16 -32380, i16 -32388, i16 -32396, i16 -32404, i16 -32413, i16 -32421, i16 -32429, i16 -32437, i16 -32445, i16 -32453, i16 -32462, i16 -32470, i16 -32478, i16 -32486, i16 -32494, i16 -32502, i16 -32510, i16 -32519, i16 -32527, i16 -32535, i16 -32543, i16 -32551, i16 -32559, i16 -32567, i16 -32575, i16 -32583, i16 -32592, i16 -32600, i16 -32608, i16 -32616, i16 -32624, i16 -32632, i16 -32640, i16 -32648, i16 -32656, i16 -32664, i16 -32672, i16 -32680, i16 -32688, i16 -32696, i16 -32704, i16 -32712, i16 -32720, i16 -32728, i16 -32736, i16 -32744, i16 -32752], align 16
@.str = private unnamed_addr constant [116 x i8] c"((_src.rows <= SRC_ROWS ) && (_src.cols <= SRC_COLS)) && \22SRC_ROWS and SRC_COLS should be greater than input image\22\00", align 1
@.str1 = private unnamed_addr constant [14 x i8] c"xf_resize.hpp\00", align 1
@__PRETTY_FUNCTION__._ZL117p_ZN2xf6resizeILi2ELi0ELi256ELi256ELi1080ELi1920ELi1ELi2EEER3MatILi0ELi256ELi256ELi1EER3MatILi0ELi1080ELi1920ELi1EE_1R19xf_Mat_0_256_256_1_R21xf_Mat_0_1080_1920_1_ = private unnamed_addr constant [185 x i8] c"void p_ZN2xf6resizeILi2ELi0ELi256ELi256ELi1080ELi1920ELi1ELi2EEER3MatILi0ELi256ELi256ELi1EER3MatILi0ELi1080ELi1920ELi1EE_1(struct xf_Mat_0_256_256_1_ &, struct xf_Mat_0_1080_1920_1_ &)\00", align 1
@.str2 = private unnamed_addr constant [117 x i8] c"((_dst.rows <= DST_ROWS ) && (_dst.cols <= DST_COLS)) && \22DST_ROWS and DST_COLS should be greater than output image\22\00", align 1
@.str3 = private unnamed_addr constant [143 x i8] c"(_rows > 0) && (_rows <= ROWS) && (_cols > 0) && (_cols <= COLS) && \22The number of rows and columns must be less than the template arguments.\22\00", align 1
@.str4 = private unnamed_addr constant [13 x i8] c"xf_structs.h\00", align 1
@__PRETTY_FUNCTION__._ZL40p_ZN2xf18Mat_0_1080_1920_1_4initIEEiib_1P21xf_Mat_0_1080_1920_1_iib = private unnamed_addr constant [94 x i8] c"void p_ZN2xf18Mat_0_1080_1920_1_4initIEEiib_1(struct xf_Mat_0_1080_1920_1_ *, int, int, bool)\00", align 1
@__PRETTY_FUNCTION__._ZL38p_ZN2xf16Mat_0_256_256_1_4initIEEiib_1P19xf_Mat_0_256_256_1_iib = private unnamed_addr constant [90 x i8] c"void p_ZN2xf16Mat_0_256_256_1_4initIEEiib_1(struct xf_Mat_0_256_256_1_ *, int, int, bool)\00", align 1

define void @_Z12resize_accelP7ap_uintILi256EES1_iiii(%class.ap_uint* %img_inp, %class.ap_uint* %img_out, i32 %rows_in, i32 %cols_in, i32 %rows_out, i32 %cols_out) uwtable {
  %1 = alloca %class.ap_uint*, align 8
  %2 = alloca %class.ap_uint*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %pROWS_INP = alloca i32, align 4
  %pCOLS_INP = alloca i32, align 4
  %pROWS_OUT = alloca i32, align 4
  %pCOLS_OUT = alloca i32, align 4
  %pNPC = alloca i32, align 4
  %in_mat = alloca %struct.xf_Mat_0_256_256_1_, align 4
  %out_mat = alloca %struct.xf_Mat_0_1080_1920_1_, align 4
  store %class.ap_uint* %img_inp, %class.ap_uint** %1, align 8
  store %class.ap_uint* %img_out, %class.ap_uint** %2, align 8
  store i32 %rows_in, i32* %3, align 4
  store i32 %cols_in, i32* %4, align 4
  store i32 %rows_out, i32* %5, align 4
  store i32 %cols_out, i32* %6, align 4
  store i32 256, i32* %pROWS_INP, align 4
  store i32 256, i32* %pCOLS_INP, align 4
  store i32 1080, i32* %pROWS_OUT, align 4
  store i32 1920, i32* %pCOLS_OUT, align 4
  store i32 1, i32* %pNPC, align 4
  call void @_ZN19xf_Mat_0_256_256_1_C1Ev(%struct.xf_Mat_0_256_256_1_* %in_mat)
  call void @_ZL33p_ZN2xf16Mat_0_256_256_1_C2IEEv_1P19xf_Mat_0_256_256_1_(%struct.xf_Mat_0_256_256_1_* %in_mat)
  call void @_ZN21xf_Mat_0_1080_1920_1_C1Ev(%struct.xf_Mat_0_1080_1920_1_* %out_mat)
  call void @_ZL35p_ZN2xf18Mat_0_1080_1920_1_C2IEEv_1P21xf_Mat_0_1080_1920_1_(%struct.xf_Mat_0_1080_1920_1_* %out_mat)
  %7 = load i32* %3, align 4
  %8 = getelementptr inbounds %struct.xf_Mat_0_256_256_1_* %in_mat, i32 0, i32 1
  store i32 %7, i32* %8, align 4
  %9 = load i32* %4, align 4
  %10 = getelementptr inbounds %struct.xf_Mat_0_256_256_1_* %in_mat, i32 0, i32 2
  store i32 %9, i32* %10, align 4
  %11 = load i32* %5, align 4
  %12 = getelementptr inbounds %struct.xf_Mat_0_1080_1920_1_* %out_mat, i32 0, i32 1
  store i32 %11, i32* %12, align 4
  %13 = load i32* %6, align 4
  %14 = getelementptr inbounds %struct.xf_Mat_0_1080_1920_1_* %out_mat, i32 0, i32 2
  store i32 %13, i32* %14, align 4
  %15 = load %class.ap_uint** %1, align 8
  call void @_ZL95p_ZN2xf11Array2xfMatILi256ELi0ELi256ELi256ELi1EEEP7ap_uintILi256EER3MatILi0ELi256ELi256ELi1EE_1P7ap_uintILi256EER19xf_Mat_0_256_256_1_(%class.ap_uint* %15, %struct.xf_Mat_0_256_256_1_* %in_mat)
  call void @_ZL117p_ZN2xf6resizeILi2ELi0ELi256ELi256ELi1080ELi1920ELi1ELi2EEER3MatILi0ELi256ELi256ELi1EER3MatILi0ELi1080ELi1920ELi1EE_1R19xf_Mat_0_256_256_1_R21xf_Mat_0_1080_1920_1_(%struct.xf_Mat_0_256_256_1_* %in_mat, %struct.xf_Mat_0_1080_1920_1_* %out_mat)
  %16 = load %class.ap_uint** %2, align 8
  call void @_ZL99p_ZN2xf11xfMat2ArrayILi256ELi0ELi1080ELi1920ELi1EEER3MatILi0ELi1080ELi1920ELi1EEP7ap_uintILi256EE_1R21xf_Mat_0_1080_1920_1_P7ap_uintILi256EE(%struct.xf_Mat_0_1080_1920_1_* %out_mat, %class.ap_uint* %16)
  ret void
}

define linkonce_odr void @_ZN19xf_Mat_0_256_256_1_C1Ev(%struct.xf_Mat_0_256_256_1_* %this) unnamed_addr uwtable inlinehint align 2 {
  %1 = alloca %struct.xf_Mat_0_256_256_1_*, align 8
  store %struct.xf_Mat_0_256_256_1_* %this, %struct.xf_Mat_0_256_256_1_** %1, align 8
  %2 = load %struct.xf_Mat_0_256_256_1_** %1
  call void @_ZN19xf_Mat_0_256_256_1_C2Ev(%struct.xf_Mat_0_256_256_1_* %2)
  ret void
}

define internal void @_ZL33p_ZN2xf16Mat_0_256_256_1_C2IEEv_1P19xf_Mat_0_256_256_1_(%struct.xf_Mat_0_256_256_1_* %this_) uwtable {
  %1 = alloca %struct.xf_Mat_0_256_256_1_*, align 8
  store %struct.xf_Mat_0_256_256_1_* %this_, %struct.xf_Mat_0_256_256_1_** %1, align 8
  %2 = load %struct.xf_Mat_0_256_256_1_** %1, align 8
  call void @_ZL38p_ZN2xf16Mat_0_256_256_1_4initIEEiib_1P19xf_Mat_0_256_256_1_iib(%struct.xf_Mat_0_256_256_1_* %2, i32 256, i32 256, i1 zeroext true)
  ret void
}

define linkonce_odr void @_ZN21xf_Mat_0_1080_1920_1_C1Ev(%struct.xf_Mat_0_1080_1920_1_* %this) unnamed_addr uwtable inlinehint align 2 {
  %1 = alloca %struct.xf_Mat_0_1080_1920_1_*, align 8
  store %struct.xf_Mat_0_1080_1920_1_* %this, %struct.xf_Mat_0_1080_1920_1_** %1, align 8
  %2 = load %struct.xf_Mat_0_1080_1920_1_** %1
  call void @_ZN21xf_Mat_0_1080_1920_1_C2Ev(%struct.xf_Mat_0_1080_1920_1_* %2)
  ret void
}

define internal void @_ZL35p_ZN2xf18Mat_0_1080_1920_1_C2IEEv_1P21xf_Mat_0_1080_1920_1_(%struct.xf_Mat_0_1080_1920_1_* %this_) uwtable {
  %1 = alloca %struct.xf_Mat_0_1080_1920_1_*, align 8
  store %struct.xf_Mat_0_1080_1920_1_* %this_, %struct.xf_Mat_0_1080_1920_1_** %1, align 8
  %2 = load %struct.xf_Mat_0_1080_1920_1_** %1, align 8
  call void @_ZL40p_ZN2xf18Mat_0_1080_1920_1_4initIEEiib_1P21xf_Mat_0_1080_1920_1_iib(%struct.xf_Mat_0_1080_1920_1_* %2, i32 1080, i32 1920, i1 zeroext true)
  ret void
}

define internal void @_ZL95p_ZN2xf11Array2xfMatILi256ELi0ELi256ELi256ELi1EEEP7ap_uintILi256EER3MatILi0ELi256ELi256ELi1EE_1P7ap_uintILi256EER19xf_Mat_0_256_256_1_(%class.ap_uint* %srcPtr, %struct.xf_Mat_0_256_256_1_* %dstMat) uwtable {
  %1 = alloca %class.ap_uint*, align 8
  %2 = alloca %struct.xf_Mat_0_256_256_1_*, align 8
  %au = alloca %struct.xf_accel_utils, align 1
  store %class.ap_uint* %srcPtr, %class.ap_uint** %1, align 8
  store %struct.xf_Mat_0_256_256_1_* %dstMat, %struct.xf_Mat_0_256_256_1_** %2, align 8
  %3 = load %class.ap_uint** %1, align 8
  %4 = load %struct.xf_Mat_0_256_256_1_** %2, align 8
  call void @_ZL108p_ZN2xf11accel_utils11Array2xfMatILi256ELi0ELi256ELi256ELi1EEEP7ap_uintILi256EER3MatILi0ELi256ELi256ELi1EE_1P14xf_accel_utilsP7ap_uintILi256EER19xf_Mat_0_256_256_1_(%struct.xf_accel_utils* %au, %class.ap_uint* %3, %struct.xf_Mat_0_256_256_1_* %4)
  ret void
}

define internal void @_ZL117p_ZN2xf6resizeILi2ELi0ELi256ELi256ELi1080ELi1920ELi1ELi2EEER3MatILi0ELi256ELi256ELi1EER3MatILi0ELi1080ELi1920ELi1EE_1R19xf_Mat_0_256_256_1_R21xf_Mat_0_1080_1920_1_(%struct.xf_Mat_0_256_256_1_* %_src, %struct.xf_Mat_0_1080_1920_1_* %_dst) uwtable {
  %1 = alloca %struct.xf_Mat_0_256_256_1_*, align 8
  %2 = alloca %struct.xf_Mat_0_1080_1920_1_*, align 8
  %input_height = alloca i16, align 2
  %input_width = alloca i16, align 2
  %output_height = alloca i16, align 2
  %output_width = alloca i16, align 2
  store %struct.xf_Mat_0_256_256_1_* %_src, %struct.xf_Mat_0_256_256_1_** %1, align 8
  store %struct.xf_Mat_0_1080_1920_1_* %_dst, %struct.xf_Mat_0_1080_1920_1_** %2, align 8
  %3 = load %struct.xf_Mat_0_256_256_1_** %1, align 8
  %4 = getelementptr inbounds %struct.xf_Mat_0_256_256_1_* %3, i32 0, i32 1
  %5 = load i32* %4, align 4
  %6 = icmp sle i32 %5, 256
  br i1 %6, label %7, label %13

; <label>:7                                       ; preds = %0
  %8 = load %struct.xf_Mat_0_256_256_1_** %1, align 8
  %9 = getelementptr inbounds %struct.xf_Mat_0_256_256_1_* %8, i32 0, i32 2
  %10 = load i32* %9, align 4
  %11 = icmp sle i32 %10, 256
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %7
  br label %15

; <label>:13                                      ; preds = %7, %0
  call void @__assert_fail(i8* getelementptr inbounds ([116 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str1, i32 0, i32 0), i32 73, i8* getelementptr inbounds ([185 x i8]* @__PRETTY_FUNCTION__._ZL117p_ZN2xf6resizeILi2ELi0ELi256ELi256ELi1080ELi1920ELi1ELi2EEER3MatILi0ELi256ELi256ELi1EER3MatILi0ELi1080ELi1920ELi1EE_1R19xf_Mat_0_256_256_1_R21xf_Mat_0_1080_1920_1_, i32 0, i32 0)) noreturn nounwind
  unreachable
                                                  ; No predecessors!
  br label %15

; <label>:15                                      ; preds = %14, %12
  %16 = load %struct.xf_Mat_0_1080_1920_1_** %2, align 8
  %17 = getelementptr inbounds %struct.xf_Mat_0_1080_1920_1_* %16, i32 0, i32 1
  %18 = load i32* %17, align 4
  %19 = icmp sle i32 %18, 1080
  br i1 %19, label %20, label %26

; <label>:20                                      ; preds = %15
  %21 = load %struct.xf_Mat_0_1080_1920_1_** %2, align 8
  %22 = getelementptr inbounds %struct.xf_Mat_0_1080_1920_1_* %21, i32 0, i32 2
  %23 = load i32* %22, align 4
  %24 = icmp sle i32 %23, 1920
  br i1 %24, label %25, label %26

; <label>:25                                      ; preds = %20
  br label %28

; <label>:26                                      ; preds = %20, %15
  call void @__assert_fail(i8* getelementptr inbounds ([117 x i8]* @.str2, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str1, i32 0, i32 0), i32 75, i8* getelementptr inbounds ([185 x i8]* @__PRETTY_FUNCTION__._ZL117p_ZN2xf6resizeILi2ELi0ELi256ELi256ELi1080ELi1920ELi1ELi2EEER3MatILi0ELi256ELi256ELi1EER3MatILi0ELi1080ELi1920ELi1EE_1R19xf_Mat_0_256_256_1_R21xf_Mat_0_1080_1920_1_, i32 0, i32 0)) noreturn nounwind
  unreachable
                                                  ; No predecessors!
  br label %28

; <label>:28                                      ; preds = %27, %25
  %29 = load %struct.xf_Mat_0_256_256_1_** %1, align 8
  %30 = getelementptr inbounds %struct.xf_Mat_0_256_256_1_* %29, i32 0, i32 1
  %31 = load i32* %30, align 4
  %32 = trunc i32 %31 to i16
  store i16 %32, i16* %input_height, align 2
  %33 = load %struct.xf_Mat_0_256_256_1_** %1, align 8
  %34 = getelementptr inbounds %struct.xf_Mat_0_256_256_1_* %33, i32 0, i32 2
  %35 = load i32* %34, align 4
  %36 = ashr i32 %35, 0
  %37 = trunc i32 %36 to i16
  store i16 %37, i16* %input_width, align 2
  %38 = load %struct.xf_Mat_0_1080_1920_1_** %2, align 8
  %39 = getelementptr inbounds %struct.xf_Mat_0_1080_1920_1_* %38, i32 0, i32 1
  %40 = load i32* %39, align 4
  %41 = trunc i32 %40 to i16
  store i16 %41, i16* %output_height, align 2
  %42 = load %struct.xf_Mat_0_1080_1920_1_** %2, align 8
  %43 = getelementptr inbounds %struct.xf_Mat_0_1080_1920_1_* %42, i32 0, i32 2
  %44 = load i32* %43, align 4
  %45 = ashr i32 %44, 0
  %46 = trunc i32 %45 to i16
  store i16 %46, i16* %output_width, align 2
  %47 = load %struct.xf_Mat_0_256_256_1_** %1, align 8
  %48 = load %struct.xf_Mat_0_1080_1920_1_** %2, align 8
  %49 = load i16* %input_height, align 2
  %50 = load i16* %input_width, align 2
  %51 = load i16* %output_height, align 2
  %52 = load i16* %output_width, align 2
  call void @_ZL143p_Z19xFResizeAreaUpScaleILi256ELi256ELi1ELi0ELi1ELi1ELi1080ELi1920ELi256ELi1920EER3MatILi0ELi256ELi256ELi1EER3MatILi0ELi1080ELi1920ELi1EEtttt_1R19xf_Mat_0_256_256_1_R21xf_Mat_0_1080_1920_1_tttt(%struct.xf_Mat_0_256_256_1_* %47, %struct.xf_Mat_0_1080_1920_1_* %48, i16 zeroext %49, i16 zeroext %50, i16 zeroext %51, i16 zeroext %52)
  ret void
}

define internal void @_ZL99p_ZN2xf11xfMat2ArrayILi256ELi0ELi1080ELi1920ELi1EEER3MatILi0ELi1080ELi1920ELi1EEP7ap_uintILi256EE_1R21xf_Mat_0_1080_1920_1_P7ap_uintILi256EE(%struct.xf_Mat_0_1080_1920_1_* %srcMat, %class.ap_uint* %dstPtr) uwtable {
  %1 = alloca %struct.xf_Mat_0_1080_1920_1_*, align 8
  %2 = alloca %class.ap_uint*, align 8
  %au = alloca %struct.xf_accel_utils, align 1
  store %struct.xf_Mat_0_1080_1920_1_* %srcMat, %struct.xf_Mat_0_1080_1920_1_** %1, align 8
  store %class.ap_uint* %dstPtr, %class.ap_uint** %2, align 8
  %3 = load %struct.xf_Mat_0_1080_1920_1_** %1, align 8
  %4 = load %class.ap_uint** %2, align 8
  call void @_ZL112p_ZN2xf11accel_utils11xfMat2ArrayILi256ELi0ELi1080ELi1920ELi1EEER3MatILi0ELi1080ELi1920ELi1EEP7ap_uintILi256EE_1P14xf_accel_utilsR21xf_Mat_0_1080_1920_1_P7ap_uintILi256EE(%struct.xf_accel_utils* %au, %struct.xf_Mat_0_1080_1920_1_* %3, %class.ap_uint* %4)
  ret void
}

define internal void @_ZL112p_ZN2xf11accel_utils11xfMat2ArrayILi256ELi0ELi1080ELi1920ELi1EEER3MatILi0ELi1080ELi1920ELi1EEP7ap_uintILi256EE_1P14xf_accel_utilsR21xf_Mat_0_1080_1920_1_P7ap_uintILi256EE(%struct.xf_accel_utils* %this_, %struct.xf_Mat_0_1080_1920_1_* %srcMat, %class.ap_uint* %dstPtr) uwtable {
  %1 = alloca %struct.xf_accel_utils*, align 8
  %2 = alloca %struct.xf_Mat_0_1080_1920_1_*, align 8
  %3 = alloca %class.ap_uint*, align 8
  %ch_width = alloca i32, align 4
  %strm = alloca %"class.hls::stream", align 1
  %rows = alloca i32, align 4
  %cols = alloca i32, align 4
  store %struct.xf_accel_utils* %this_, %struct.xf_accel_utils** %1, align 8
  store %struct.xf_Mat_0_1080_1920_1_* %srcMat, %struct.xf_Mat_0_1080_1920_1_** %2, align 8
  store %class.ap_uint* %dstPtr, %class.ap_uint** %3, align 8
  store i32 8, i32* %ch_width, align 4
  call void @_ZN3hls6streamI7ap_uintILi256EEEC1Ev(%"class.hls::stream"* %strm)
  %4 = load %struct.xf_Mat_0_1080_1920_1_** %2, align 8
  %5 = getelementptr inbounds %struct.xf_Mat_0_1080_1920_1_* %4, i32 0, i32 1
  %6 = load i32* %5, align 4
  store i32 %6, i32* %rows, align 4
  %7 = load %struct.xf_Mat_0_1080_1920_1_** %2, align 8
  %8 = getelementptr inbounds %struct.xf_Mat_0_1080_1920_1_* %7, i32 0, i32 2
  %9 = load i32* %8, align 4
  store i32 %9, i32* %cols, align 4
  %10 = load %struct.xf_accel_utils** %1, align 8
  %11 = load %struct.xf_Mat_0_1080_1920_1_** %2, align 8
  call void @_ZL133p_ZN2xf11accel_utils13xfMat2hlsStrmILi256ELi0ELi1080ELi1920ELi1ELi2073600EEER3MatILi0ELi1080ELi1920ELi1EER6streamI7ap_uintILi256EEE_1P14xf_accel_utilsR21xf_Mat_0_1080_1920_1_RN3hls6streamI7ap_uintILi256EEEE(%struct.xf_accel_utils* %10, %struct.xf_Mat_0_1080_1920_1_* %11, %"class.hls::stream"* %strm)
  %12 = load %struct.xf_accel_utils** %1, align 8
  %13 = load %class.ap_uint** %3, align 8
  %14 = load i32* %rows, align 4
  %15 = load i32* %cols, align 4
  call void @_ZL125p_ZN2xf11accel_utils13hlsStrm2ArrayILi256ELi1080ELi1920ELi1ELi1ELi8ELi64800EEER6streamI7ap_uintILi256EEEP7ap_uintILi256EEii_1P14xf_accel_utilsRN3hls6streamI7ap_uintILi256EEEEPS4_ii(%struct.xf_accel_utils* %12, %"class.hls::stream"* %strm, %class.ap_uint* %13, i32 %14, i32 %15)
  ret void
}

declare void @_ZN3hls6streamI7ap_uintILi256EEEC1Ev(%"class.hls::stream"*)

define internal void @_ZL133p_ZN2xf11accel_utils13xfMat2hlsStrmILi256ELi0ELi1080ELi1920ELi1ELi2073600EEER3MatILi0ELi1080ELi1920ELi1EER6streamI7ap_uintILi256EEE_1P14xf_accel_utilsR21xf_Mat_0_1080_1920_1_RN3hls6streamI7ap_uintILi256EEEE(%struct.xf_accel_utils* %this_, %struct.xf_Mat_0_1080_1920_1_* %srcMat, %"class.hls::stream"* %dstStrm) uwtable {
  %1 = alloca %struct.xf_accel_utils*, align 8
  %2 = alloca %struct.xf_Mat_0_1080_1920_1_*, align 8
  %3 = alloca %"class.hls::stream"*, align 8
  %rows = alloca i32, align 4
  %cols = alloca i32, align 4
  %loop_count = alloca i32, align 4
  %bits_to_add = alloca i32, align 4
  %N_size = alloca i32, align 4
  %r = alloca %class.ap_uint, align 1
  %in = alloca %class.ap_uint.0, align 1
  %i = alloca i32, align 4
  %4 = alloca %class.ap_uint.0, align 1
  store %struct.xf_accel_utils* %this_, %struct.xf_accel_utils** %1, align 8
  store %struct.xf_Mat_0_1080_1920_1_* %srcMat, %struct.xf_Mat_0_1080_1920_1_** %2, align 8
  store %"class.hls::stream"* %dstStrm, %"class.hls::stream"** %3, align 8
  %5 = load %struct.xf_Mat_0_1080_1920_1_** %2, align 8
  %6 = getelementptr inbounds %struct.xf_Mat_0_1080_1920_1_* %5, i32 0, i32 1
  %7 = load i32* %6, align 4
  store i32 %7, i32* %rows, align 4
  %8 = load %struct.xf_Mat_0_1080_1920_1_** %2, align 8
  %9 = getelementptr inbounds %struct.xf_Mat_0_1080_1920_1_* %8, i32 0, i32 2
  %10 = load i32* %9, align 4
  store i32 %10, i32* %cols, align 4
  %11 = load i32* %rows, align 4
  %12 = load i32* %cols, align 4
  %13 = mul nsw i32 %11, %12
  %14 = sdiv i32 %13, 1
  store i32 %14, i32* %loop_count, align 4
  store i32 256, i32* %bits_to_add, align 4
  store i32 8, i32* %N_size, align 4
  call void @_ZN7ap_uintILi256EEC1Ev(%class.ap_uint* %r)
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %in)
  br label %15

; <label>:15                                      ; preds = %0
  store i32 0, i32* %i, align 4
  br label %16

; <label>:16                                      ; preds = %64, %15
  %17 = load i32* %i, align 4
  %18 = load i32* %loop_count, align 4
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %20, label %67

; <label>:20                                      ; preds = %16
  %21 = load %struct.xf_Mat_0_1080_1920_1_** %2, align 8
  %22 = load i32* %i, align 4
  %23 = call i8 @_ZL38p_ZN2xf18Mat_0_1080_1920_1_4readIEEi_1P21xf_Mat_0_1080_1920_1_i(%struct.xf_Mat_0_1080_1920_1_* %21, i32 %22)
  %24 = getelementptr %class.ap_uint.0* %4, i32 0, i32 0
  %25 = bitcast [1 x i8]* %24 to i8*
  store i8 %23, i8* %25, align 1
  %26 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %in, %class.ap_uint.0* %4)
  %27 = load i32* %bits_to_add, align 4
  %28 = icmp sle i32 %27, 8
  br i1 %28, label %29, label %52

; <label>:29                                      ; preds = %20
  %30 = load i32* %bits_to_add, align 4
  %31 = sub nsw i32 %30, 1
  %32 = call i64* @_ZN7ap_uintILi8EE5rangeEii(%class.ap_uint.0* %in, i32 %31, i32 0)
  %33 = load i64* %32
  %34 = load i32* %bits_to_add, align 4
  %35 = sub nsw i32 256, %34
  %36 = call i64* @_ZN7ap_uintILi256EE5rangeEii(%class.ap_uint* %r, i32 255, i32 %35)
  store i64 %33, i64* %36
  %37 = load %"class.hls::stream"** %3, align 8
  call void @_ZN3hls6streamI7ap_uintILi256EEE5writeERKS2_(%"class.hls::stream"* %37, %class.ap_uint* %r)
  %38 = load i32* %bits_to_add, align 4
  %39 = icmp ne i32 %38, 8
  br i1 %39, label %40, label %48

; <label>:40                                      ; preds = %29
  %41 = load i32* %bits_to_add, align 4
  %42 = call i64* @_ZN7ap_uintILi8EE5rangeEii(%class.ap_uint.0* %in, i32 7, i32 %41)
  %43 = load i64* %42
  %44 = load i32* %bits_to_add, align 4
  %45 = sub nsw i32 8, %44
  %46 = sub nsw i32 %45, 1
  %47 = call i64* @_ZN7ap_uintILi256EE5rangeEii(%class.ap_uint* %r, i32 %46, i32 0)
  store i64 %43, i64* %47
  br label %48

; <label>:48                                      ; preds = %40, %29
  %49 = load i32* %bits_to_add, align 4
  %50 = sub nsw i32 8, %49
  %51 = sub nsw i32 256, %50
  store i32 %51, i32* %bits_to_add, align 4
  br label %63

; <label>:52                                      ; preds = %20
  %53 = call i64 @_ZNK7ap_uintILi8EEcvmEv(%class.ap_uint.0* %in)
  %54 = load i32* %bits_to_add, align 4
  %55 = sub nsw i32 256, %54
  %56 = add nsw i32 %55, 8
  %57 = sub nsw i32 %56, 1
  %58 = load i32* %bits_to_add, align 4
  %59 = sub nsw i32 256, %58
  %60 = call i64* @_ZN7ap_uintILi256EE5rangeEii(%class.ap_uint* %r, i32 %57, i32 %59)
  store i64 %53, i64* %60
  %61 = load i32* %bits_to_add, align 4
  %62 = sub nsw i32 %61, 8
  store i32 %62, i32* %bits_to_add, align 4
  br label %63

; <label>:63                                      ; preds = %52, %48
  br label %64

; <label>:64                                      ; preds = %63
  %65 = load i32* %i, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %i, align 4
  br label %16

; <label>:67                                      ; preds = %16
  %68 = load i32* %bits_to_add, align 4
  %69 = icmp ne i32 %68, 256
  br i1 %69, label %70, label %72

; <label>:70                                      ; preds = %67
  %71 = load %"class.hls::stream"** %3, align 8
  call void @_ZN3hls6streamI7ap_uintILi256EEE5writeERKS2_(%"class.hls::stream"* %71, %class.ap_uint* %r)
  br label %72

; <label>:72                                      ; preds = %70, %67
  ret void
}

define internal void @_ZL125p_ZN2xf11accel_utils13hlsStrm2ArrayILi256ELi1080ELi1920ELi1ELi1ELi8ELi64800EEER6streamI7ap_uintILi256EEEP7ap_uintILi256EEii_1P14xf_accel_utilsRN3hls6streamI7ap_uintILi256EEEEPS4_ii(%struct.xf_accel_utils* %this_, %"class.hls::stream"* %srcStrm, %class.ap_uint* %dstPtr, i32 %rows, i32 %cols) uwtable {
  %1 = alloca %struct.xf_accel_utils*, align 8
  %2 = alloca %"class.hls::stream"*, align 8
  %3 = alloca %class.ap_uint*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %pixel_width = alloca i32, align 4
  %loop_count = alloca i32, align 4
  %i = alloca i32, align 4
  %6 = alloca %class.ap_uint, align 1
  store %struct.xf_accel_utils* %this_, %struct.xf_accel_utils** %1, align 8
  store %"class.hls::stream"* %srcStrm, %"class.hls::stream"** %2, align 8
  store %class.ap_uint* %dstPtr, %class.ap_uint** %3, align 8
  store i32 %rows, i32* %4, align 4
  store i32 %cols, i32* %5, align 4
  store i32 8, i32* %pixel_width, align 4
  %7 = load i32* %4, align 4
  %8 = load i32* %5, align 4
  %9 = mul nsw i32 %7, %8
  %10 = load i32* %pixel_width, align 4
  %11 = mul nsw i32 %9, %10
  %12 = add nsw i32 %11, 256
  %13 = sub nsw i32 %12, 1
  %14 = sdiv i32 %13, 256
  store i32 %14, i32* %loop_count, align 4
  store i32 0, i32* %i, align 4
  br label %15

; <label>:15                                      ; preds = %26, %0
  %16 = load i32* %i, align 4
  %17 = load i32* %loop_count, align 4
  %18 = icmp slt i32 %16, %17
  br i1 %18, label %19, label %29

; <label>:19                                      ; preds = %15
  %20 = load i32* %i, align 4
  %21 = sext i32 %20 to i64
  %22 = load %class.ap_uint** %3, align 8
  %23 = getelementptr inbounds %class.ap_uint* %22, i64 %21
  %24 = load %"class.hls::stream"** %2, align 8
  call void @_ZN3hls6streamI7ap_uintILi256EEE4readEv(%class.ap_uint* sret %6, %"class.hls::stream"* %24)
  %25 = call %class.ap_uint* @_ZN7ap_uintILi256EEaSERKS0_(%class.ap_uint* %23, %class.ap_uint* %6)
  br label %26

; <label>:26                                      ; preds = %19
  %27 = load i32* %i, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %i, align 4
  br label %15

; <label>:29                                      ; preds = %15
  ret void
}

declare %class.ap_uint* @_ZN7ap_uintILi256EEaSERKS0_(%class.ap_uint*, %class.ap_uint*)

declare void @_ZN3hls6streamI7ap_uintILi256EEE4readEv(%class.ap_uint* sret, %"class.hls::stream"*)

declare void @_ZN7ap_uintILi256EEC1Ev(%class.ap_uint*)

declare void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0*)

declare %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0*, %class.ap_uint.0*)

define internal i8 @_ZL38p_ZN2xf18Mat_0_1080_1920_1_4readIEEi_1P21xf_Mat_0_1080_1920_1_i(%struct.xf_Mat_0_1080_1920_1_* %this_, i32 %index) nounwind uwtable {
  %1 = alloca %class.ap_uint.0, align 1
  %2 = alloca %struct.xf_Mat_0_1080_1920_1_*, align 8
  %3 = alloca i32, align 4
  store %struct.xf_Mat_0_1080_1920_1_* %this_, %struct.xf_Mat_0_1080_1920_1_** %2, align 8
  store i32 %index, i32* %3, align 4
  %4 = load i32* %3, align 4
  %5 = sext i32 %4 to i64
  %6 = load %struct.xf_Mat_0_1080_1920_1_** %2, align 8
  %7 = getelementptr inbounds %struct.xf_Mat_0_1080_1920_1_* %6, i32 0, i32 4
  %8 = getelementptr inbounds [2073600 x %class.ap_uint.0]* %7, i32 0, i64 %5
  %9 = bitcast %class.ap_uint.0* %1 to i8*
  %10 = bitcast %class.ap_uint.0* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 1, i32 1, i1 false)
  %11 = getelementptr %class.ap_uint.0* %1, i32 0, i32 0
  %12 = bitcast [1 x i8]* %11 to i8*
  %13 = load i8* %12, align 1
  ret i8 %13
}

declare i64* @_ZN7ap_uintILi8EE5rangeEii(%class.ap_uint.0*, i32, i32)

declare i64* @_ZN7ap_uintILi256EE5rangeEii(%class.ap_uint*, i32, i32)

declare void @_ZN3hls6streamI7ap_uintILi256EEE5writeERKS2_(%"class.hls::stream"*, %class.ap_uint*)

declare i64 @_ZNK7ap_uintILi8EEcvmEv(%class.ap_uint.0*)

declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture, i64, i32, i1) nounwind

declare void @__assert_fail(i8*, i8*, i32, i8*) noreturn nounwind

define internal void @_ZL143p_Z19xFResizeAreaUpScaleILi256ELi256ELi1ELi0ELi1ELi1ELi1080ELi1920ELi256ELi1920EER3MatILi0ELi256ELi256ELi1EER3MatILi0ELi1080ELi1920ELi1EEtttt_1R19xf_Mat_0_256_256_1_R21xf_Mat_0_1080_1920_1_tttt(%struct.xf_Mat_0_256_256_1_* %stream_in, %struct.xf_Mat_0_1080_1920_1_* %resize_out, i16 zeroext %height, i16 zeroext %width, i16 zeroext %out_height, i16 zeroext %out_width) uwtable {
  %1 = alloca %struct.xf_Mat_0_256_256_1_*, align 8
  %2 = alloca %struct.xf_Mat_0_1080_1920_1_*, align 8
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %lbuf_in0 = alloca [256 x %class.ap_uint.0], align 16
  %lbuf_in1 = alloca [256 x %class.ap_uint.0], align 16
  %lbuf_in2 = alloca [256 x %class.ap_uint.0], align 16
  %Hoffset = alloca [1920 x %class.ap_uint.1], align 16
  %Voffset = alloca [1080 x %class.ap_uint.1], align 16
  %Hweight = alloca [1920 x i32], align 16
  %Vweight = alloca [1081 x i32], align 16
  %idx = alloca i8, align 1
  %repcount = alloca i8, align 1
  %datacount = alloca i8, align 1
  %Hstart = alloca [1921 x i16], align 16
  %x = alloca %class.ap_uint.1, align 1
  %read_line = alloca %class.ap_uint.1, align 1
  %block_ind = alloca %class.ap_uint.1, align 1
  %block_start = alloca %class.ap_uint.1, align 1
  %bufferIndex = alloca %class.ap_uint.1, align 1
  %prev_y = alloca %class.ap_uint.1, align 1
  %j = alloca %class.ap_uint.1, align 1
  %i = alloca %class.ap_uint.1, align 1
  %k = alloca %class.ap_uint.1, align 1
  %ii = alloca %class.ap_uint.1, align 1
  %Yoffset = alloca %class.ap_uint.1, align 1
  %offset_temp = alloca %class.ap_uint.1, align 1
  %prev_offset_temp = alloca %class.ap_uint.1, align 1
  %Xscale = alloca i32, align 4
  %Yscale = alloca i32, align 4
  %Yweight = alloca i32, align 4
  %inv_Xscale = alloca i64, align 8
  %inv_Yscale = alloca i64, align 8
  %Xtemp = alloca i64, align 8
  %Ytemp = alloca i64, align 8
  %read_index = alloca i32, align 4
  %write_index = alloca i32, align 4
  %D0 = alloca [2 x %class.ap_uint.0], align 1
  %D1 = alloca [2 x %class.ap_uint.0], align 1
  %7 = alloca %class.ap_uint.1, align 1
  %8 = alloca %class.ap_uint.1, align 1
  %9 = alloca %class.ap_uint.1, align 1
  %10 = alloca %class.ap_uint.1, align 1
  %11 = alloca %class.ap_uint.1, align 1
  %12 = alloca %class.ap_uint.1, align 1
  %13 = alloca %class.ap_uint.1, align 1
  %14 = alloca %class.ap_uint.1, align 1
  %15 = alloca %class.ap_uint.1, align 1
  %16 = alloca %class.ap_uint.1, align 1
  %17 = alloca %class.ap_uint.1, align 1
  %18 = alloca %class.ap_uint.1, align 1
  %19 = alloca %class.ap_uint.1, align 1
  %20 = alloca %class.ap_uint.1, align 1
  %21 = alloca %class.ap_uint.1, align 1
  %22 = alloca %class.ap_uint.1, align 1
  %23 = alloca %class.ap_uint.1, align 1
  %24 = alloca %class.ap_uint.1, align 1
  %25 = alloca %class.ap_uint.1, align 1
  %26 = alloca %class.ap_uint.1, align 1
  %read_flag = alloca i8, align 1
  %l0 = alloca %class.ap_uint.2, align 1
  %l1 = alloca %class.ap_uint.2, align 1
  %l2 = alloca %class.ap_uint.2, align 1
  %read_into = alloca %class.ap_uint.2, align 1
  %lind0 = alloca %class.ap_uint.3, align 1
  %lind1 = alloca %class.ap_uint.3, align 1
  %lind2 = alloca %class.ap_uint.3, align 1
  %out_j = alloca %class.ap_uint.3, align 1
  %27 = alloca %class.ap_uint.1, align 1
  %tmp_in = alloca %class.ap_uint.0, align 1
  %28 = alloca %class.ap_uint.1, align 1
  %29 = alloca %class.ap_uint.3, align 1
  %30 = alloca %class.ap_uint.1, align 1
  %tmp_in1 = alloca %class.ap_uint.0, align 1
  %31 = alloca %class.ap_uint.1, align 1
  %32 = alloca %class.ap_uint.3, align 1
  %33 = alloca %class.ap_uint.1, align 1
  %34 = alloca %class.ap_uint.2, align 1
  %35 = alloca %class.ap_uint.2, align 1
  %36 = alloca %class.ap_uint.3, align 1
  %37 = alloca %class.ap_uint.1, align 1
  %38 = alloca %class.ap_uint.3, align 1
  %39 = alloca %class.ap_uint.1, align 1
  %40 = alloca %class.ap_uint.3, align 1
  %41 = alloca %class.ap_uint.1, align 1
  %42 = alloca %class.ap_uint.3, align 1
  %43 = alloca %class.ap_uint.1, align 1
  %44 = alloca %class.ap_uint.3, align 1
  %45 = alloca %class.ap_uint.1, align 1
  %46 = alloca %class.ap_uint.3, align 1
  %47 = alloca %class.ap_uint.1, align 1
  %48 = alloca %class.ap_uint.3, align 1
  %49 = alloca %class.ap_uint.1, align 1
  %50 = alloca %class.ap_uint.1, align 1
  %51 = alloca %class.ap_uint.1, align 1
  %52 = alloca %class.ap_uint.1, align 1
  %53 = alloca %class.ap_uint.1, align 1
  %54 = alloca %class.ap_uint.1, align 1
  %55 = alloca %class.ap_uint.1, align 1
  %56 = alloca %class.ap_uint.1, align 1
  %57 = alloca %class.ap_uint.1, align 1
  %58 = alloca %class.ap_uint.1, align 1
  %59 = alloca %class.ap_uint.1, align 1
  %60 = alloca %class.ap_uint.3, align 1
  %61 = alloca %class.ap_uint.2, align 1
  %62 = alloca %class.ap_uint.1, align 1
  %63 = alloca %class.ap_uint.1, align 1
  %64 = alloca %class.ap_uint.0, align 1
  %65 = alloca %class.ap_uint.1, align 1
  %66 = alloca %class.ap_int, align 1
  %67 = alloca %class.ap_uint.1, align 1
  %68 = alloca %class.ap_uint.1, align 1
  %69 = alloca %class.ap_uint.1, align 1
  %70 = alloca %class.ap_uint.1, align 1
  %71 = alloca %class.ap_int, align 1
  %72 = alloca %class.ap_uint.1, align 1
  %73 = alloca %class.ap_uint.1, align 1
  %74 = alloca %class.ap_int, align 1
  %75 = alloca %class.ap_uint.1, align 1
  %76 = alloca %class.ap_uint.2, align 1
  %77 = alloca %class.ap_uint.1, align 1
  %78 = alloca %class.ap_uint.1, align 1
  %79 = alloca %class.ap_uint.0, align 1
  %80 = alloca %class.ap_uint.1, align 1
  %81 = alloca %class.ap_int, align 1
  %82 = alloca %class.ap_uint.1, align 1
  %83 = alloca %class.ap_uint.1, align 1
  %84 = alloca %class.ap_uint.1, align 1
  %85 = alloca %class.ap_uint.1, align 1
  %86 = alloca %class.ap_int, align 1
  %87 = alloca %class.ap_uint.1, align 1
  %88 = alloca %class.ap_uint.1, align 1
  %89 = alloca %class.ap_int, align 1
  %90 = alloca %class.ap_uint.1, align 1
  %91 = alloca %class.ap_uint.1, align 1
  %92 = alloca %class.ap_uint.1, align 1
  %93 = alloca %class.ap_uint.0, align 1
  %94 = alloca %class.ap_uint.1, align 1
  %95 = alloca %class.ap_int, align 1
  %96 = alloca %class.ap_uint.1, align 1
  %97 = alloca %class.ap_uint.1, align 1
  %98 = alloca %class.ap_uint.1, align 1
  %99 = alloca %class.ap_uint.1, align 1
  %100 = alloca %class.ap_int, align 1
  %101 = alloca %class.ap_uint.1, align 1
  %102 = alloca %class.ap_uint.1, align 1
  %103 = alloca %class.ap_int, align 1
  %104 = alloca %class.ap_uint.1, align 1
  %105 = alloca %class.ap_uint.1, align 1
  %106 = alloca %class.ap_int, align 1
  %107 = alloca %class.ap_uint.1, align 1
  %108 = alloca %class.ap_uint.1, align 1
  %109 = alloca %class.ap_uint.2, align 1
  %110 = alloca %class.ap_uint.1, align 1
  %111 = alloca %class.ap_uint.1, align 1
  %112 = alloca %class.ap_int, align 1
  %113 = alloca %class.ap_uint.2, align 1
  %114 = alloca %class.ap_uint.1, align 1
  %115 = alloca %class.ap_uint.1, align 1
  %116 = alloca %class.ap_int, align 1
  %117 = alloca %class.ap_uint.1, align 1
  %118 = alloca %class.ap_uint.1, align 1
  %119 = alloca %class.ap_int, align 1
  %120 = alloca %class.ap_uint.2, align 1
  %121 = alloca %class.ap_uint.1, align 1
  %122 = alloca %class.ap_uint.1, align 1
  %123 = alloca %class.ap_int, align 1
  %124 = alloca %class.ap_uint.2, align 1
  %125 = alloca %class.ap_uint.1, align 1
  %126 = alloca %class.ap_uint.1, align 1
  %127 = alloca %class.ap_int, align 1
  %128 = alloca %class.ap_uint.1, align 1
  %129 = alloca %class.ap_uint.1, align 1
  %130 = alloca %class.ap_int, align 1
  %131 = alloca %class.ap_uint.1, align 1
  %132 = alloca %class.ap_uint.1, align 1
  %133 = alloca %class.ap_int, align 1
  %134 = alloca %class.ap_uint.2, align 1
  %135 = alloca %class.ap_uint.1, align 1
  %136 = alloca %class.ap_uint.1, align 1
  %137 = alloca %class.ap_int, align 1
  %138 = alloca %class.ap_uint.1, align 1
  %139 = alloca %class.ap_uint.1, align 1
  %140 = alloca %class.ap_int, align 1
  %141 = alloca %class.ap_uint.1, align 1
  %out_pix = alloca %class.ap_uint.0, align 1
  %142 = alloca %class.ap_uint.1, align 1
  %143 = alloca %class.ap_uint.1, align 1
  %144 = alloca %class.ap_uint.0, align 1
  %145 = alloca %class.ap_uint.1, align 1
  %146 = alloca %class.ap_uint.1, align 1
  store %struct.xf_Mat_0_256_256_1_* %stream_in, %struct.xf_Mat_0_256_256_1_** %1, align 8
  store %struct.xf_Mat_0_1080_1920_1_* %resize_out, %struct.xf_Mat_0_1080_1920_1_** %2, align 8
  store i16 %height, i16* %3, align 2
  store i16 %width, i16* %4, align 2
  store i16 %out_height, i16* %5, align 2
  store i16 %out_width, i16* %6, align 2
  %147 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in0, i32 0, i32 0
  %148 = getelementptr inbounds %class.ap_uint.0* %147, i64 256
  br label %149

; <label>:149                                     ; preds = %149, %0
  %150 = phi %class.ap_uint.0* [ %147, %0 ], [ %151, %149 ]
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %150)
  %151 = getelementptr inbounds %class.ap_uint.0* %150, i64 1
  %152 = icmp eq %class.ap_uint.0* %151, %148
  br i1 %152, label %153, label %149

; <label>:153                                     ; preds = %149
  %154 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in1, i32 0, i32 0
  %155 = getelementptr inbounds %class.ap_uint.0* %154, i64 256
  br label %156

; <label>:156                                     ; preds = %156, %153
  %157 = phi %class.ap_uint.0* [ %154, %153 ], [ %158, %156 ]
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %157)
  %158 = getelementptr inbounds %class.ap_uint.0* %157, i64 1
  %159 = icmp eq %class.ap_uint.0* %158, %155
  br i1 %159, label %160, label %156

; <label>:160                                     ; preds = %156
  %161 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in2, i32 0, i32 0
  %162 = getelementptr inbounds %class.ap_uint.0* %161, i64 256
  br label %163

; <label>:163                                     ; preds = %163, %160
  %164 = phi %class.ap_uint.0* [ %161, %160 ], [ %165, %163 ]
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %164)
  %165 = getelementptr inbounds %class.ap_uint.0* %164, i64 1
  %166 = icmp eq %class.ap_uint.0* %165, %162
  br i1 %166, label %167, label %163

; <label>:167                                     ; preds = %163
  %168 = getelementptr inbounds [1920 x %class.ap_uint.1]* %Hoffset, i32 0, i32 0
  %169 = getelementptr inbounds %class.ap_uint.1* %168, i64 1920
  br label %170

; <label>:170                                     ; preds = %170, %167
  %171 = phi %class.ap_uint.1* [ %168, %167 ], [ %172, %170 ]
  call void @_ZN7ap_uintILi13EEC1Ev(%class.ap_uint.1* %171)
  %172 = getelementptr inbounds %class.ap_uint.1* %171, i64 1
  %173 = icmp eq %class.ap_uint.1* %172, %169
  br i1 %173, label %174, label %170

; <label>:174                                     ; preds = %170
  %175 = getelementptr inbounds [1080 x %class.ap_uint.1]* %Voffset, i32 0, i32 0
  %176 = getelementptr inbounds %class.ap_uint.1* %175, i64 1080
  br label %177

; <label>:177                                     ; preds = %177, %174
  %178 = phi %class.ap_uint.1* [ %175, %174 ], [ %179, %177 ]
  call void @_ZN7ap_uintILi13EEC1Ev(%class.ap_uint.1* %178)
  %179 = getelementptr inbounds %class.ap_uint.1* %178, i64 1
  %180 = icmp eq %class.ap_uint.1* %179, %176
  br i1 %180, label %181, label %177

; <label>:181                                     ; preds = %177
  store i8 0, i8* %idx, align 1
  store i8 0, i8* %repcount, align 1
  store i8 0, i8* %datacount, align 1
  call void @_ZN7ap_uintILi13EEC1Ev(%class.ap_uint.1* %x)
  call void @_ZN7ap_uintILi13EEC1Ev(%class.ap_uint.1* %read_line)
  call void @_ZN7ap_uintILi13EEC1Ev(%class.ap_uint.1* %block_ind)
  call void @_ZN7ap_uintILi13EEC1Ev(%class.ap_uint.1* %block_start)
  call void @_ZN7ap_uintILi13EEC1Ev(%class.ap_uint.1* %bufferIndex)
  call void @_ZN7ap_uintILi13EEC1Ei(%class.ap_uint.1* %prev_y, i32 -1)
  call void @_ZN7ap_uintILi13EEC1Ei(%class.ap_uint.1* %j, i32 0)
  call void @_ZN7ap_uintILi13EEC1Ei(%class.ap_uint.1* %i, i32 0)
  call void @_ZN7ap_uintILi13EEC1Ev(%class.ap_uint.1* %k)
  call void @_ZN7ap_uintILi13EEC1Ei(%class.ap_uint.1* %ii, i32 0)
  call void @_ZN7ap_uintILi13EEC1Ev(%class.ap_uint.1* %Yoffset)
  call void @_ZN7ap_uintILi13EEC1Ev(%class.ap_uint.1* %offset_temp)
  call void @_ZN7ap_uintILi13EEC1Ei(%class.ap_uint.1* %prev_offset_temp, i32 0)
  store i64 0, i64* %Xtemp, align 8
  store i64 0, i64* %Ytemp, align 8
  store i32 0, i32* %read_index, align 4
  store i32 0, i32* %write_index, align 4
  %182 = getelementptr inbounds [2 x %class.ap_uint.0]* %D0, i32 0, i32 0
  %183 = getelementptr inbounds %class.ap_uint.0* %182, i64 2
  br label %184

; <label>:184                                     ; preds = %184, %181
  %185 = phi %class.ap_uint.0* [ %182, %181 ], [ %186, %184 ]
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %185)
  %186 = getelementptr inbounds %class.ap_uint.0* %185, i64 1
  %187 = icmp eq %class.ap_uint.0* %186, %183
  br i1 %187, label %188, label %184

; <label>:188                                     ; preds = %184
  %189 = getelementptr inbounds [2 x %class.ap_uint.0]* %D1, i32 0, i32 0
  %190 = getelementptr inbounds %class.ap_uint.0* %189, i64 2
  br label %191

; <label>:191                                     ; preds = %191, %188
  %192 = phi %class.ap_uint.0* [ %189, %188 ], [ %193, %191 ]
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %192)
  %193 = getelementptr inbounds %class.ap_uint.0* %192, i64 1
  %194 = icmp eq %class.ap_uint.0* %193, %190
  br i1 %194, label %195, label %191

; <label>:195                                     ; preds = %191
  %196 = load i16* %4, align 2
  %197 = zext i16 %196 to i32
  %198 = shl i32 %197, 0
  %199 = sext i32 %198 to i64
  %200 = mul i64 %199, 4294967296
  %201 = load i16* %6, align 2
  %202 = zext i16 %201 to i32
  %203 = shl i32 %202, 0
  %204 = trunc i32 %203 to i16
  %205 = call i64 @_ZL12xFUDivAreaUpmt(i64 %200, i16 zeroext %204)
  %206 = trunc i64 %205 to i32
  store i32 %206, i32* %Xscale, align 4
  %207 = load i16* %3, align 2
  %208 = zext i16 %207 to i64
  %209 = mul i64 %208, 4294967296
  %210 = load i16* %5, align 2
  %211 = call i64 @_ZL12xFUDivAreaUpmt(i64 %209, i16 zeroext %210)
  %212 = trunc i64 %211 to i32
  store i32 %212, i32* %Yscale, align 4
  %213 = load i16* %6, align 2
  %214 = zext i16 %213 to i32
  %215 = shl i32 %214, 0
  %216 = sext i32 %215 to i64
  %217 = mul i64 %216, 4294967296
  %218 = load i16* %4, align 2
  %219 = zext i16 %218 to i32
  %220 = shl i32 %219, 0
  %221 = trunc i32 %220 to i16
  %222 = call i64 @_ZL12xFUDivAreaUpmt(i64 %217, i16 zeroext %221)
  store i64 %222, i64* %inv_Xscale, align 8
  %223 = load i16* %5, align 2
  %224 = zext i16 %223 to i64
  %225 = mul i64 %224, 4294967296
  %226 = load i16* %3, align 2
  %227 = call i64 @_ZL12xFUDivAreaUpmt(i64 %225, i16 zeroext %226)
  store i64 %227, i64* %inv_Yscale, align 8
  %228 = getelementptr inbounds [1921 x i16]* %Hstart, i32 0, i64 0
  store i16 0, i16* %228, align 2
  %229 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSEi(%class.ap_uint.1* %ii, i32 0)
  br label %230

; <label>:230                                     ; preds = %195
  %231 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSEi(%class.ap_uint.1* %x, i32 0)
  br label %232

; <label>:232                                     ; preds = %338, %230
  %233 = bitcast %class.ap_uint.1* %7 to i8*
  %234 = bitcast %class.ap_uint.1* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %233, i8* %234, i64 2, i32 1, i1 false)
  %235 = load i16* %6, align 2
  %236 = zext i16 %235 to i32
  %237 = add nsw i32 -1, %236
  %238 = getelementptr %class.ap_uint.1* %7, i32 0, i32 0
  %239 = bitcast [2 x i8]* %238 to i16*
  %240 = load i16* %239, align 1
  %241 = call zeroext i1 @_ZleILi13EEb7ap_uintIXT_EEi(i16 %240, i32 %237)
  br i1 %241, label %242, label %342

; <label>:242                                     ; preds = %232
  %243 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %x)
  %244 = load i32* %Xscale, align 4
  %245 = zext i32 %244 to i64
  %246 = mul i64 %243, %245
  %247 = add i64 %246, 429496
  %248 = lshr i64 %247, 32
  %249 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSEm(%class.ap_uint.1* %offset_temp, i64 %248)
  %250 = call i16 @_ZplILi13EE7ap_uintIXT_EERKS1_i(%class.ap_uint.1* %x, i32 1)
  %251 = getelementptr %class.ap_uint.1* %8, i32 0, i32 0
  %252 = bitcast [2 x i8]* %251 to i16*
  store i16 %250, i16* %252, align 1
  %253 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %8)
  %254 = shl i64 %253, 32
  %255 = call i16 @_ZplILi13EE7ap_uintIXT_EERKS1_i(%class.ap_uint.1* %offset_temp, i32 1)
  %256 = getelementptr %class.ap_uint.1* %10, i32 0, i32 0
  %257 = bitcast [2 x i8]* %256 to i16*
  store i16 %255, i16* %257, align 1
  %258 = load i64* %inv_Xscale, align 8
  %259 = call i16 @_ZmlILi13EE7ap_uintIXT_EERKS1_m(%class.ap_uint.1* %10, i64 %258)
  %260 = getelementptr %class.ap_uint.1* %9, i32 0, i32 0
  %261 = bitcast [2 x i8]* %260 to i16*
  store i16 %259, i16* %261, align 1
  %262 = call i16 @_ZmiILi13EE7ap_uintIXT_EEmRKS1_(i64 %254, %class.ap_uint.1* %9)
  %263 = getelementptr %class.ap_uint.1* %11, i32 0, i32 0
  %264 = bitcast [2 x i8]* %263 to i16*
  store i16 %262, i16* %264, align 1
  %265 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %11)
  store i64 %265, i64* %Xtemp, align 8
  %266 = load i64* %Xtemp, align 8
  %267 = icmp slt i64 %266, 0
  br i1 %267, label %268, label %271

; <label>:268                                     ; preds = %242
  %269 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %x)
  %270 = getelementptr inbounds [1920 x i32]* %Hweight, i32 0, i64 %269
  store i32 0, i32* %270, align 4
  br label %277

; <label>:271                                     ; preds = %242
  %272 = load i64* %Xtemp, align 8
  %273 = and i64 %272, 4294967295
  %274 = trunc i64 %273 to i32
  %275 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %x)
  %276 = getelementptr inbounds [1920 x i32]* %Hweight, i32 0, i64 %275
  store i32 %274, i32* %276, align 4
  br label %277

; <label>:277                                     ; preds = %271, %268
  %278 = load i8* %repcount, align 1
  %279 = add i8 %278, 1
  store i8 %279, i8* %repcount, align 1
  %280 = bitcast %class.ap_uint.1* %12 to i8*
  %281 = bitcast %class.ap_uint.1* %prev_offset_temp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %280, i8* %281, i64 2, i32 1, i1 false)
  %282 = bitcast %class.ap_uint.1* %13 to i8*
  %283 = bitcast %class.ap_uint.1* %offset_temp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %282, i8* %283, i64 2, i32 1, i1 false)
  %284 = getelementptr %class.ap_uint.1* %12, i32 0, i32 0
  %285 = bitcast [2 x i8]* %284 to i16*
  %286 = load i16* %285, align 1
  %287 = getelementptr %class.ap_uint.1* %13, i32 0, i32 0
  %288 = bitcast [2 x i8]* %287 to i16*
  %289 = load i16* %288, align 1
  %290 = call zeroext i1 @_ZneILi13ELi13EEb7ap_uintIXT_EES0_IXT0_EE(i16 %286, i16 %289)
  br i1 %290, label %291, label %298

; <label>:291                                     ; preds = %277
  %292 = load i8* %datacount, align 1
  %293 = zext i8 %292 to i32
  %294 = load i8* %repcount, align 1
  %295 = zext i8 %294 to i32
  %296 = add nsw i32 %293, %295
  %297 = trunc i32 %296 to i8
  store i8 %297, i8* %datacount, align 1
  store i8 0, i8* %repcount, align 1
  br label %298

; <label>:298                                     ; preds = %291, %277
  %299 = load i8* %datacount, align 1
  %300 = zext i8 %299 to i32
  %301 = icmp sge i32 %300, 1
  br i1 %301, label %302, label %333

; <label>:302                                     ; preds = %298
  %303 = load i8* %datacount, align 1
  %304 = zext i8 %303 to i32
  %305 = sub nsw i32 %304, 1
  %306 = trunc i32 %305 to i8
  store i8 %306, i8* %datacount, align 1
  %307 = load i8* %datacount, align 1
  %308 = zext i8 %307 to i32
  %309 = icmp sgt i32 %308, 0
  br i1 %309, label %310, label %318

; <label>:310                                     ; preds = %302
  %311 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %prev_offset_temp)
  %312 = trunc i64 %311 to i16
  %313 = call i16 @_ZplILi13EE7ap_uintIXT_EERKS1_i(%class.ap_uint.1* %ii, i32 1)
  %314 = getelementptr %class.ap_uint.1* %14, i32 0, i32 0
  %315 = bitcast [2 x i8]* %314 to i16*
  store i16 %313, i16* %315, align 1
  %316 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %14)
  %317 = getelementptr inbounds [1921 x i16]* %Hstart, i32 0, i64 %316
  store i16 %312, i16* %317, align 2
  br label %329

; <label>:318                                     ; preds = %302
  %319 = call i16 @_ZplILi13EE7ap_uintIXT_EERKS1_i(%class.ap_uint.1* %prev_offset_temp, i32 1)
  %320 = getelementptr %class.ap_uint.1* %15, i32 0, i32 0
  %321 = bitcast [2 x i8]* %320 to i16*
  store i16 %319, i16* %321, align 1
  %322 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %15)
  %323 = trunc i64 %322 to i16
  %324 = call i16 @_ZplILi13EE7ap_uintIXT_EERKS1_i(%class.ap_uint.1* %ii, i32 1)
  %325 = getelementptr %class.ap_uint.1* %16, i32 0, i32 0
  %326 = bitcast [2 x i8]* %325 to i16*
  store i16 %324, i16* %326, align 1
  %327 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %16)
  %328 = getelementptr inbounds [1921 x i16]* %Hstart, i32 0, i64 %327
  store i16 %323, i16* %328, align 2
  br label %329

; <label>:329                                     ; preds = %318, %310
  %330 = call i16 @_ZN7ap_uintILi13EEppEi(%class.ap_uint.1* %ii, i32 0)
  %331 = getelementptr %class.ap_uint.1* %17, i32 0, i32 0
  %332 = bitcast [2 x i8]* %331 to i16*
  store i16 %330, i16* %332, align 1
  br label %333

; <label>:333                                     ; preds = %329, %298
  %334 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %x)
  %335 = getelementptr inbounds [1920 x %class.ap_uint.1]* %Hoffset, i32 0, i64 %334
  %336 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSERKS0_(%class.ap_uint.1* %335, %class.ap_uint.1* %offset_temp)
  %337 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSERKS0_(%class.ap_uint.1* %prev_offset_temp, %class.ap_uint.1* %offset_temp)
  br label %338

; <label>:338                                     ; preds = %333
  %339 = call i16 @_ZN7ap_uintILi13EEppEv(%class.ap_uint.1* %x)
  %340 = getelementptr %class.ap_uint.1* %18, i32 0, i32 0
  %341 = bitcast [2 x i8]* %340 to i16*
  store i16 %339, i16* %341, align 1
  br label %232

; <label>:342                                     ; preds = %232
  br label %343

; <label>:343                                     ; preds = %342
  %344 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSEi(%class.ap_uint.1* %x, i32 0)
  br label %345

; <label>:345                                     ; preds = %421, %343
  %346 = bitcast %class.ap_uint.1* %19 to i8*
  %347 = bitcast %class.ap_uint.1* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %346, i8* %347, i64 2, i32 1, i1 false)
  %348 = load i16* %5, align 2
  %349 = getelementptr %class.ap_uint.1* %19, i32 0, i32 0
  %350 = bitcast [2 x i8]* %349 to i16*
  %351 = load i16* %350, align 1
  %352 = call zeroext i1 @_ZltILi13EEb7ap_uintIXT_EEt(i16 %351, i16 zeroext %348)
  br i1 %352, label %353, label %425

; <label>:353                                     ; preds = %345
  %354 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %x)
  %355 = load i32* %Yscale, align 4
  %356 = zext i32 %355 to i64
  %357 = mul i64 %354, %356
  %358 = add i64 %357, 429496
  %359 = lshr i64 %358, 32
  %360 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSEm(%class.ap_uint.1* %offset_temp, i64 %359)
  %361 = call i16 @_ZplILi13EE7ap_uintIXT_EERKS1_i(%class.ap_uint.1* %x, i32 1)
  %362 = getelementptr %class.ap_uint.1* %20, i32 0, i32 0
  %363 = bitcast [2 x i8]* %362 to i16*
  store i16 %361, i16* %363, align 1
  %364 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %20)
  %365 = shl i64 %364, 32
  %366 = call i16 @_ZplILi13EE7ap_uintIXT_EERKS1_i(%class.ap_uint.1* %offset_temp, i32 1)
  %367 = getelementptr %class.ap_uint.1* %22, i32 0, i32 0
  %368 = bitcast [2 x i8]* %367 to i16*
  store i16 %366, i16* %368, align 1
  %369 = load i64* %inv_Yscale, align 8
  %370 = call i16 @_ZmlILi13EE7ap_uintIXT_EERKS1_m(%class.ap_uint.1* %22, i64 %369)
  %371 = getelementptr %class.ap_uint.1* %21, i32 0, i32 0
  %372 = bitcast [2 x i8]* %371 to i16*
  store i16 %370, i16* %372, align 1
  %373 = call i16 @_ZmiILi13EE7ap_uintIXT_EEmRKS1_(i64 %365, %class.ap_uint.1* %21)
  %374 = getelementptr %class.ap_uint.1* %23, i32 0, i32 0
  %375 = bitcast [2 x i8]* %374 to i16*
  store i16 %373, i16* %375, align 1
  %376 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %23)
  store i64 %376, i64* %Ytemp, align 8
  %377 = load i64* %Ytemp, align 8
  %378 = icmp slt i64 %377, 0
  br i1 %378, label %379, label %382

; <label>:379                                     ; preds = %353
  %380 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %x)
  %381 = getelementptr inbounds [1081 x i32]* %Vweight, i32 0, i64 %380
  store i32 0, i32* %381, align 4
  br label %401

; <label>:382                                     ; preds = %353
  %383 = bitcast %class.ap_uint.1* %24 to i8*
  %384 = bitcast %class.ap_uint.1* %offset_temp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %383, i8* %384, i64 2, i32 1, i1 false)
  %385 = load i16* %3, align 2
  %386 = zext i16 %385 to i32
  %387 = sub nsw i32 %386, 1
  %388 = getelementptr %class.ap_uint.1* %24, i32 0, i32 0
  %389 = bitcast [2 x i8]* %388 to i16*
  %390 = load i16* %389, align 1
  %391 = call zeroext i1 @_ZltILi13EEb7ap_uintIXT_EEi(i16 %390, i32 %387)
  br i1 %391, label %392, label %396

; <label>:392                                     ; preds = %382
  %393 = load i64* %Ytemp, align 8
  %394 = and i64 %393, 4294967295
  %395 = trunc i64 %394 to i32
  br label %397

; <label>:396                                     ; preds = %382
  br label %397

; <label>:397                                     ; preds = %396, %392
  %398 = phi i32 [ %395, %392 ], [ 0, %396 ]
  %399 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %x)
  %400 = getelementptr inbounds [1081 x i32]* %Vweight, i32 0, i64 %399
  store i32 %398, i32* %400, align 4
  br label %401

; <label>:401                                     ; preds = %397, %379
  %402 = bitcast %class.ap_uint.1* %25 to i8*
  %403 = bitcast %class.ap_uint.1* %offset_temp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %402, i8* %403, i64 2, i32 1, i1 false)
  %404 = load i16* %3, align 2
  %405 = getelementptr %class.ap_uint.1* %25, i32 0, i32 0
  %406 = bitcast [2 x i8]* %405 to i16*
  %407 = load i16* %406, align 1
  %408 = call zeroext i1 @_ZltILi13EEb7ap_uintIXT_EEt(i16 %407, i16 zeroext %404)
  br i1 %408, label %409, label %413

; <label>:409                                     ; preds = %401
  %410 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %x)
  %411 = getelementptr inbounds [1080 x %class.ap_uint.1]* %Voffset, i32 0, i64 %410
  %412 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSERKS0_(%class.ap_uint.1* %411, %class.ap_uint.1* %offset_temp)
  br label %420

; <label>:413                                     ; preds = %401
  %414 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %x)
  %415 = getelementptr inbounds [1080 x %class.ap_uint.1]* %Voffset, i32 0, i64 %414
  %416 = load i16* %3, align 2
  %417 = zext i16 %416 to i32
  %418 = sub nsw i32 %417, 1
  %419 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSEi(%class.ap_uint.1* %415, i32 %418)
  br label %420

; <label>:420                                     ; preds = %413, %409
  br label %421

; <label>:421                                     ; preds = %420
  %422 = call i16 @_ZN7ap_uintILi13EEppEi(%class.ap_uint.1* %x, i32 0)
  %423 = getelementptr %class.ap_uint.1* %26, i32 0, i32 0
  %424 = bitcast [2 x i8]* %423 to i16*
  store i16 %422, i16* %424, align 1
  br label %345

; <label>:425                                     ; preds = %345
  store i8 0, i8* %idx, align 1
  store i8 0, i8* %read_flag, align 1
  call void @_ZN7ap_uintILi2EEC1Ei(%class.ap_uint.2* %l0, i32 0)
  call void @_ZN7ap_uintILi2EEC1Ei(%class.ap_uint.2* %l1, i32 1)
  call void @_ZN7ap_uintILi2EEC1Ei(%class.ap_uint.2* %l2, i32 2)
  call void @_ZN7ap_uintILi2EEC1Ei(%class.ap_uint.2* %read_into, i32 2)
  call void @_ZN7ap_uintILi16EEC1Ei(%class.ap_uint.3* %lind0, i32 0)
  call void @_ZN7ap_uintILi16EEC1Ei(%class.ap_uint.3* %lind1, i32 1)
  call void @_ZN7ap_uintILi16EEC1Ei(%class.ap_uint.3* %lind2, i32 65535)
  call void @_ZN7ap_uintILi16EEC1Ei(%class.ap_uint.3* %out_j, i32 0)
  %426 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSEi(%class.ap_uint.1* %x, i32 0)
  br label %427

; <label>:427                                     ; preds = %445, %425
  %428 = bitcast %class.ap_uint.1* %27 to i8*
  %429 = bitcast %class.ap_uint.1* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %428, i8* %429, i64 2, i32 1, i1 false)
  %430 = load i16* %4, align 2
  %431 = getelementptr %class.ap_uint.1* %27, i32 0, i32 0
  %432 = bitcast [2 x i8]* %431 to i16*
  %433 = load i16* %432, align 1
  %434 = call zeroext i1 @_ZltILi13EEb7ap_uintIXT_EEt(i16 %433, i16 zeroext %430)
  br i1 %434, label %435, label %449

; <label>:435                                     ; preds = %427
  %436 = load %struct.xf_Mat_0_256_256_1_** %1, align 8
  %437 = load i32* %read_index, align 4
  %438 = add nsw i32 %437, 1
  store i32 %438, i32* %read_index, align 4
  %439 = call i8 @_ZL36p_ZN2xf16Mat_0_256_256_1_4readIEEi_1P19xf_Mat_0_256_256_1_i(%struct.xf_Mat_0_256_256_1_* %436, i32 %437)
  %440 = getelementptr %class.ap_uint.0* %tmp_in, i32 0, i32 0
  %441 = bitcast [1 x i8]* %440 to i8*
  store i8 %439, i8* %441, align 1
  %442 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %x)
  %443 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in0, i32 0, i64 %442
  %444 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %443, %class.ap_uint.0* %tmp_in)
  br label %445

; <label>:445                                     ; preds = %435
  %446 = call i16 @_ZN7ap_uintILi13EEppEi(%class.ap_uint.1* %x, i32 0)
  %447 = getelementptr %class.ap_uint.1* %28, i32 0, i32 0
  %448 = bitcast [2 x i8]* %447 to i16*
  store i16 %446, i16* %448, align 1
  br label %427

; <label>:449                                     ; preds = %427
  %450 = call i16 @_ZN7ap_uintILi16EEppEi(%class.ap_uint.3* %out_j, i32 0)
  %451 = getelementptr %class.ap_uint.3* %29, i32 0, i32 0
  %452 = bitcast [2 x i8]* %451 to i16*
  store i16 %450, i16* %452, align 1
  %453 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSEi(%class.ap_uint.1* %x, i32 0)
  br label %454

; <label>:454                                     ; preds = %472, %449
  %455 = bitcast %class.ap_uint.1* %30 to i8*
  %456 = bitcast %class.ap_uint.1* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %455, i8* %456, i64 2, i32 1, i1 false)
  %457 = load i16* %4, align 2
  %458 = getelementptr %class.ap_uint.1* %30, i32 0, i32 0
  %459 = bitcast [2 x i8]* %458 to i16*
  %460 = load i16* %459, align 1
  %461 = call zeroext i1 @_ZltILi13EEb7ap_uintIXT_EEt(i16 %460, i16 zeroext %457)
  br i1 %461, label %462, label %476

; <label>:462                                     ; preds = %454
  %463 = load %struct.xf_Mat_0_256_256_1_** %1, align 8
  %464 = load i32* %read_index, align 4
  %465 = add nsw i32 %464, 1
  store i32 %465, i32* %read_index, align 4
  %466 = call i8 @_ZL36p_ZN2xf16Mat_0_256_256_1_4readIEEi_1P19xf_Mat_0_256_256_1_i(%struct.xf_Mat_0_256_256_1_* %463, i32 %464)
  %467 = getelementptr %class.ap_uint.0* %tmp_in1, i32 0, i32 0
  %468 = bitcast [1 x i8]* %467 to i8*
  store i8 %466, i8* %468, align 1
  %469 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %x)
  %470 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in1, i32 0, i64 %469
  %471 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %470, %class.ap_uint.0* %tmp_in1)
  br label %472

; <label>:472                                     ; preds = %462
  %473 = call i16 @_ZN7ap_uintILi13EEppEi(%class.ap_uint.1* %x, i32 0)
  %474 = getelementptr %class.ap_uint.1* %31, i32 0, i32 0
  %475 = bitcast [2 x i8]* %474 to i16*
  store i16 %473, i16* %475, align 1
  br label %454

; <label>:476                                     ; preds = %454
  %477 = call i16 @_ZN7ap_uintILi16EEppEi(%class.ap_uint.3* %out_j, i32 0)
  %478 = getelementptr %class.ap_uint.3* %32, i32 0, i32 0
  %479 = bitcast [2 x i8]* %478 to i16*
  store i16 %477, i16* %479, align 1
  br label %480

; <label>:480                                     ; preds = %476
  %481 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSEi(%class.ap_uint.1* %j, i32 0)
  br label %482

; <label>:482                                     ; preds = %1292, %480
  %483 = bitcast %class.ap_uint.1* %33 to i8*
  %484 = bitcast %class.ap_uint.1* %j to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %483, i8* %484, i64 2, i32 1, i1 false)
  %485 = load i16* %5, align 2
  %486 = getelementptr %class.ap_uint.1* %33, i32 0, i32 0
  %487 = bitcast [2 x i8]* %486 to i16*
  %488 = load i16* %487, align 1
  %489 = call zeroext i1 @_ZltILi13EEb7ap_uintIXT_EEt(i16 %488, i16 zeroext %485)
  br i1 %489, label %490, label %1296

; <label>:490                                     ; preds = %482
  %491 = load i8* %read_flag, align 1
  %492 = trunc i8 %491 to i1
  br i1 %492, label %493, label %518

; <label>:493                                     ; preds = %490
  %494 = bitcast %class.ap_uint.2* %34 to i8*
  %495 = bitcast %class.ap_uint.2* %read_into to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %494, i8* %495, i64 1, i32 1, i1 false)
  %496 = getelementptr %class.ap_uint.2* %34, i32 0, i32 0
  %497 = bitcast [1 x i8]* %496 to i8*
  %498 = load i8* %497, align 1
  %499 = call zeroext i1 @_ZeqILi2EEb7ap_uintIXT_EEi(i8 %498, i32 2)
  br i1 %499, label %500, label %502

; <label>:500                                     ; preds = %493
  %501 = call %class.ap_uint.3* @_ZN7ap_uintILi16EEaSERKS0_(%class.ap_uint.3* %lind2, %class.ap_uint.3* %out_j)
  br label %514

; <label>:502                                     ; preds = %493
  %503 = bitcast %class.ap_uint.2* %35 to i8*
  %504 = bitcast %class.ap_uint.2* %read_into to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %503, i8* %504, i64 1, i32 1, i1 false)
  %505 = getelementptr %class.ap_uint.2* %35, i32 0, i32 0
  %506 = bitcast [1 x i8]* %505 to i8*
  %507 = load i8* %506, align 1
  %508 = call zeroext i1 @_ZeqILi2EEb7ap_uintIXT_EEi(i8 %507, i32 1)
  br i1 %508, label %509, label %511

; <label>:509                                     ; preds = %502
  %510 = call %class.ap_uint.3* @_ZN7ap_uintILi16EEaSERKS0_(%class.ap_uint.3* %lind1, %class.ap_uint.3* %out_j)
  br label %513

; <label>:511                                     ; preds = %502
  %512 = call %class.ap_uint.3* @_ZN7ap_uintILi16EEaSERKS0_(%class.ap_uint.3* %lind0, %class.ap_uint.3* %out_j)
  br label %513

; <label>:513                                     ; preds = %511, %509
  br label %514

; <label>:514                                     ; preds = %513, %500
  %515 = call i16 @_ZN7ap_uintILi16EEppEi(%class.ap_uint.3* %out_j, i32 0)
  %516 = getelementptr %class.ap_uint.3* %36, i32 0, i32 0
  %517 = bitcast [2 x i8]* %516 to i16*
  store i16 %515, i16* %517, align 1
  br label %518

; <label>:518                                     ; preds = %514, %490
  %519 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %j)
  %520 = getelementptr inbounds [1080 x %class.ap_uint.1]* %Voffset, i32 0, i64 %519
  %521 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSERKS0_(%class.ap_uint.1* %Yoffset, %class.ap_uint.1* %520)
  %522 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %j)
  %523 = getelementptr inbounds [1081 x i32]* %Vweight, i32 0, i64 %522
  %524 = load i32* %523, align 4
  store i32 %524, i32* %Yweight, align 4
  %525 = bitcast %class.ap_uint.1* %37 to i8*
  %526 = bitcast %class.ap_uint.1* %Yoffset to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %525, i8* %526, i64 2, i32 1, i1 false)
  %527 = bitcast %class.ap_uint.3* %38 to i8*
  %528 = bitcast %class.ap_uint.3* %lind0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %527, i8* %528, i64 2, i32 1, i1 false)
  %529 = getelementptr %class.ap_uint.1* %37, i32 0, i32 0
  %530 = bitcast [2 x i8]* %529 to i16*
  %531 = load i16* %530, align 1
  %532 = getelementptr %class.ap_uint.3* %38, i32 0, i32 0
  %533 = bitcast [2 x i8]* %532 to i16*
  %534 = load i16* %533, align 1
  %535 = call zeroext i1 @_ZeqILi13ELi16EEb7ap_uintIXT_EES0_IXT0_EE(i16 %531, i16 %534)
  br i1 %535, label %536, label %553

; <label>:536                                     ; preds = %518
  %537 = call i16 @_ZplILi13EE7ap_uintIXT_EERKS1_i(%class.ap_uint.1* %Yoffset, i32 1)
  %538 = getelementptr %class.ap_uint.1* %39, i32 0, i32 0
  %539 = bitcast [2 x i8]* %538 to i16*
  store i16 %537, i16* %539, align 1
  %540 = bitcast %class.ap_uint.3* %40 to i8*
  %541 = bitcast %class.ap_uint.3* %lind1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %540, i8* %541, i64 2, i32 1, i1 false)
  %542 = getelementptr %class.ap_uint.1* %39, i32 0, i32 0
  %543 = bitcast [2 x i8]* %542 to i16*
  %544 = load i16* %543, align 1
  %545 = getelementptr %class.ap_uint.3* %40, i32 0, i32 0
  %546 = bitcast [2 x i8]* %545 to i16*
  %547 = load i16* %546, align 1
  %548 = call zeroext i1 @_ZeqILi13ELi16EEb7ap_uintIXT_EES0_IXT0_EE(i16 %544, i16 %547)
  br i1 %548, label %549, label %553

; <label>:549                                     ; preds = %536
  %550 = call %class.ap_uint.2* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.2* %read_into, i32 2)
  %551 = call %class.ap_uint.2* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.2* %l0, i32 0)
  %552 = call %class.ap_uint.2* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.2* %l1, i32 1)
  br label %613

; <label>:553                                     ; preds = %536, %518
  %554 = bitcast %class.ap_uint.1* %41 to i8*
  %555 = bitcast %class.ap_uint.1* %Yoffset to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %554, i8* %555, i64 2, i32 1, i1 false)
  %556 = bitcast %class.ap_uint.3* %42 to i8*
  %557 = bitcast %class.ap_uint.3* %lind1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %556, i8* %557, i64 2, i32 1, i1 false)
  %558 = getelementptr %class.ap_uint.1* %41, i32 0, i32 0
  %559 = bitcast [2 x i8]* %558 to i16*
  %560 = load i16* %559, align 1
  %561 = getelementptr %class.ap_uint.3* %42, i32 0, i32 0
  %562 = bitcast [2 x i8]* %561 to i16*
  %563 = load i16* %562, align 1
  %564 = call zeroext i1 @_ZeqILi13ELi16EEb7ap_uintIXT_EES0_IXT0_EE(i16 %560, i16 %563)
  br i1 %564, label %565, label %582

; <label>:565                                     ; preds = %553
  %566 = call i16 @_ZplILi13EE7ap_uintIXT_EERKS1_i(%class.ap_uint.1* %Yoffset, i32 1)
  %567 = getelementptr %class.ap_uint.1* %43, i32 0, i32 0
  %568 = bitcast [2 x i8]* %567 to i16*
  store i16 %566, i16* %568, align 1
  %569 = bitcast %class.ap_uint.3* %44 to i8*
  %570 = bitcast %class.ap_uint.3* %lind2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %569, i8* %570, i64 2, i32 1, i1 false)
  %571 = getelementptr %class.ap_uint.1* %43, i32 0, i32 0
  %572 = bitcast [2 x i8]* %571 to i16*
  %573 = load i16* %572, align 1
  %574 = getelementptr %class.ap_uint.3* %44, i32 0, i32 0
  %575 = bitcast [2 x i8]* %574 to i16*
  %576 = load i16* %575, align 1
  %577 = call zeroext i1 @_ZeqILi13ELi16EEb7ap_uintIXT_EES0_IXT0_EE(i16 %573, i16 %576)
  br i1 %577, label %578, label %582

; <label>:578                                     ; preds = %565
  %579 = call %class.ap_uint.2* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.2* %read_into, i32 0)
  %580 = call %class.ap_uint.2* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.2* %l0, i32 1)
  %581 = call %class.ap_uint.2* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.2* %l1, i32 2)
  br label %612

; <label>:582                                     ; preds = %565, %553
  %583 = bitcast %class.ap_uint.1* %45 to i8*
  %584 = bitcast %class.ap_uint.1* %Yoffset to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %583, i8* %584, i64 2, i32 1, i1 false)
  %585 = bitcast %class.ap_uint.3* %46 to i8*
  %586 = bitcast %class.ap_uint.3* %lind2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %585, i8* %586, i64 2, i32 1, i1 false)
  %587 = getelementptr %class.ap_uint.1* %45, i32 0, i32 0
  %588 = bitcast [2 x i8]* %587 to i16*
  %589 = load i16* %588, align 1
  %590 = getelementptr %class.ap_uint.3* %46, i32 0, i32 0
  %591 = bitcast [2 x i8]* %590 to i16*
  %592 = load i16* %591, align 1
  %593 = call zeroext i1 @_ZeqILi13ELi16EEb7ap_uintIXT_EES0_IXT0_EE(i16 %589, i16 %592)
  br i1 %593, label %594, label %611

; <label>:594                                     ; preds = %582
  %595 = call i16 @_ZplILi13EE7ap_uintIXT_EERKS1_i(%class.ap_uint.1* %Yoffset, i32 1)
  %596 = getelementptr %class.ap_uint.1* %47, i32 0, i32 0
  %597 = bitcast [2 x i8]* %596 to i16*
  store i16 %595, i16* %597, align 1
  %598 = bitcast %class.ap_uint.3* %48 to i8*
  %599 = bitcast %class.ap_uint.3* %lind0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %598, i8* %599, i64 2, i32 1, i1 false)
  %600 = getelementptr %class.ap_uint.1* %47, i32 0, i32 0
  %601 = bitcast [2 x i8]* %600 to i16*
  %602 = load i16* %601, align 1
  %603 = getelementptr %class.ap_uint.3* %48, i32 0, i32 0
  %604 = bitcast [2 x i8]* %603 to i16*
  %605 = load i16* %604, align 1
  %606 = call zeroext i1 @_ZeqILi13ELi16EEb7ap_uintIXT_EES0_IXT0_EE(i16 %602, i16 %605)
  br i1 %606, label %607, label %611

; <label>:607                                     ; preds = %594
  %608 = call %class.ap_uint.2* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.2* %read_into, i32 1)
  %609 = call %class.ap_uint.2* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.2* %l0, i32 2)
  %610 = call %class.ap_uint.2* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.2* %l1, i32 0)
  br label %611

; <label>:611                                     ; preds = %607, %594, %582
  br label %612

; <label>:612                                     ; preds = %611, %578
  br label %613

; <label>:613                                     ; preds = %612, %549
  %614 = bitcast %class.ap_uint.1* %49 to i8*
  %615 = bitcast %class.ap_uint.1* %j to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %614, i8* %615, i64 2, i32 1, i1 false)
  %616 = load i16* %5, align 2
  %617 = zext i16 %616 to i32
  %618 = sub nsw i32 %617, 1
  %619 = getelementptr %class.ap_uint.1* %49, i32 0, i32 0
  %620 = bitcast [2 x i8]* %619 to i16*
  %621 = load i16* %620, align 1
  %622 = call zeroext i1 @_ZltILi13EEb7ap_uintIXT_EEi(i16 %621, i32 %618)
  br i1 %622, label %623, label %645

; <label>:623                                     ; preds = %613
  %624 = call i16 @_ZplILi13EE7ap_uintIXT_EERKS1_i(%class.ap_uint.1* %j, i32 1)
  %625 = getelementptr %class.ap_uint.1* %51, i32 0, i32 0
  %626 = bitcast [2 x i8]* %625 to i16*
  store i16 %624, i16* %626, align 1
  %627 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %51)
  %628 = getelementptr inbounds [1080 x %class.ap_uint.1]* %Voffset, i32 0, i64 %627
  %629 = bitcast %class.ap_uint.1* %50 to i8*
  %630 = bitcast %class.ap_uint.1* %628 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %629, i8* %630, i64 2, i32 1, i1 false)
  %631 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %j)
  %632 = getelementptr inbounds [1080 x %class.ap_uint.1]* %Voffset, i32 0, i64 %631
  %633 = bitcast %class.ap_uint.1* %52 to i8*
  %634 = bitcast %class.ap_uint.1* %632 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %633, i8* %634, i64 2, i32 1, i1 false)
  %635 = getelementptr %class.ap_uint.1* %50, i32 0, i32 0
  %636 = bitcast [2 x i8]* %635 to i16*
  %637 = load i16* %636, align 1
  %638 = getelementptr %class.ap_uint.1* %52, i32 0, i32 0
  %639 = bitcast [2 x i8]* %638 to i16*
  %640 = load i16* %639, align 1
  %641 = call zeroext i1 @_ZneILi13ELi13EEb7ap_uintIXT_EES0_IXT0_EE(i16 %637, i16 %640)
  br i1 %641, label %642, label %643

; <label>:642                                     ; preds = %623
  store i8 1, i8* %read_flag, align 1
  br label %644

; <label>:643                                     ; preds = %623
  store i8 0, i8* %read_flag, align 1
  br label %644

; <label>:644                                     ; preds = %643, %642
  br label %646

; <label>:645                                     ; preds = %613
  store i8 0, i8* %read_flag, align 1
  br label %646

; <label>:646                                     ; preds = %645, %644
  br label %647

; <label>:647                                     ; preds = %646
  %648 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSEi(%class.ap_uint.1* %i, i32 0)
  br label %649

; <label>:649                                     ; preds = %1286, %647
  %650 = bitcast %class.ap_uint.1* %53 to i8*
  %651 = bitcast %class.ap_uint.1* %i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %650, i8* %651, i64 2, i32 1, i1 false)
  %652 = load i16* %6, align 2
  %653 = zext i16 %652 to i32
  %654 = shl i32 %653, 0
  %655 = getelementptr %class.ap_uint.1* %53, i32 0, i32 0
  %656 = bitcast [2 x i8]* %655 to i16*
  %657 = load i16* %656, align 1
  %658 = call zeroext i1 @_ZltILi13EEb7ap_uintIXT_EEi(i16 %657, i32 %654)
  br i1 %658, label %659, label %1291

; <label>:659                                     ; preds = %649
  %660 = bitcast %class.ap_uint.1* %55 to i8*
  %661 = bitcast %class.ap_uint.1* %i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %660, i8* %661, i64 2, i32 1, i1 false)
  %662 = getelementptr %class.ap_uint.1* %55, i32 0, i32 0
  %663 = bitcast [2 x i8]* %662 to i16*
  %664 = load i16* %663, align 1
  %665 = call i16 @_ZrsILi13EE7ap_uintIXT_EES1_i(i16 %664, i32 0)
  %666 = getelementptr %class.ap_uint.1* %54, i32 0, i32 0
  %667 = bitcast [2 x i8]* %666 to i16*
  store i16 %665, i16* %667, align 1
  %668 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSERKS0_(%class.ap_uint.1* %block_ind, %class.ap_uint.1* %54)
  br i1 true, label %669, label %674

; <label>:669                                     ; preds = %659
  %670 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %block_ind)
  %671 = getelementptr inbounds [1920 x %class.ap_uint.1]* %Hoffset, i32 0, i64 %670
  %672 = bitcast %class.ap_uint.1* %56 to i8*
  %673 = bitcast %class.ap_uint.1* %671 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %672, i8* %673, i64 2, i32 1, i1 false)
  br label %678

; <label>:674                                     ; preds = %659
  %675 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %block_ind)
  %676 = getelementptr inbounds [1921 x i16]* %Hstart, i32 0, i64 %675
  %677 = load i16* %676, align 2
  call void @_ZN7ap_uintILi13EEC1Et(%class.ap_uint.1* %56, i16 zeroext %677)
  br label %678

; <label>:678                                     ; preds = %674, %669
  %679 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSERKS0_(%class.ap_uint.1* %block_start, %class.ap_uint.1* %56)
  %680 = bitcast %class.ap_uint.1* %58 to i8*
  %681 = bitcast %class.ap_uint.1* %block_start to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %680, i8* %681, i64 2, i32 1, i1 false)
  %682 = getelementptr %class.ap_uint.1* %58, i32 0, i32 0
  %683 = bitcast [2 x i8]* %682 to i16*
  %684 = load i16* %683, align 1
  %685 = call i16 @_ZrsILi13EE7ap_uintIXT_EES1_i(i16 %684, i32 0)
  %686 = getelementptr %class.ap_uint.1* %57, i32 0, i32 0
  %687 = bitcast [2 x i8]* %686 to i16*
  store i16 %685, i16* %687, align 1
  %688 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSERKS0_(%class.ap_uint.1* %bufferIndex, %class.ap_uint.1* %57)
  %689 = load i8* %read_flag, align 1
  %690 = trunc i8 %689 to i1
  br i1 %690, label %691, label %1010

; <label>:691                                     ; preds = %678
  %692 = bitcast %class.ap_uint.1* %59 to i8*
  %693 = bitcast %class.ap_uint.1* %i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %692, i8* %693, i64 2, i32 1, i1 false)
  %694 = load i16* %4, align 2
  %695 = zext i16 %694 to i32
  %696 = shl i32 %695, 0
  %697 = getelementptr %class.ap_uint.1* %59, i32 0, i32 0
  %698 = bitcast [2 x i8]* %697 to i16*
  %699 = load i16* %698, align 1
  %700 = call zeroext i1 @_ZltILi13EEb7ap_uintIXT_EEi(i16 %699, i32 %696)
  br i1 %700, label %701, label %1010

; <label>:701                                     ; preds = %691
  %702 = bitcast %class.ap_uint.3* %60 to i8*
  %703 = bitcast %class.ap_uint.3* %out_j to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %702, i8* %703, i64 2, i32 1, i1 false)
  %704 = load i16* %3, align 2
  %705 = getelementptr %class.ap_uint.3* %60, i32 0, i32 0
  %706 = bitcast [2 x i8]* %705 to i16*
  %707 = load i16* %706, align 1
  %708 = call zeroext i1 @_ZltILi16EEb7ap_uintIXT_EEt(i16 %707, i16 zeroext %704)
  br i1 %708, label %709, label %1010

; <label>:709                                     ; preds = %701
  %710 = bitcast %class.ap_uint.2* %61 to i8*
  %711 = bitcast %class.ap_uint.2* %read_into to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %710, i8* %711, i64 1, i32 1, i1 false)
  %712 = getelementptr %class.ap_uint.2* %61, i32 0, i32 0
  %713 = bitcast [1 x i8]* %712 to i8*
  %714 = load i8* %713, align 1
  %715 = call zeroext i1 @_ZeqILi2EEb7ap_uintIXT_EEi(i8 %714, i32 0)
  br i1 %715, label %716, label %811

; <label>:716                                     ; preds = %709
  %717 = bitcast %class.ap_uint.1* %62 to i8*
  %718 = bitcast %class.ap_uint.1* %i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %717, i8* %718, i64 2, i32 1, i1 false)
  %719 = getelementptr %class.ap_uint.1* %62, i32 0, i32 0
  %720 = bitcast [2 x i8]* %719 to i16*
  %721 = load i16* %720, align 1
  %722 = call i16 @_ZrsILi13EE7ap_uintIXT_EES1_i(i16 %721, i32 0)
  %723 = getelementptr %class.ap_uint.1* %63, i32 0, i32 0
  %724 = bitcast [2 x i8]* %723 to i16*
  store i16 %722, i16* %724, align 1
  %725 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %63)
  %726 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in0, i32 0, i64 %725
  %727 = load %struct.xf_Mat_0_256_256_1_** %1, align 8
  %728 = load i32* %read_index, align 4
  %729 = add nsw i32 %728, 1
  store i32 %729, i32* %read_index, align 4
  %730 = call i8 @_ZL36p_ZN2xf16Mat_0_256_256_1_4readIEEi_1P19xf_Mat_0_256_256_1_i(%struct.xf_Mat_0_256_256_1_* %727, i32 %728)
  %731 = getelementptr %class.ap_uint.0* %64, i32 0, i32 0
  %732 = bitcast [1 x i8]* %731 to i8*
  store i8 %730, i8* %732, align 1
  %733 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %726, %class.ap_uint.0* %64)
  %734 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSEi(%class.ap_uint.1* %k, i32 0)
  br label %735

; <label>:735                                     ; preds = %806, %716
  %736 = bitcast %class.ap_uint.1* %65 to i8*
  %737 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %736, i8* %737, i64 2, i32 1, i1 false)
  %738 = getelementptr %class.ap_uint.1* %65, i32 0, i32 0
  %739 = bitcast [2 x i8]* %738 to i16*
  %740 = load i16* %739, align 1
  %741 = call zeroext i1 @_ZltILi13EEb7ap_uintIXT_EEi(i16 %740, i32 2)
  br i1 %741, label %742, label %810

; <label>:742                                     ; preds = %735
  %743 = bitcast %class.ap_uint.1* %67 to i8*
  %744 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %743, i8* %744, i64 2, i32 1, i1 false)
  %745 = bitcast %class.ap_uint.1* %68 to i8*
  %746 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %745, i8* %746, i64 2, i32 1, i1 false)
  %747 = getelementptr %class.ap_uint.1* %67, i32 0, i32 0
  %748 = bitcast [2 x i8]* %747 to i16*
  %749 = load i16* %748, align 1
  %750 = getelementptr %class.ap_uint.1* %68, i32 0, i32 0
  %751 = bitcast [2 x i8]* %750 to i16*
  %752 = load i16* %751, align 1
  %753 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %749, i16 %752)
  %754 = getelementptr %class.ap_int* %66, i32 0, i32 0
  %755 = bitcast [4 x i8]* %754 to i32*
  store i32 %753, i32* %755, align 1
  %756 = load i16* %4, align 2
  %757 = getelementptr %class.ap_int* %66, i32 0, i32 0
  %758 = bitcast [4 x i8]* %757 to i32*
  %759 = load i32* %758, align 1
  %760 = call zeroext i1 @_ZltILi26EEb6ap_intIXT_EEt(i32 %759, i16 zeroext %756)
  br i1 %760, label %761, label %798

; <label>:761                                     ; preds = %742
  %762 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %763 = getelementptr inbounds [2 x %class.ap_uint.0]* %D0, i32 0, i64 %762
  %764 = bitcast %class.ap_uint.1* %69 to i8*
  %765 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %764, i8* %765, i64 2, i32 1, i1 false)
  %766 = bitcast %class.ap_uint.1* %70 to i8*
  %767 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %766, i8* %767, i64 2, i32 1, i1 false)
  %768 = getelementptr %class.ap_uint.1* %69, i32 0, i32 0
  %769 = bitcast [2 x i8]* %768 to i16*
  %770 = load i16* %769, align 1
  %771 = getelementptr %class.ap_uint.1* %70, i32 0, i32 0
  %772 = bitcast [2 x i8]* %771 to i16*
  %773 = load i16* %772, align 1
  %774 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %770, i16 %773)
  %775 = getelementptr %class.ap_int* %71, i32 0, i32 0
  %776 = bitcast [4 x i8]* %775 to i32*
  store i32 %774, i32* %776, align 1
  %777 = call i64 @_ZNK6ap_intILi26EEcvlEv(%class.ap_int* %71)
  %778 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in1, i32 0, i64 %777
  %779 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %763, %class.ap_uint.0* %778)
  %780 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %781 = getelementptr inbounds [2 x %class.ap_uint.0]* %D1, i32 0, i64 %780
  %782 = bitcast %class.ap_uint.1* %72 to i8*
  %783 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %782, i8* %783, i64 2, i32 1, i1 false)
  %784 = bitcast %class.ap_uint.1* %73 to i8*
  %785 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %784, i8* %785, i64 2, i32 1, i1 false)
  %786 = getelementptr %class.ap_uint.1* %72, i32 0, i32 0
  %787 = bitcast [2 x i8]* %786 to i16*
  %788 = load i16* %787, align 1
  %789 = getelementptr %class.ap_uint.1* %73, i32 0, i32 0
  %790 = bitcast [2 x i8]* %789 to i16*
  %791 = load i16* %790, align 1
  %792 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %788, i16 %791)
  %793 = getelementptr %class.ap_int* %74, i32 0, i32 0
  %794 = bitcast [4 x i8]* %793 to i32*
  store i32 %792, i32* %794, align 1
  %795 = call i64 @_ZNK6ap_intILi26EEcvlEv(%class.ap_int* %74)
  %796 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in2, i32 0, i64 %795
  %797 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %781, %class.ap_uint.0* %796)
  br label %805

; <label>:798                                     ; preds = %742
  %799 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %800 = getelementptr inbounds [2 x %class.ap_uint.0]* %D0, i32 0, i64 %799
  %801 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %800, i32 0)
  %802 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %803 = getelementptr inbounds [2 x %class.ap_uint.0]* %D1, i32 0, i64 %802
  %804 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %803, i32 0)
  br label %805

; <label>:805                                     ; preds = %798, %761
  br label %806

; <label>:806                                     ; preds = %805
  %807 = call i16 @_ZN7ap_uintILi13EEppEi(%class.ap_uint.1* %k, i32 0)
  %808 = getelementptr %class.ap_uint.1* %75, i32 0, i32 0
  %809 = bitcast [2 x i8]* %808 to i16*
  store i16 %807, i16* %809, align 1
  br label %735

; <label>:810                                     ; preds = %735
  br label %1009

; <label>:811                                     ; preds = %709
  %812 = bitcast %class.ap_uint.2* %76 to i8*
  %813 = bitcast %class.ap_uint.2* %read_into to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %812, i8* %813, i64 1, i32 1, i1 false)
  %814 = getelementptr %class.ap_uint.2* %76, i32 0, i32 0
  %815 = bitcast [1 x i8]* %814 to i8*
  %816 = load i8* %815, align 1
  %817 = call zeroext i1 @_ZeqILi2EEb7ap_uintIXT_EEi(i8 %816, i32 1)
  br i1 %817, label %818, label %913

; <label>:818                                     ; preds = %811
  %819 = bitcast %class.ap_uint.1* %77 to i8*
  %820 = bitcast %class.ap_uint.1* %i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %819, i8* %820, i64 2, i32 1, i1 false)
  %821 = getelementptr %class.ap_uint.1* %77, i32 0, i32 0
  %822 = bitcast [2 x i8]* %821 to i16*
  %823 = load i16* %822, align 1
  %824 = call i16 @_ZrsILi13EE7ap_uintIXT_EES1_i(i16 %823, i32 0)
  %825 = getelementptr %class.ap_uint.1* %78, i32 0, i32 0
  %826 = bitcast [2 x i8]* %825 to i16*
  store i16 %824, i16* %826, align 1
  %827 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %78)
  %828 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in1, i32 0, i64 %827
  %829 = load %struct.xf_Mat_0_256_256_1_** %1, align 8
  %830 = load i32* %read_index, align 4
  %831 = add nsw i32 %830, 1
  store i32 %831, i32* %read_index, align 4
  %832 = call i8 @_ZL36p_ZN2xf16Mat_0_256_256_1_4readIEEi_1P19xf_Mat_0_256_256_1_i(%struct.xf_Mat_0_256_256_1_* %829, i32 %830)
  %833 = getelementptr %class.ap_uint.0* %79, i32 0, i32 0
  %834 = bitcast [1 x i8]* %833 to i8*
  store i8 %832, i8* %834, align 1
  %835 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %828, %class.ap_uint.0* %79)
  %836 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSEi(%class.ap_uint.1* %k, i32 0)
  br label %837

; <label>:837                                     ; preds = %908, %818
  %838 = bitcast %class.ap_uint.1* %80 to i8*
  %839 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %838, i8* %839, i64 2, i32 1, i1 false)
  %840 = getelementptr %class.ap_uint.1* %80, i32 0, i32 0
  %841 = bitcast [2 x i8]* %840 to i16*
  %842 = load i16* %841, align 1
  %843 = call zeroext i1 @_ZltILi13EEb7ap_uintIXT_EEi(i16 %842, i32 2)
  br i1 %843, label %844, label %912

; <label>:844                                     ; preds = %837
  %845 = bitcast %class.ap_uint.1* %82 to i8*
  %846 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %845, i8* %846, i64 2, i32 1, i1 false)
  %847 = bitcast %class.ap_uint.1* %83 to i8*
  %848 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %847, i8* %848, i64 2, i32 1, i1 false)
  %849 = getelementptr %class.ap_uint.1* %82, i32 0, i32 0
  %850 = bitcast [2 x i8]* %849 to i16*
  %851 = load i16* %850, align 1
  %852 = getelementptr %class.ap_uint.1* %83, i32 0, i32 0
  %853 = bitcast [2 x i8]* %852 to i16*
  %854 = load i16* %853, align 1
  %855 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %851, i16 %854)
  %856 = getelementptr %class.ap_int* %81, i32 0, i32 0
  %857 = bitcast [4 x i8]* %856 to i32*
  store i32 %855, i32* %857, align 1
  %858 = load i16* %4, align 2
  %859 = getelementptr %class.ap_int* %81, i32 0, i32 0
  %860 = bitcast [4 x i8]* %859 to i32*
  %861 = load i32* %860, align 1
  %862 = call zeroext i1 @_ZltILi26EEb6ap_intIXT_EEt(i32 %861, i16 zeroext %858)
  br i1 %862, label %863, label %900

; <label>:863                                     ; preds = %844
  %864 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %865 = getelementptr inbounds [2 x %class.ap_uint.0]* %D0, i32 0, i64 %864
  %866 = bitcast %class.ap_uint.1* %84 to i8*
  %867 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %866, i8* %867, i64 2, i32 1, i1 false)
  %868 = bitcast %class.ap_uint.1* %85 to i8*
  %869 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %868, i8* %869, i64 2, i32 1, i1 false)
  %870 = getelementptr %class.ap_uint.1* %84, i32 0, i32 0
  %871 = bitcast [2 x i8]* %870 to i16*
  %872 = load i16* %871, align 1
  %873 = getelementptr %class.ap_uint.1* %85, i32 0, i32 0
  %874 = bitcast [2 x i8]* %873 to i16*
  %875 = load i16* %874, align 1
  %876 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %872, i16 %875)
  %877 = getelementptr %class.ap_int* %86, i32 0, i32 0
  %878 = bitcast [4 x i8]* %877 to i32*
  store i32 %876, i32* %878, align 1
  %879 = call i64 @_ZNK6ap_intILi26EEcvlEv(%class.ap_int* %86)
  %880 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in2, i32 0, i64 %879
  %881 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %865, %class.ap_uint.0* %880)
  %882 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %883 = getelementptr inbounds [2 x %class.ap_uint.0]* %D1, i32 0, i64 %882
  %884 = bitcast %class.ap_uint.1* %87 to i8*
  %885 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %884, i8* %885, i64 2, i32 1, i1 false)
  %886 = bitcast %class.ap_uint.1* %88 to i8*
  %887 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %886, i8* %887, i64 2, i32 1, i1 false)
  %888 = getelementptr %class.ap_uint.1* %87, i32 0, i32 0
  %889 = bitcast [2 x i8]* %888 to i16*
  %890 = load i16* %889, align 1
  %891 = getelementptr %class.ap_uint.1* %88, i32 0, i32 0
  %892 = bitcast [2 x i8]* %891 to i16*
  %893 = load i16* %892, align 1
  %894 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %890, i16 %893)
  %895 = getelementptr %class.ap_int* %89, i32 0, i32 0
  %896 = bitcast [4 x i8]* %895 to i32*
  store i32 %894, i32* %896, align 1
  %897 = call i64 @_ZNK6ap_intILi26EEcvlEv(%class.ap_int* %89)
  %898 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in0, i32 0, i64 %897
  %899 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %883, %class.ap_uint.0* %898)
  br label %907

; <label>:900                                     ; preds = %844
  %901 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %902 = getelementptr inbounds [2 x %class.ap_uint.0]* %D0, i32 0, i64 %901
  %903 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %902, i32 0)
  %904 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %905 = getelementptr inbounds [2 x %class.ap_uint.0]* %D1, i32 0, i64 %904
  %906 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %905, i32 0)
  br label %907

; <label>:907                                     ; preds = %900, %863
  br label %908

; <label>:908                                     ; preds = %907
  %909 = call i16 @_ZN7ap_uintILi13EEppEi(%class.ap_uint.1* %k, i32 0)
  %910 = getelementptr %class.ap_uint.1* %90, i32 0, i32 0
  %911 = bitcast [2 x i8]* %910 to i16*
  store i16 %909, i16* %911, align 1
  br label %837

; <label>:912                                     ; preds = %837
  br label %1008

; <label>:913                                     ; preds = %811
  %914 = bitcast %class.ap_uint.1* %91 to i8*
  %915 = bitcast %class.ap_uint.1* %i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %914, i8* %915, i64 2, i32 1, i1 false)
  %916 = getelementptr %class.ap_uint.1* %91, i32 0, i32 0
  %917 = bitcast [2 x i8]* %916 to i16*
  %918 = load i16* %917, align 1
  %919 = call i16 @_ZrsILi13EE7ap_uintIXT_EES1_i(i16 %918, i32 0)
  %920 = getelementptr %class.ap_uint.1* %92, i32 0, i32 0
  %921 = bitcast [2 x i8]* %920 to i16*
  store i16 %919, i16* %921, align 1
  %922 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %92)
  %923 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in2, i32 0, i64 %922
  %924 = load %struct.xf_Mat_0_256_256_1_** %1, align 8
  %925 = load i32* %read_index, align 4
  %926 = add nsw i32 %925, 1
  store i32 %926, i32* %read_index, align 4
  %927 = call i8 @_ZL36p_ZN2xf16Mat_0_256_256_1_4readIEEi_1P19xf_Mat_0_256_256_1_i(%struct.xf_Mat_0_256_256_1_* %924, i32 %925)
  %928 = getelementptr %class.ap_uint.0* %93, i32 0, i32 0
  %929 = bitcast [1 x i8]* %928 to i8*
  store i8 %927, i8* %929, align 1
  %930 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %923, %class.ap_uint.0* %93)
  %931 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSEi(%class.ap_uint.1* %k, i32 0)
  br label %932

; <label>:932                                     ; preds = %1003, %913
  %933 = bitcast %class.ap_uint.1* %94 to i8*
  %934 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %933, i8* %934, i64 2, i32 1, i1 false)
  %935 = getelementptr %class.ap_uint.1* %94, i32 0, i32 0
  %936 = bitcast [2 x i8]* %935 to i16*
  %937 = load i16* %936, align 1
  %938 = call zeroext i1 @_ZltILi13EEb7ap_uintIXT_EEi(i16 %937, i32 2)
  br i1 %938, label %939, label %1007

; <label>:939                                     ; preds = %932
  %940 = bitcast %class.ap_uint.1* %96 to i8*
  %941 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %940, i8* %941, i64 2, i32 1, i1 false)
  %942 = bitcast %class.ap_uint.1* %97 to i8*
  %943 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %942, i8* %943, i64 2, i32 1, i1 false)
  %944 = getelementptr %class.ap_uint.1* %96, i32 0, i32 0
  %945 = bitcast [2 x i8]* %944 to i16*
  %946 = load i16* %945, align 1
  %947 = getelementptr %class.ap_uint.1* %97, i32 0, i32 0
  %948 = bitcast [2 x i8]* %947 to i16*
  %949 = load i16* %948, align 1
  %950 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %946, i16 %949)
  %951 = getelementptr %class.ap_int* %95, i32 0, i32 0
  %952 = bitcast [4 x i8]* %951 to i32*
  store i32 %950, i32* %952, align 1
  %953 = load i16* %4, align 2
  %954 = getelementptr %class.ap_int* %95, i32 0, i32 0
  %955 = bitcast [4 x i8]* %954 to i32*
  %956 = load i32* %955, align 1
  %957 = call zeroext i1 @_ZltILi26EEb6ap_intIXT_EEt(i32 %956, i16 zeroext %953)
  br i1 %957, label %958, label %995

; <label>:958                                     ; preds = %939
  %959 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %960 = getelementptr inbounds [2 x %class.ap_uint.0]* %D0, i32 0, i64 %959
  %961 = bitcast %class.ap_uint.1* %98 to i8*
  %962 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %961, i8* %962, i64 2, i32 1, i1 false)
  %963 = bitcast %class.ap_uint.1* %99 to i8*
  %964 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %963, i8* %964, i64 2, i32 1, i1 false)
  %965 = getelementptr %class.ap_uint.1* %98, i32 0, i32 0
  %966 = bitcast [2 x i8]* %965 to i16*
  %967 = load i16* %966, align 1
  %968 = getelementptr %class.ap_uint.1* %99, i32 0, i32 0
  %969 = bitcast [2 x i8]* %968 to i16*
  %970 = load i16* %969, align 1
  %971 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %967, i16 %970)
  %972 = getelementptr %class.ap_int* %100, i32 0, i32 0
  %973 = bitcast [4 x i8]* %972 to i32*
  store i32 %971, i32* %973, align 1
  %974 = call i64 @_ZNK6ap_intILi26EEcvlEv(%class.ap_int* %100)
  %975 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in0, i32 0, i64 %974
  %976 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %960, %class.ap_uint.0* %975)
  %977 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %978 = getelementptr inbounds [2 x %class.ap_uint.0]* %D1, i32 0, i64 %977
  %979 = bitcast %class.ap_uint.1* %101 to i8*
  %980 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %979, i8* %980, i64 2, i32 1, i1 false)
  %981 = bitcast %class.ap_uint.1* %102 to i8*
  %982 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %981, i8* %982, i64 2, i32 1, i1 false)
  %983 = getelementptr %class.ap_uint.1* %101, i32 0, i32 0
  %984 = bitcast [2 x i8]* %983 to i16*
  %985 = load i16* %984, align 1
  %986 = getelementptr %class.ap_uint.1* %102, i32 0, i32 0
  %987 = bitcast [2 x i8]* %986 to i16*
  %988 = load i16* %987, align 1
  %989 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %985, i16 %988)
  %990 = getelementptr %class.ap_int* %103, i32 0, i32 0
  %991 = bitcast [4 x i8]* %990 to i32*
  store i32 %989, i32* %991, align 1
  %992 = call i64 @_ZNK6ap_intILi26EEcvlEv(%class.ap_int* %103)
  %993 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in1, i32 0, i64 %992
  %994 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %978, %class.ap_uint.0* %993)
  br label %1002

; <label>:995                                     ; preds = %939
  %996 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %997 = getelementptr inbounds [2 x %class.ap_uint.0]* %D0, i32 0, i64 %996
  %998 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %997, i32 0)
  %999 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %1000 = getelementptr inbounds [2 x %class.ap_uint.0]* %D1, i32 0, i64 %999
  %1001 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %1000, i32 0)
  br label %1002

; <label>:1002                                    ; preds = %995, %958
  br label %1003

; <label>:1003                                    ; preds = %1002
  %1004 = call i16 @_ZN7ap_uintILi13EEppEi(%class.ap_uint.1* %k, i32 0)
  %1005 = getelementptr %class.ap_uint.1* %104, i32 0, i32 0
  %1006 = bitcast [2 x i8]* %1005 to i16*
  store i16 %1004, i16* %1006, align 1
  br label %932

; <label>:1007                                    ; preds = %932
  br label %1008

; <label>:1008                                    ; preds = %1007, %912
  br label %1009

; <label>:1009                                    ; preds = %1008, %810
  br label %1259

; <label>:1010                                    ; preds = %701, %691, %678
  %1011 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSEi(%class.ap_uint.1* %k, i32 0)
  br label %1012

; <label>:1012                                    ; preds = %1254, %1010
  %1013 = bitcast %class.ap_uint.1* %105 to i8*
  %1014 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1013, i8* %1014, i64 2, i32 1, i1 false)
  %1015 = getelementptr %class.ap_uint.1* %105, i32 0, i32 0
  %1016 = bitcast [2 x i8]* %1015 to i16*
  %1017 = load i16* %1016, align 1
  %1018 = call zeroext i1 @_ZltILi13EEb7ap_uintIXT_EEi(i16 %1017, i32 2)
  br i1 %1018, label %1019, label %1258

; <label>:1019                                    ; preds = %1012
  %1020 = bitcast %class.ap_uint.1* %107 to i8*
  %1021 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1020, i8* %1021, i64 2, i32 1, i1 false)
  %1022 = bitcast %class.ap_uint.1* %108 to i8*
  %1023 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1022, i8* %1023, i64 2, i32 1, i1 false)
  %1024 = getelementptr %class.ap_uint.1* %107, i32 0, i32 0
  %1025 = bitcast [2 x i8]* %1024 to i16*
  %1026 = load i16* %1025, align 1
  %1027 = getelementptr %class.ap_uint.1* %108, i32 0, i32 0
  %1028 = bitcast [2 x i8]* %1027 to i16*
  %1029 = load i16* %1028, align 1
  %1030 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %1026, i16 %1029)
  %1031 = getelementptr %class.ap_int* %106, i32 0, i32 0
  %1032 = bitcast [4 x i8]* %1031 to i32*
  store i32 %1030, i32* %1032, align 1
  %1033 = load i16* %4, align 2
  %1034 = getelementptr %class.ap_int* %106, i32 0, i32 0
  %1035 = bitcast [4 x i8]* %1034 to i32*
  %1036 = load i32* %1035, align 1
  %1037 = call zeroext i1 @_ZltILi26EEb6ap_intIXT_EEt(i32 %1036, i16 zeroext %1033)
  br i1 %1037, label %1038, label %1246

; <label>:1038                                    ; preds = %1019
  %1039 = bitcast %class.ap_uint.2* %109 to i8*
  %1040 = bitcast %class.ap_uint.2* %l0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1039, i8* %1040, i64 1, i32 1, i1 false)
  %1041 = getelementptr %class.ap_uint.2* %109, i32 0, i32 0
  %1042 = bitcast [1 x i8]* %1041 to i8*
  %1043 = load i8* %1042, align 1
  %1044 = call zeroext i1 @_ZeqILi2EEb7ap_uintIXT_EEi(i8 %1043, i32 0)
  br i1 %1044, label %1045, label %1109

; <label>:1045                                    ; preds = %1038
  %1046 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %1047 = getelementptr inbounds [2 x %class.ap_uint.0]* %D0, i32 0, i64 %1046
  %1048 = bitcast %class.ap_uint.1* %110 to i8*
  %1049 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1048, i8* %1049, i64 2, i32 1, i1 false)
  %1050 = bitcast %class.ap_uint.1* %111 to i8*
  %1051 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1050, i8* %1051, i64 2, i32 1, i1 false)
  %1052 = getelementptr %class.ap_uint.1* %110, i32 0, i32 0
  %1053 = bitcast [2 x i8]* %1052 to i16*
  %1054 = load i16* %1053, align 1
  %1055 = getelementptr %class.ap_uint.1* %111, i32 0, i32 0
  %1056 = bitcast [2 x i8]* %1055 to i16*
  %1057 = load i16* %1056, align 1
  %1058 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %1054, i16 %1057)
  %1059 = getelementptr %class.ap_int* %112, i32 0, i32 0
  %1060 = bitcast [4 x i8]* %1059 to i32*
  store i32 %1058, i32* %1060, align 1
  %1061 = call i64 @_ZNK6ap_intILi26EEcvlEv(%class.ap_int* %112)
  %1062 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in0, i32 0, i64 %1061
  %1063 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %1047, %class.ap_uint.0* %1062)
  %1064 = bitcast %class.ap_uint.2* %113 to i8*
  %1065 = bitcast %class.ap_uint.2* %l1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1064, i8* %1065, i64 1, i32 1, i1 false)
  %1066 = getelementptr %class.ap_uint.2* %113, i32 0, i32 0
  %1067 = bitcast [1 x i8]* %1066 to i8*
  %1068 = load i8* %1067, align 1
  %1069 = call zeroext i1 @_ZeqILi2EEb7ap_uintIXT_EEi(i8 %1068, i32 1)
  br i1 %1069, label %1070, label %1089

; <label>:1070                                    ; preds = %1045
  %1071 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %1072 = getelementptr inbounds [2 x %class.ap_uint.0]* %D1, i32 0, i64 %1071
  %1073 = bitcast %class.ap_uint.1* %114 to i8*
  %1074 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1073, i8* %1074, i64 2, i32 1, i1 false)
  %1075 = bitcast %class.ap_uint.1* %115 to i8*
  %1076 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1075, i8* %1076, i64 2, i32 1, i1 false)
  %1077 = getelementptr %class.ap_uint.1* %114, i32 0, i32 0
  %1078 = bitcast [2 x i8]* %1077 to i16*
  %1079 = load i16* %1078, align 1
  %1080 = getelementptr %class.ap_uint.1* %115, i32 0, i32 0
  %1081 = bitcast [2 x i8]* %1080 to i16*
  %1082 = load i16* %1081, align 1
  %1083 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %1079, i16 %1082)
  %1084 = getelementptr %class.ap_int* %116, i32 0, i32 0
  %1085 = bitcast [4 x i8]* %1084 to i32*
  store i32 %1083, i32* %1085, align 1
  %1086 = call i64 @_ZNK6ap_intILi26EEcvlEv(%class.ap_int* %116)
  %1087 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in1, i32 0, i64 %1086
  %1088 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %1072, %class.ap_uint.0* %1087)
  br label %1108

; <label>:1089                                    ; preds = %1045
  %1090 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %1091 = getelementptr inbounds [2 x %class.ap_uint.0]* %D1, i32 0, i64 %1090
  %1092 = bitcast %class.ap_uint.1* %117 to i8*
  %1093 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1092, i8* %1093, i64 2, i32 1, i1 false)
  %1094 = bitcast %class.ap_uint.1* %118 to i8*
  %1095 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1094, i8* %1095, i64 2, i32 1, i1 false)
  %1096 = getelementptr %class.ap_uint.1* %117, i32 0, i32 0
  %1097 = bitcast [2 x i8]* %1096 to i16*
  %1098 = load i16* %1097, align 1
  %1099 = getelementptr %class.ap_uint.1* %118, i32 0, i32 0
  %1100 = bitcast [2 x i8]* %1099 to i16*
  %1101 = load i16* %1100, align 1
  %1102 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %1098, i16 %1101)
  %1103 = getelementptr %class.ap_int* %119, i32 0, i32 0
  %1104 = bitcast [4 x i8]* %1103 to i32*
  store i32 %1102, i32* %1104, align 1
  %1105 = call i64 @_ZNK6ap_intILi26EEcvlEv(%class.ap_int* %119)
  %1106 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in2, i32 0, i64 %1105
  %1107 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %1091, %class.ap_uint.0* %1106)
  br label %1108

; <label>:1108                                    ; preds = %1089, %1070
  br label %1245

; <label>:1109                                    ; preds = %1038
  %1110 = bitcast %class.ap_uint.2* %120 to i8*
  %1111 = bitcast %class.ap_uint.2* %l0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1110, i8* %1111, i64 1, i32 1, i1 false)
  %1112 = getelementptr %class.ap_uint.2* %120, i32 0, i32 0
  %1113 = bitcast [1 x i8]* %1112 to i8*
  %1114 = load i8* %1113, align 1
  %1115 = call zeroext i1 @_ZeqILi2EEb7ap_uintIXT_EEi(i8 %1114, i32 1)
  br i1 %1115, label %1116, label %1180

; <label>:1116                                    ; preds = %1109
  %1117 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %1118 = getelementptr inbounds [2 x %class.ap_uint.0]* %D0, i32 0, i64 %1117
  %1119 = bitcast %class.ap_uint.1* %121 to i8*
  %1120 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1119, i8* %1120, i64 2, i32 1, i1 false)
  %1121 = bitcast %class.ap_uint.1* %122 to i8*
  %1122 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1121, i8* %1122, i64 2, i32 1, i1 false)
  %1123 = getelementptr %class.ap_uint.1* %121, i32 0, i32 0
  %1124 = bitcast [2 x i8]* %1123 to i16*
  %1125 = load i16* %1124, align 1
  %1126 = getelementptr %class.ap_uint.1* %122, i32 0, i32 0
  %1127 = bitcast [2 x i8]* %1126 to i16*
  %1128 = load i16* %1127, align 1
  %1129 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %1125, i16 %1128)
  %1130 = getelementptr %class.ap_int* %123, i32 0, i32 0
  %1131 = bitcast [4 x i8]* %1130 to i32*
  store i32 %1129, i32* %1131, align 1
  %1132 = call i64 @_ZNK6ap_intILi26EEcvlEv(%class.ap_int* %123)
  %1133 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in1, i32 0, i64 %1132
  %1134 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %1118, %class.ap_uint.0* %1133)
  %1135 = bitcast %class.ap_uint.2* %124 to i8*
  %1136 = bitcast %class.ap_uint.2* %l1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1135, i8* %1136, i64 1, i32 1, i1 false)
  %1137 = getelementptr %class.ap_uint.2* %124, i32 0, i32 0
  %1138 = bitcast [1 x i8]* %1137 to i8*
  %1139 = load i8* %1138, align 1
  %1140 = call zeroext i1 @_ZeqILi2EEb7ap_uintIXT_EEi(i8 %1139, i32 0)
  br i1 %1140, label %1141, label %1160

; <label>:1141                                    ; preds = %1116
  %1142 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %1143 = getelementptr inbounds [2 x %class.ap_uint.0]* %D1, i32 0, i64 %1142
  %1144 = bitcast %class.ap_uint.1* %125 to i8*
  %1145 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1144, i8* %1145, i64 2, i32 1, i1 false)
  %1146 = bitcast %class.ap_uint.1* %126 to i8*
  %1147 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1146, i8* %1147, i64 2, i32 1, i1 false)
  %1148 = getelementptr %class.ap_uint.1* %125, i32 0, i32 0
  %1149 = bitcast [2 x i8]* %1148 to i16*
  %1150 = load i16* %1149, align 1
  %1151 = getelementptr %class.ap_uint.1* %126, i32 0, i32 0
  %1152 = bitcast [2 x i8]* %1151 to i16*
  %1153 = load i16* %1152, align 1
  %1154 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %1150, i16 %1153)
  %1155 = getelementptr %class.ap_int* %127, i32 0, i32 0
  %1156 = bitcast [4 x i8]* %1155 to i32*
  store i32 %1154, i32* %1156, align 1
  %1157 = call i64 @_ZNK6ap_intILi26EEcvlEv(%class.ap_int* %127)
  %1158 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in0, i32 0, i64 %1157
  %1159 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %1143, %class.ap_uint.0* %1158)
  br label %1179

; <label>:1160                                    ; preds = %1116
  %1161 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %1162 = getelementptr inbounds [2 x %class.ap_uint.0]* %D1, i32 0, i64 %1161
  %1163 = bitcast %class.ap_uint.1* %128 to i8*
  %1164 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1163, i8* %1164, i64 2, i32 1, i1 false)
  %1165 = bitcast %class.ap_uint.1* %129 to i8*
  %1166 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1165, i8* %1166, i64 2, i32 1, i1 false)
  %1167 = getelementptr %class.ap_uint.1* %128, i32 0, i32 0
  %1168 = bitcast [2 x i8]* %1167 to i16*
  %1169 = load i16* %1168, align 1
  %1170 = getelementptr %class.ap_uint.1* %129, i32 0, i32 0
  %1171 = bitcast [2 x i8]* %1170 to i16*
  %1172 = load i16* %1171, align 1
  %1173 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %1169, i16 %1172)
  %1174 = getelementptr %class.ap_int* %130, i32 0, i32 0
  %1175 = bitcast [4 x i8]* %1174 to i32*
  store i32 %1173, i32* %1175, align 1
  %1176 = call i64 @_ZNK6ap_intILi26EEcvlEv(%class.ap_int* %130)
  %1177 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in2, i32 0, i64 %1176
  %1178 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %1162, %class.ap_uint.0* %1177)
  br label %1179

; <label>:1179                                    ; preds = %1160, %1141
  br label %1244

; <label>:1180                                    ; preds = %1109
  %1181 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %1182 = getelementptr inbounds [2 x %class.ap_uint.0]* %D0, i32 0, i64 %1181
  %1183 = bitcast %class.ap_uint.1* %131 to i8*
  %1184 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1183, i8* %1184, i64 2, i32 1, i1 false)
  %1185 = bitcast %class.ap_uint.1* %132 to i8*
  %1186 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1185, i8* %1186, i64 2, i32 1, i1 false)
  %1187 = getelementptr %class.ap_uint.1* %131, i32 0, i32 0
  %1188 = bitcast [2 x i8]* %1187 to i16*
  %1189 = load i16* %1188, align 1
  %1190 = getelementptr %class.ap_uint.1* %132, i32 0, i32 0
  %1191 = bitcast [2 x i8]* %1190 to i16*
  %1192 = load i16* %1191, align 1
  %1193 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %1189, i16 %1192)
  %1194 = getelementptr %class.ap_int* %133, i32 0, i32 0
  %1195 = bitcast [4 x i8]* %1194 to i32*
  store i32 %1193, i32* %1195, align 1
  %1196 = call i64 @_ZNK6ap_intILi26EEcvlEv(%class.ap_int* %133)
  %1197 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in2, i32 0, i64 %1196
  %1198 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %1182, %class.ap_uint.0* %1197)
  %1199 = bitcast %class.ap_uint.2* %134 to i8*
  %1200 = bitcast %class.ap_uint.2* %l1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1199, i8* %1200, i64 1, i32 1, i1 false)
  %1201 = getelementptr %class.ap_uint.2* %134, i32 0, i32 0
  %1202 = bitcast [1 x i8]* %1201 to i8*
  %1203 = load i8* %1202, align 1
  %1204 = call zeroext i1 @_ZeqILi2EEb7ap_uintIXT_EEi(i8 %1203, i32 0)
  br i1 %1204, label %1205, label %1224

; <label>:1205                                    ; preds = %1180
  %1206 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %1207 = getelementptr inbounds [2 x %class.ap_uint.0]* %D1, i32 0, i64 %1206
  %1208 = bitcast %class.ap_uint.1* %135 to i8*
  %1209 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1208, i8* %1209, i64 2, i32 1, i1 false)
  %1210 = bitcast %class.ap_uint.1* %136 to i8*
  %1211 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1210, i8* %1211, i64 2, i32 1, i1 false)
  %1212 = getelementptr %class.ap_uint.1* %135, i32 0, i32 0
  %1213 = bitcast [2 x i8]* %1212 to i16*
  %1214 = load i16* %1213, align 1
  %1215 = getelementptr %class.ap_uint.1* %136, i32 0, i32 0
  %1216 = bitcast [2 x i8]* %1215 to i16*
  %1217 = load i16* %1216, align 1
  %1218 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %1214, i16 %1217)
  %1219 = getelementptr %class.ap_int* %137, i32 0, i32 0
  %1220 = bitcast [4 x i8]* %1219 to i32*
  store i32 %1218, i32* %1220, align 1
  %1221 = call i64 @_ZNK6ap_intILi26EEcvlEv(%class.ap_int* %137)
  %1222 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in0, i32 0, i64 %1221
  %1223 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %1207, %class.ap_uint.0* %1222)
  br label %1243

; <label>:1224                                    ; preds = %1180
  %1225 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %1226 = getelementptr inbounds [2 x %class.ap_uint.0]* %D1, i32 0, i64 %1225
  %1227 = bitcast %class.ap_uint.1* %138 to i8*
  %1228 = bitcast %class.ap_uint.1* %bufferIndex to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1227, i8* %1228, i64 2, i32 1, i1 false)
  %1229 = bitcast %class.ap_uint.1* %139 to i8*
  %1230 = bitcast %class.ap_uint.1* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1229, i8* %1230, i64 2, i32 1, i1 false)
  %1231 = getelementptr %class.ap_uint.1* %138, i32 0, i32 0
  %1232 = bitcast [2 x i8]* %1231 to i16*
  %1233 = load i16* %1232, align 1
  %1234 = getelementptr %class.ap_uint.1* %139, i32 0, i32 0
  %1235 = bitcast [2 x i8]* %1234 to i16*
  %1236 = load i16* %1235, align 1
  %1237 = call i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16 %1233, i16 %1236)
  %1238 = getelementptr %class.ap_int* %140, i32 0, i32 0
  %1239 = bitcast [4 x i8]* %1238 to i32*
  store i32 %1237, i32* %1239, align 1
  %1240 = call i64 @_ZNK6ap_intILi26EEcvlEv(%class.ap_int* %140)
  %1241 = getelementptr inbounds [256 x %class.ap_uint.0]* %lbuf_in1, i32 0, i64 %1240
  %1242 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %1226, %class.ap_uint.0* %1241)
  br label %1243

; <label>:1243                                    ; preds = %1224, %1205
  br label %1244

; <label>:1244                                    ; preds = %1243, %1179
  br label %1245

; <label>:1245                                    ; preds = %1244, %1108
  br label %1253

; <label>:1246                                    ; preds = %1019
  %1247 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %1248 = getelementptr inbounds [2 x %class.ap_uint.0]* %D0, i32 0, i64 %1247
  %1249 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %1248, i32 0)
  %1250 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %k)
  %1251 = getelementptr inbounds [2 x %class.ap_uint.0]* %D1, i32 0, i64 %1250
  %1252 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %1251, i32 0)
  br label %1253

; <label>:1253                                    ; preds = %1246, %1245
  br label %1254

; <label>:1254                                    ; preds = %1253
  %1255 = call i16 @_ZN7ap_uintILi13EEppEi(%class.ap_uint.1* %k, i32 0)
  %1256 = getelementptr %class.ap_uint.1* %141, i32 0, i32 0
  %1257 = bitcast [2 x i8]* %1256 to i16*
  store i16 %1255, i16* %1257, align 1
  br label %1012

; <label>:1258                                    ; preds = %1012
  br label %1259

; <label>:1259                                    ; preds = %1258, %1009
  %1260 = getelementptr inbounds [1920 x %class.ap_uint.1]* %Hoffset, i32 0, i32 0
  %1261 = getelementptr inbounds [1920 x i32]* %Hweight, i32 0, i32 0
  %1262 = load i32* %Yweight, align 4
  %1263 = getelementptr inbounds [2 x %class.ap_uint.0]* %D0, i32 0, i32 0
  %1264 = getelementptr inbounds [2 x %class.ap_uint.0]* %D1, i32 0, i32 0
  %1265 = bitcast %class.ap_uint.1* %142 to i8*
  %1266 = bitcast %class.ap_uint.1* %block_start to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1265, i8* %1266, i64 2, i32 1, i1 false)
  %1267 = bitcast %class.ap_uint.1* %143 to i8*
  %1268 = bitcast %class.ap_uint.1* %i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1267, i8* %1268, i64 2, i32 1, i1 false)
  %1269 = getelementptr %class.ap_uint.1* %142, i32 0, i32 0
  %1270 = bitcast [2 x i8]* %1269 to i16*
  %1271 = load i16* %1270, align 1
  %1272 = getelementptr %class.ap_uint.1* %143, i32 0, i32 0
  %1273 = bitcast [2 x i8]* %1272 to i16*
  %1274 = load i16* %1273, align 1
  %1275 = call i8 @_ZL122p_Z18ProcessBlockAreaUpILi0ELi1ELi1ELi1EEP7ap_uintILi13EEPjjP7ap_uintILi8EEP7ap_uintILi8EE7ap_uintILi13EE7ap_uintILi13EE_1P7ap_uintILi13EEPjjPS_ILi8EES4_S0_S0_(%class.ap_uint.1* %1260, i32* %1261, i32 %1262, %class.ap_uint.0* %1263, %class.ap_uint.0* %1264, i16 %1271, i16 %1274)
  %1276 = getelementptr %class.ap_uint.0* %out_pix, i32 0, i32 0
  %1277 = bitcast [1 x i8]* %1276 to i8*
  store i8 %1275, i8* %1277, align 1
  %1278 = load %struct.xf_Mat_0_1080_1920_1_** %2, align 8
  %1279 = load i32* %write_index, align 4
  %1280 = add nsw i32 %1279, 1
  store i32 %1280, i32* %write_index, align 4
  %1281 = bitcast %class.ap_uint.0* %144 to i8*
  %1282 = bitcast %class.ap_uint.0* %out_pix to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1281, i8* %1282, i64 1, i32 1, i1 false)
  %1283 = getelementptr %class.ap_uint.0* %144, i32 0, i32 0
  %1284 = bitcast [1 x i8]* %1283 to i8*
  %1285 = load i8* %1284, align 1
  call void @_ZL53p_ZN2xf18Mat_0_1080_1920_1_5writeIEEi7ap_uintILi8EE_1P21xf_Mat_0_1080_1920_1_i7ap_uintILi8EE(%struct.xf_Mat_0_1080_1920_1_* %1278, i32 %1279, i8 %1285)
  br label %1286

; <label>:1286                                    ; preds = %1259
  %1287 = call i16 @_ZplILi13EE7ap_uintIXT_EERKS1_i(%class.ap_uint.1* %i, i32 1)
  %1288 = getelementptr %class.ap_uint.1* %145, i32 0, i32 0
  %1289 = bitcast [2 x i8]* %1288 to i16*
  store i16 %1287, i16* %1289, align 1
  %1290 = call %class.ap_uint.1* @_ZN7ap_uintILi13EEaSERKS0_(%class.ap_uint.1* %i, %class.ap_uint.1* %145)
  br label %649

; <label>:1291                                    ; preds = %649
  br label %1292

; <label>:1292                                    ; preds = %1291
  %1293 = call i16 @_ZN7ap_uintILi13EEppEi(%class.ap_uint.1* %j, i32 0)
  %1294 = getelementptr %class.ap_uint.1* %146, i32 0, i32 0
  %1295 = bitcast [2 x i8]* %1294 to i16*
  store i16 %1293, i16* %1295, align 1
  br label %482

; <label>:1296                                    ; preds = %482
  ret void
}

declare void @_ZN7ap_uintILi13EEC1Ev(%class.ap_uint.1*)

declare void @_ZN7ap_uintILi13EEC1Ei(%class.ap_uint.1*, i32)

define internal i64 @_ZL12xFUDivAreaUpmt(i64 %in_n, i16 zeroext %in_d) nounwind uwtable {
  %1 = alloca i64, align 8
  %2 = alloca i16, align 2
  %out_res = alloca i64, align 8
  store i64 %in_n, i64* %1, align 8
  store i16 %in_d, i16* %2, align 2
  %3 = load i64* %1, align 8
  %4 = load i16* %2, align 2
  %5 = zext i16 %4 to i64
  %6 = udiv i64 %3, %5
  store i64 %6, i64* %out_res, align 8
  %7 = load i64* %out_res, align 8
  ret i64 %7
}

declare %class.ap_uint.1* @_ZN7ap_uintILi13EEaSEi(%class.ap_uint.1*, i32)

declare zeroext i1 @_ZleILi13EEb7ap_uintIXT_EEi(i16, i32)

declare %class.ap_uint.1* @_ZN7ap_uintILi13EEaSEm(%class.ap_uint.1*, i64)

declare i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1*)

declare i16 @_ZmiILi13EE7ap_uintIXT_EEmRKS1_(i64, %class.ap_uint.1*)

declare i16 @_ZplILi13EE7ap_uintIXT_EERKS1_i(%class.ap_uint.1*, i32)

declare i16 @_ZmlILi13EE7ap_uintIXT_EERKS1_m(%class.ap_uint.1*, i64)

declare zeroext i1 @_ZneILi13ELi13EEb7ap_uintIXT_EES0_IXT0_EE(i16, i16)

declare i16 @_ZN7ap_uintILi13EEppEi(%class.ap_uint.1*, i32)

declare %class.ap_uint.1* @_ZN7ap_uintILi13EEaSERKS0_(%class.ap_uint.1*, %class.ap_uint.1*)

declare i16 @_ZN7ap_uintILi13EEppEv(%class.ap_uint.1*)

declare zeroext i1 @_ZltILi13EEb7ap_uintIXT_EEt(i16, i16 zeroext)

declare zeroext i1 @_ZltILi13EEb7ap_uintIXT_EEi(i16, i32)

declare void @_ZN7ap_uintILi2EEC1Ei(%class.ap_uint.2*, i32)

declare void @_ZN7ap_uintILi16EEC1Ei(%class.ap_uint.3*, i32)

define internal i8 @_ZL36p_ZN2xf16Mat_0_256_256_1_4readIEEi_1P19xf_Mat_0_256_256_1_i(%struct.xf_Mat_0_256_256_1_* %this_, i32 %index) nounwind uwtable {
  %1 = alloca %class.ap_uint.0, align 1
  %2 = alloca %struct.xf_Mat_0_256_256_1_*, align 8
  %3 = alloca i32, align 4
  store %struct.xf_Mat_0_256_256_1_* %this_, %struct.xf_Mat_0_256_256_1_** %2, align 8
  store i32 %index, i32* %3, align 4
  %4 = load i32* %3, align 4
  %5 = sext i32 %4 to i64
  %6 = load %struct.xf_Mat_0_256_256_1_** %2, align 8
  %7 = getelementptr inbounds %struct.xf_Mat_0_256_256_1_* %6, i32 0, i32 4
  %8 = getelementptr inbounds [65536 x %class.ap_uint.0]* %7, i32 0, i64 %5
  %9 = bitcast %class.ap_uint.0* %1 to i8*
  %10 = bitcast %class.ap_uint.0* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 1, i32 1, i1 false)
  %11 = getelementptr %class.ap_uint.0* %1, i32 0, i32 0
  %12 = bitcast [1 x i8]* %11 to i8*
  %13 = load i8* %12, align 1
  ret i8 %13
}

declare i16 @_ZN7ap_uintILi16EEppEi(%class.ap_uint.3*, i32)

declare zeroext i1 @_ZeqILi2EEb7ap_uintIXT_EEi(i8, i32)

declare %class.ap_uint.3* @_ZN7ap_uintILi16EEaSERKS0_(%class.ap_uint.3*, %class.ap_uint.3*)

declare zeroext i1 @_ZeqILi13ELi16EEb7ap_uintIXT_EES0_IXT0_EE(i16, i16)

declare %class.ap_uint.2* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.2*, i32)

declare i16 @_ZrsILi13EE7ap_uintIXT_EES1_i(i16, i32)

declare void @_ZN7ap_uintILi13EEC1Et(%class.ap_uint.1*, i16 zeroext)

declare zeroext i1 @_ZltILi16EEb7ap_uintIXT_EEt(i16, i16 zeroext)

declare zeroext i1 @_ZltILi26EEb6ap_intIXT_EEt(i32, i16 zeroext)

declare i32 @_ZplILi13ELi13EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i16, i16)

declare i64 @_ZNK6ap_intILi26EEcvlEv(%class.ap_int*)

declare %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0*, i32)

define internal i8 @_ZL122p_Z18ProcessBlockAreaUpILi0ELi1ELi1ELi1EEP7ap_uintILi13EEPjjP7ap_uintILi8EEP7ap_uintILi8EE7ap_uintILi13EE7ap_uintILi13EE_1P7ap_uintILi13EEPjjPS_ILi8EES4_S0_S0_(%class.ap_uint.1* %Offset, i32* %Weight, i32 %Yweight, %class.ap_uint.0* %D0, %class.ap_uint.0* %D1, i16 %blockstart.coerce, i16 %indoffset.coerce) uwtable {
  %1 = alloca %class.ap_uint.0, align 1
  %2 = alloca %class.ap_uint.1*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %class.ap_uint.0*, align 8
  %6 = alloca %class.ap_uint.0*, align 8
  %blockstart = alloca %class.ap_uint.1, align 2
  %indoffset = alloca %class.ap_uint.1, align 2
  %line0 = alloca [4 x %class.ap_uint.0], align 1
  %line1 = alloca [4 x %class.ap_uint.0], align 1
  %i = alloca i8, align 1
  %input_read = alloca i8, align 1
  %Pixels = alloca i8, align 1
  %block_start_ind = alloca i16, align 2
  %7 = alloca %class.ap_uint.1, align 1
  %8 = alloca %class.ap_uint.1, align 1
  %9 = alloca %class.ap_uint.1, align 1
  %_s_i_0 = alloca i32, align 4
  %shift = alloca i32, align 4
  %_s_i = alloca i32, align 4
  %_l_c = alloca %class.ap_uint.4, align 1
  %_l_k = alloca %class.ap_uint.4, align 1
  %10 = alloca %class.ap_uint.4, align 1
  %11 = alloca %class.ap_uint.1, align 1
  %12 = alloca %class.ap_uint.4, align 1
  store %class.ap_uint.1* %Offset, %class.ap_uint.1** %2, align 8
  store i32* %Weight, i32** %3, align 8
  store i32 %Yweight, i32* %4, align 4
  store %class.ap_uint.0* %D0, %class.ap_uint.0** %5, align 8
  store %class.ap_uint.0* %D1, %class.ap_uint.0** %6, align 8
  %13 = getelementptr %class.ap_uint.1* %blockstart, i32 0, i32 0
  %14 = bitcast [2 x i8]* %13 to i16*
  store i16 %blockstart.coerce, i16* %14, align 1
  %15 = getelementptr %class.ap_uint.1* %indoffset, i32 0, i32 0
  %16 = bitcast [2 x i8]* %15 to i16*
  store i16 %indoffset.coerce, i16* %16, align 1
  %17 = getelementptr inbounds [4 x %class.ap_uint.0]* %line0, i32 0, i32 0
  %18 = getelementptr inbounds %class.ap_uint.0* %17, i64 4
  br label %19

; <label>:19                                      ; preds = %19, %0
  %20 = phi %class.ap_uint.0* [ %17, %0 ], [ %21, %19 ]
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %20)
  %21 = getelementptr inbounds %class.ap_uint.0* %20, i64 1
  %22 = icmp eq %class.ap_uint.0* %21, %18
  br i1 %22, label %23, label %19

; <label>:23                                      ; preds = %19
  %24 = getelementptr inbounds [4 x %class.ap_uint.0]* %line1, i32 0, i32 0
  %25 = getelementptr inbounds %class.ap_uint.0* %24, i64 4
  br label %26

; <label>:26                                      ; preds = %26, %23
  %27 = phi %class.ap_uint.0* [ %24, %23 ], [ %28, %26 ]
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %27)
  %28 = getelementptr inbounds %class.ap_uint.0* %27, i64 1
  %29 = icmp eq %class.ap_uint.0* %28, %25
  br i1 %29, label %30, label %26

; <label>:30                                      ; preds = %26
  %31 = bitcast %class.ap_uint.1* %8 to i8*
  %32 = bitcast %class.ap_uint.1* %blockstart to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 2, i32 1, i1 false)
  %33 = getelementptr %class.ap_uint.1* %8, i32 0, i32 0
  %34 = bitcast [2 x i8]* %33 to i16*
  %35 = load i16* %34, align 1
  %36 = call i16 @_ZrsILi13EE7ap_uintIXT_EES1_i(i16 %35, i32 0)
  %37 = getelementptr %class.ap_uint.1* %7, i32 0, i32 0
  %38 = bitcast [2 x i8]* %37 to i16*
  store i16 %36, i16* %38, align 1
  %39 = getelementptr %class.ap_uint.1* %7, i32 0, i32 0
  %40 = bitcast [2 x i8]* %39 to i16*
  %41 = load i16* %40, align 1
  %42 = call i16 @_ZlsILi13EE7ap_uintIXT_EES1_i(i16 %41, i32 0)
  %43 = getelementptr %class.ap_uint.1* %9, i32 0, i32 0
  %44 = bitcast [2 x i8]* %43 to i16*
  store i16 %42, i16* %44, align 1
  %45 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %9)
  %46 = trunc i64 %45 to i16
  store i16 %46, i16* %block_start_ind, align 2
  store i32 0, i32* %_s_i_0, align 4
  br label %47

; <label>:47                                      ; preds = %65, %30
  %48 = load i32* %_s_i_0, align 4
  %49 = icmp sle i32 %48, 1
  br i1 %49, label %50, label %68

; <label>:50                                      ; preds = %47
  %51 = getelementptr inbounds [4 x %class.ap_uint.0]* %line0, i32 0, i32 0
  %52 = load i32* %_s_i_0, align 4
  %53 = sext i32 %52 to i64
  %54 = load %class.ap_uint.0** %5, align 8
  %55 = getelementptr inbounds %class.ap_uint.0* %54, i64 %53
  %56 = load i32* %_s_i_0, align 4
  %57 = shl i32 %56, 0
  call void @_ZL67p_Z15xfExtractPixelsILi1ELi1ELi0EEP7ap_uintILi8EER7ap_uintILi8EEi_1P7ap_uintILi8EERS0_i(%class.ap_uint.0* %51, %class.ap_uint.0* %55, i32 %57)
  %58 = getelementptr inbounds [4 x %class.ap_uint.0]* %line1, i32 0, i32 0
  %59 = load i32* %_s_i_0, align 4
  %60 = sext i32 %59 to i64
  %61 = load %class.ap_uint.0** %6, align 8
  %62 = getelementptr inbounds %class.ap_uint.0* %61, i64 %60
  %63 = load i32* %_s_i_0, align 4
  %64 = shl i32 %63, 0
  call void @_ZL67p_Z15xfExtractPixelsILi1ELi1ELi0EEP7ap_uintILi8EER7ap_uintILi8EEi_1P7ap_uintILi8EERS0_i(%class.ap_uint.0* %58, %class.ap_uint.0* %62, i32 %64)
  br label %65

; <label>:65                                      ; preds = %50
  %66 = load i32* %_s_i_0, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %_s_i_0, align 4
  br label %47

; <label>:68                                      ; preds = %47
  %69 = load i32* %_s_i_0, align 4
  %70 = trunc i32 %69 to i8
  store i8 %70, i8* %i, align 1
  call void @_ZN7ap_uintILi8EEC1Ei(%class.ap_uint.0* %1, i32 0)
  store i32 0, i32* %shift, align 4
  br label %71

; <label>:71                                      ; preds = %68
  store i32 0, i32* %_s_i, align 4
  br label %72

; <label>:72                                      ; preds = %132, %71
  %73 = load i32* %_s_i, align 4
  %74 = icmp sle i32 %73, 0
  br i1 %74, label %75, label %135

; <label>:75                                      ; preds = %72
  store i8 0, i8* %input_read, align 1
  call void @_ZN7ap_uintILi5EEC1Ei(%class.ap_uint.4* %_l_c, i32 0)
  call void @_ZN7ap_uintILi5EEC1Ei(%class.ap_uint.4* %_l_k, i32 0)
  %76 = call %class.ap_uint.4* @_ZN7ap_uintILi5EEaSEi(%class.ap_uint.4* %_l_c, i32 0)
  br label %77

; <label>:77                                      ; preds = %127, %75
  %78 = bitcast %class.ap_uint.4* %10 to i8*
  %79 = bitcast %class.ap_uint.4* %_l_c to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 1, i32 1, i1 false)
  %80 = getelementptr %class.ap_uint.4* %10, i32 0, i32 0
  %81 = bitcast [1 x i8]* %80 to i8*
  %82 = load i8* %81, align 1
  %83 = call zeroext i1 @_ZleILi5EEb7ap_uintIXT_EEi(i8 %82, i32 2)
  br i1 %83, label %84, label %131

; <label>:84                                      ; preds = %77
  %85 = load i8* %input_read, align 1
  %86 = zext i8 %85 to i64
  %87 = getelementptr inbounds [4 x %class.ap_uint.0]* %line0, i32 0, i64 %86
  %88 = call i64 @_ZNK7ap_uintILi8EEcvmEv(%class.ap_uint.0* %87)
  %89 = trunc i64 %88 to i8
  %90 = load i8* %input_read, align 1
  %91 = zext i8 %90 to i32
  %92 = add nsw i32 %91, 1
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [4 x %class.ap_uint.0]* %line0, i32 0, i64 %93
  %95 = call i64 @_ZNK7ap_uintILi8EEcvmEv(%class.ap_uint.0* %94)
  %96 = trunc i64 %95 to i8
  %97 = load i8* %input_read, align 1
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds [4 x %class.ap_uint.0]* %line1, i32 0, i64 %98
  %100 = call i64 @_ZNK7ap_uintILi8EEcvmEv(%class.ap_uint.0* %99)
  %101 = trunc i64 %100 to i8
  %102 = load i8* %input_read, align 1
  %103 = zext i8 %102 to i32
  %104 = add nsw i32 %103, 1
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds [4 x %class.ap_uint.0]* %line1, i32 0, i64 %105
  %107 = call i64 @_ZNK7ap_uintILi8EEcvmEv(%class.ap_uint.0* %106)
  %108 = trunc i64 %107 to i8
  %109 = load i32* %_s_i, align 4
  %110 = call i16 @_ZplILi13EE7ap_uintIXT_EERKS1_i(%class.ap_uint.1* %indoffset, i32 %109)
  %111 = getelementptr %class.ap_uint.1* %11, i32 0, i32 0
  %112 = bitcast [2 x i8]* %111 to i16*
  store i16 %110, i16* %112, align 1
  %113 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.1* %11)
  %114 = load i32** %3, align 8
  %115 = getelementptr inbounds i32* %114, i64 %113
  %116 = load i32* %115, align 4
  %117 = load i32* %4, align 4
  call void @_ZL17CoreProcessUpAreahhhhjjPh(i8 zeroext %89, i8 zeroext %96, i8 zeroext %101, i8 zeroext %108, i32 %116, i32 %117, i8* %Pixels)
  %118 = load i32* %_s_i, align 4
  %119 = shl i32 %118, 0
  store i32 %119, i32* %shift, align 4
  %120 = load i8* %Pixels, align 1
  %121 = zext i8 %120 to i64
  %122 = load i32* %shift, align 4
  %123 = add nsw i32 %122, 7
  %124 = load i32* %shift, align 4
  %125 = call i64* @_ZN7ap_uintILi8EE5rangeEii(%class.ap_uint.0* %1, i32 %123, i32 %124)
  store i64 %121, i64* %125
  %126 = call %class.ap_uint.4* @_ZpLILi5EER7ap_uintIXT_EES2_i(%class.ap_uint.4* %_l_k, i32 8)
  br label %127

; <label>:127                                     ; preds = %84
  %128 = call i8 @_ZN7ap_uintILi5EEppEv(%class.ap_uint.4* %_l_c)
  %129 = getelementptr %class.ap_uint.4* %12, i32 0, i32 0
  %130 = bitcast [1 x i8]* %129 to i8*
  store i8 %128, i8* %130, align 1
  br label %77

; <label>:131                                     ; preds = %77
  br label %132

; <label>:132                                     ; preds = %131
  %133 = load i32* %_s_i, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %_s_i, align 4
  br label %72

; <label>:135                                     ; preds = %72
  %136 = load i32* %_s_i, align 4
  %137 = trunc i32 %136 to i8
  store i8 %137, i8* %i, align 1
  %138 = getelementptr %class.ap_uint.0* %1, i32 0, i32 0
  %139 = bitcast [1 x i8]* %138 to i8*
  %140 = load i8* %139, align 1
  ret i8 %140
}

define internal void @_ZL53p_ZN2xf18Mat_0_1080_1920_1_5writeIEEi7ap_uintILi8EE_1P21xf_Mat_0_1080_1920_1_i7ap_uintILi8EE(%struct.xf_Mat_0_1080_1920_1_* %this_, i32 %index, i8 %val.coerce) uwtable {
  %1 = alloca %struct.xf_Mat_0_1080_1920_1_*, align 8
  %2 = alloca i32, align 4
  %val = alloca %class.ap_uint.0, align 1
  store %struct.xf_Mat_0_1080_1920_1_* %this_, %struct.xf_Mat_0_1080_1920_1_** %1, align 8
  store i32 %index, i32* %2, align 4
  %3 = getelementptr %class.ap_uint.0* %val, i32 0, i32 0
  %4 = bitcast [1 x i8]* %3 to i8*
  store i8 %val.coerce, i8* %4, align 1
  %5 = load i32* %2, align 4
  %6 = sext i32 %5 to i64
  %7 = load %struct.xf_Mat_0_1080_1920_1_** %1, align 8
  %8 = getelementptr inbounds %struct.xf_Mat_0_1080_1920_1_* %7, i32 0, i32 4
  %9 = getelementptr inbounds [2073600 x %class.ap_uint.0]* %8, i32 0, i64 %6
  %10 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %9, %class.ap_uint.0* %val)
  ret void
}

declare i16 @_ZlsILi13EE7ap_uintIXT_EES1_i(i16, i32)

define internal void @_ZL67p_Z15xfExtractPixelsILi1ELi1ELi0EEP7ap_uintILi8EER7ap_uintILi8EEi_1P7ap_uintILi8EERS0_i(%class.ap_uint.0* %tmp_buf, %class.ap_uint.0* %val1, i32 %pos) uwtable {
  %1 = alloca %class.ap_uint.0*, align 8
  %2 = alloca %class.ap_uint.0*, align 8
  %3 = alloca i32, align 4
  %v = alloca %class.ap_uint.0, align 1
  %shift = alloca i32, align 4
  %STEP = alloca i32, align 4
  %i = alloca i32, align 4
  store %class.ap_uint.0* %tmp_buf, %class.ap_uint.0** %1, align 8
  store %class.ap_uint.0* %val1, %class.ap_uint.0** %2, align 8
  store i32 %pos, i32* %3, align 4
  %4 = load %class.ap_uint.0** %2, align 8
  %5 = bitcast %class.ap_uint.0* %v to i8*
  %6 = bitcast %class.ap_uint.0* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 1, i32 1, i1 false)
  store i32 0, i32* %shift, align 4
  store i32 8, i32* %STEP, align 4
  br label %7

; <label>:7                                       ; preds = %0
  store i32 0, i32* %i, align 4
  br label %8

; <label>:8                                       ; preds = %29, %7
  %9 = load i32* %i, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %32

; <label>:11                                      ; preds = %8
  %12 = load i32* %3, align 4
  %13 = load i32* %i, align 4
  %14 = add nsw i32 %12, %13
  %15 = sext i32 %14 to i64
  %16 = load %class.ap_uint.0** %1, align 8
  %17 = getelementptr inbounds %class.ap_uint.0* %16, i64 %15
  %18 = load i32* %shift, align 4
  %19 = load i32* %STEP, align 4
  %20 = add nsw i32 %18, %19
  %21 = sub nsw i32 %20, 1
  %22 = load i32* %shift, align 4
  %23 = call i64* @_ZN7ap_uintILi8EE5rangeEii(%class.ap_uint.0* %v, i32 %21, i32 %22)
  %24 = load i64* %23
  %25 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEm(%class.ap_uint.0* %17, i64 %24)
  %26 = load i32* %shift, align 4
  %27 = load i32* %STEP, align 4
  %28 = add nsw i32 %26, %27
  store i32 %28, i32* %shift, align 4
  br label %29

; <label>:29                                      ; preds = %11
  %30 = load i32* %i, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %i, align 4
  br label %8

; <label>:32                                      ; preds = %8
  ret void
}

declare void @_ZN7ap_uintILi8EEC1Ei(%class.ap_uint.0*, i32)

declare void @_ZN7ap_uintILi5EEC1Ei(%class.ap_uint.4*, i32)

declare %class.ap_uint.4* @_ZN7ap_uintILi5EEaSEi(%class.ap_uint.4*, i32)

declare zeroext i1 @_ZleILi5EEb7ap_uintIXT_EEi(i8, i32)

define internal void @_ZL17CoreProcessUpAreahhhhjjPh(i8 zeroext %A0, i8 zeroext %B0, i8 zeroext %A1, i8 zeroext %B1, i32 %Wx, i32 %Wy, i8* %pixel) nounwind uwtable {
  %1 = alloca i8, align 1
  %2 = alloca i8, align 1
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %Wxy = alloca i32, align 4
  %val0 = alloca i16, align 2
  %val1 = alloca i16, align 2
  %val2 = alloca i16, align 2
  %P1 = alloca i64, align 8
  %P2 = alloca i64, align 8
  %P3 = alloca i64, align 8
  %P4 = alloca i64, align 8
  store i8 %A0, i8* %1, align 1
  store i8 %B0, i8* %2, align 1
  store i8 %A1, i8* %3, align 1
  store i8 %B1, i8* %4, align 1
  store i32 %Wx, i32* %5, align 4
  store i32 %Wy, i32* %6, align 4
  store i8* %pixel, i8** %7, align 8
  %8 = load i32* %5, align 4
  %9 = zext i32 %8 to i64
  %10 = load i32* %6, align 4
  %11 = zext i32 %10 to i64
  %12 = mul i64 %9, %11
  %13 = lshr i64 %12, 32
  %14 = trunc i64 %13 to i32
  store i32 %14, i32* %Wxy, align 4
  %15 = load i8* %1, align 1
  %16 = zext i8 %15 to i32
  %17 = load i8* %4, align 1
  %18 = zext i8 %17 to i32
  %19 = add nsw i32 %16, %18
  %20 = load i8* %2, align 1
  %21 = zext i8 %20 to i32
  %22 = load i8* %3, align 1
  %23 = zext i8 %22 to i32
  %24 = add nsw i32 %21, %23
  %25 = sub nsw i32 %19, %24
  %26 = trunc i32 %25 to i16
  store i16 %26, i16* %val0, align 2
  %27 = load i8* %2, align 1
  %28 = zext i8 %27 to i32
  %29 = load i8* %1, align 1
  %30 = zext i8 %29 to i32
  %31 = sub nsw i32 %28, %30
  %32 = trunc i32 %31 to i16
  store i16 %32, i16* %val1, align 2
  %33 = load i8* %3, align 1
  %34 = zext i8 %33 to i32
  %35 = load i8* %1, align 1
  %36 = zext i8 %35 to i32
  %37 = sub nsw i32 %34, %36
  %38 = trunc i32 %37 to i16
  store i16 %38, i16* %val2, align 2
  %39 = load i16* %val0, align 2
  %40 = sext i16 %39 to i64
  %41 = load i32* %Wxy, align 4
  %42 = zext i32 %41 to i64
  %43 = mul nsw i64 %40, %42
  store i64 %43, i64* %P1, align 8
  %44 = load i16* %val1, align 2
  %45 = sext i16 %44 to i64
  %46 = load i32* %5, align 4
  %47 = zext i32 %46 to i64
  %48 = mul nsw i64 %45, %47
  store i64 %48, i64* %P2, align 8
  %49 = load i16* %val2, align 2
  %50 = sext i16 %49 to i64
  %51 = load i32* %6, align 4
  %52 = zext i32 %51 to i64
  %53 = mul nsw i64 %50, %52
  store i64 %53, i64* %P3, align 8
  %54 = load i8* %1, align 1
  %55 = zext i8 %54 to i64
  %56 = shl i64 %55, 32
  store i64 %56, i64* %P4, align 8
  %57 = load i64* %P1, align 8
  %58 = load i64* %P2, align 8
  %59 = add nsw i64 %57, %58
  %60 = load i64* %P3, align 8
  %61 = add nsw i64 %59, %60
  %62 = load i64* %P4, align 8
  %63 = add nsw i64 %61, %62
  %64 = ashr i64 %63, 32
  %65 = trunc i64 %64 to i8
  %66 = load i8** %7, align 8
  store i8 %65, i8* %66, align 1
  ret void
}

declare %class.ap_uint.4* @_ZpLILi5EER7ap_uintIXT_EES2_i(%class.ap_uint.4*, i32)

declare i8 @_ZN7ap_uintILi5EEppEv(%class.ap_uint.4*)

declare %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEm(%class.ap_uint.0*, i64)

define internal void @_ZL108p_ZN2xf11accel_utils11Array2xfMatILi256ELi0ELi256ELi256ELi1EEEP7ap_uintILi256EER3MatILi0ELi256ELi256ELi1EE_1P14xf_accel_utilsP7ap_uintILi256EER19xf_Mat_0_256_256_1_(%struct.xf_accel_utils* %this_, %class.ap_uint* %srcPtr, %struct.xf_Mat_0_256_256_1_* %dstMat) uwtable {
  %1 = alloca %struct.xf_accel_utils*, align 8
  %2 = alloca %class.ap_uint*, align 8
  %3 = alloca %struct.xf_Mat_0_256_256_1_*, align 8
  %ch_width = alloca i32, align 4
  %strm = alloca %"class.hls::stream", align 1
  %rows = alloca i32, align 4
  %cols = alloca i32, align 4
  store %struct.xf_accel_utils* %this_, %struct.xf_accel_utils** %1, align 8
  store %class.ap_uint* %srcPtr, %class.ap_uint** %2, align 8
  store %struct.xf_Mat_0_256_256_1_* %dstMat, %struct.xf_Mat_0_256_256_1_** %3, align 8
  store i32 8, i32* %ch_width, align 4
  call void @_ZN3hls6streamI7ap_uintILi256EEEC1Ev(%"class.hls::stream"* %strm)
  %4 = load %struct.xf_Mat_0_256_256_1_** %3, align 8
  %5 = getelementptr inbounds %struct.xf_Mat_0_256_256_1_* %4, i32 0, i32 1
  %6 = load i32* %5, align 4
  store i32 %6, i32* %rows, align 4
  %7 = load %struct.xf_Mat_0_256_256_1_** %3, align 8
  %8 = getelementptr inbounds %struct.xf_Mat_0_256_256_1_* %7, i32 0, i32 2
  %9 = load i32* %8, align 4
  store i32 %9, i32* %cols, align 4
  %10 = load %struct.xf_accel_utils** %1, align 8
  %11 = load %class.ap_uint** %2, align 8
  %12 = load i32* %rows, align 4
  %13 = load i32* %cols, align 4
  call void @_ZL122p_ZN2xf11accel_utils13Array2hlsStrmILi256ELi256ELi256ELi1ELi1ELi8ELi2048EEEP7ap_uintILi256EER6streamI7ap_uintILi256EEEii_1P14xf_accel_utilsP7ap_uintILi256EERN3hls6streamIS2_EEii(%struct.xf_accel_utils* %10, %class.ap_uint* %11, %"class.hls::stream"* %strm, i32 %12, i32 %13)
  %14 = load %struct.xf_accel_utils** %1, align 8
  %15 = load %struct.xf_Mat_0_256_256_1_** %3, align 8
  call void @_ZL127p_ZN2xf11accel_utils13hlsStrm2xfMatILi256ELi0ELi256ELi256ELi1ELi65536EEER6streamI7ap_uintILi256EEER3MatILi0ELi256ELi256ELi1EE_1P14xf_accel_utilsRN3hls6streamI7ap_uintILi256EEEER19xf_Mat_0_256_256_1_(%struct.xf_accel_utils* %14, %"class.hls::stream"* %strm, %struct.xf_Mat_0_256_256_1_* %15)
  ret void
}

define internal void @_ZL122p_ZN2xf11accel_utils13Array2hlsStrmILi256ELi256ELi256ELi1ELi1ELi8ELi2048EEEP7ap_uintILi256EER6streamI7ap_uintILi256EEEii_1P14xf_accel_utilsP7ap_uintILi256EERN3hls6streamIS2_EEii(%struct.xf_accel_utils* %this_, %class.ap_uint* %srcPtr, %"class.hls::stream"* %dstStrm, i32 %rows, i32 %cols) uwtable {
  %1 = alloca %struct.xf_accel_utils*, align 8
  %2 = alloca %class.ap_uint*, align 8
  %3 = alloca %"class.hls::stream"*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %pixel_width = alloca i32, align 4
  %loop_count = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.xf_accel_utils* %this_, %struct.xf_accel_utils** %1, align 8
  store %class.ap_uint* %srcPtr, %class.ap_uint** %2, align 8
  store %"class.hls::stream"* %dstStrm, %"class.hls::stream"** %3, align 8
  store i32 %rows, i32* %4, align 4
  store i32 %cols, i32* %5, align 4
  store i32 8, i32* %pixel_width, align 4
  %6 = load i32* %4, align 4
  %7 = load i32* %5, align 4
  %8 = mul nsw i32 %6, %7
  %9 = load i32* %pixel_width, align 4
  %10 = mul nsw i32 %8, %9
  %11 = add nsw i32 %10, 256
  %12 = sub nsw i32 %11, 1
  %13 = sdiv i32 %12, 256
  store i32 %13, i32* %loop_count, align 4
  store i32 0, i32* %i, align 4
  br label %14

; <label>:14                                      ; preds = %24, %0
  %15 = load i32* %i, align 4
  %16 = load i32* %loop_count, align 4
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %27

; <label>:18                                      ; preds = %14
  %19 = load %"class.hls::stream"** %3, align 8
  %20 = load i32* %i, align 4
  %21 = sext i32 %20 to i64
  %22 = load %class.ap_uint** %2, align 8
  %23 = getelementptr inbounds %class.ap_uint* %22, i64 %21
  call void @_ZN3hls6streamI7ap_uintILi256EEE5writeERKS2_(%"class.hls::stream"* %19, %class.ap_uint* %23)
  br label %24

; <label>:24                                      ; preds = %18
  %25 = load i32* %i, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %i, align 4
  br label %14

; <label>:27                                      ; preds = %14
  ret void
}

define internal void @_ZL127p_ZN2xf11accel_utils13hlsStrm2xfMatILi256ELi0ELi256ELi256ELi1ELi65536EEER6streamI7ap_uintILi256EEER3MatILi0ELi256ELi256ELi1EE_1P14xf_accel_utilsRN3hls6streamI7ap_uintILi256EEEER19xf_Mat_0_256_256_1_(%struct.xf_accel_utils* %this_, %"class.hls::stream"* %srcStrm, %struct.xf_Mat_0_256_256_1_* %dstMat) uwtable {
  %1 = alloca %struct.xf_accel_utils*, align 8
  %2 = alloca %"class.hls::stream"*, align 8
  %3 = alloca %struct.xf_Mat_0_256_256_1_*, align 8
  %rows = alloca i32, align 4
  %cols = alloca i32, align 4
  %loop_count = alloca i32, align 4
  %valid_bits = alloca i32, align 4
  %N_size = alloca i32, align 4
  %r = alloca %class.ap_uint, align 1
  %out = alloca %class.ap_uint.0, align 1
  %i = alloca i32, align 4
  %4 = alloca %class.ap_uint, align 1
  %5 = alloca %class.ap_uint.0, align 1
  store %struct.xf_accel_utils* %this_, %struct.xf_accel_utils** %1, align 8
  store %"class.hls::stream"* %srcStrm, %"class.hls::stream"** %2, align 8
  store %struct.xf_Mat_0_256_256_1_* %dstMat, %struct.xf_Mat_0_256_256_1_** %3, align 8
  %6 = load %struct.xf_Mat_0_256_256_1_** %3, align 8
  %7 = getelementptr inbounds %struct.xf_Mat_0_256_256_1_* %6, i32 0, i32 1
  %8 = load i32* %7, align 4
  store i32 %8, i32* %rows, align 4
  %9 = load %struct.xf_Mat_0_256_256_1_** %3, align 8
  %10 = getelementptr inbounds %struct.xf_Mat_0_256_256_1_* %9, i32 0, i32 2
  %11 = load i32* %10, align 4
  store i32 %11, i32* %cols, align 4
  %12 = load i32* %rows, align 4
  %13 = load i32* %cols, align 4
  %14 = mul nsw i32 %12, %13
  %15 = sdiv i32 %14, 1
  store i32 %15, i32* %loop_count, align 4
  store i32 0, i32* %valid_bits, align 4
  store i32 8, i32* %N_size, align 4
  call void @_ZN7ap_uintILi256EEC1Ev(%class.ap_uint* %r)
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %out)
  br label %16

; <label>:16                                      ; preds = %0
  store i32 0, i32* %i, align 4
  br label %17

; <label>:17                                      ; preds = %68, %16
  %18 = load i32* %i, align 4
  %19 = load i32* %loop_count, align 4
  %20 = icmp slt i32 %18, %19
  br i1 %20, label %21, label %71

; <label>:21                                      ; preds = %17
  %22 = load i32* %valid_bits, align 4
  %23 = icmp slt i32 %22, 8
  br i1 %23, label %24, label %48

; <label>:24                                      ; preds = %21
  %25 = load i32* %valid_bits, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %35

; <label>:27                                      ; preds = %24
  %28 = load i32* %valid_bits, align 4
  %29 = sub nsw i32 256, %28
  %30 = call i64* @_ZN7ap_uintILi256EE5rangeEii(%class.ap_uint* %r, i32 255, i32 %29)
  %31 = load i64* %30
  %32 = load i32* %valid_bits, align 4
  %33 = sub nsw i32 %32, 1
  %34 = call i64* @_ZN7ap_uintILi8EE5rangeEii(%class.ap_uint.0* %out, i32 %33, i32 0)
  store i64 %31, i64* %34
  br label %35

; <label>:35                                      ; preds = %27, %24
  %36 = load %"class.hls::stream"** %2, align 8
  call void @_ZN3hls6streamI7ap_uintILi256EEE4readEv(%class.ap_uint* sret %4, %"class.hls::stream"* %36)
  %37 = call %class.ap_uint* @_ZN7ap_uintILi256EEaSERKS0_(%class.ap_uint* %r, %class.ap_uint* %4)
  %38 = load i32* %valid_bits, align 4
  %39 = sub nsw i32 8, %38
  %40 = sub nsw i32 %39, 1
  %41 = call i64* @_ZN7ap_uintILi256EE5rangeEii(%class.ap_uint* %r, i32 %40, i32 0)
  %42 = load i64* %41
  %43 = load i32* %valid_bits, align 4
  %44 = call i64* @_ZN7ap_uintILi8EE5rangeEii(%class.ap_uint.0* %out, i32 7, i32 %43)
  store i64 %42, i64* %44
  %45 = load i32* %valid_bits, align 4
  %46 = sub nsw i32 8, %45
  %47 = sub nsw i32 256, %46
  store i32 %47, i32* %valid_bits, align 4
  br label %60

; <label>:48                                      ; preds = %21
  %49 = load i32* %valid_bits, align 4
  %50 = sub nsw i32 256, %49
  %51 = add nsw i32 %50, 8
  %52 = sub nsw i32 %51, 1
  %53 = load i32* %valid_bits, align 4
  %54 = sub nsw i32 256, %53
  %55 = call i64* @_ZN7ap_uintILi256EE5rangeEii(%class.ap_uint* %r, i32 %52, i32 %54)
  %56 = load i64* %55
  %57 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEm(%class.ap_uint.0* %out, i64 %56)
  %58 = load i32* %valid_bits, align 4
  %59 = sub nsw i32 %58, 8
  store i32 %59, i32* %valid_bits, align 4
  br label %60

; <label>:60                                      ; preds = %48, %35
  %61 = load %struct.xf_Mat_0_256_256_1_** %3, align 8
  %62 = load i32* %i, align 4
  %63 = bitcast %class.ap_uint.0* %5 to i8*
  %64 = bitcast %class.ap_uint.0* %out to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 1, i32 1, i1 false)
  %65 = getelementptr %class.ap_uint.0* %5, i32 0, i32 0
  %66 = bitcast [1 x i8]* %65 to i8*
  %67 = load i8* %66, align 1
  call void @_ZL51p_ZN2xf16Mat_0_256_256_1_5writeIEEi7ap_uintILi8EE_1P19xf_Mat_0_256_256_1_i7ap_uintILi8EE(%struct.xf_Mat_0_256_256_1_* %61, i32 %62, i8 %67)
  br label %68

; <label>:68                                      ; preds = %60
  %69 = load i32* %i, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %i, align 4
  br label %17

; <label>:71                                      ; preds = %17
  ret void
}

define internal void @_ZL51p_ZN2xf16Mat_0_256_256_1_5writeIEEi7ap_uintILi8EE_1P19xf_Mat_0_256_256_1_i7ap_uintILi8EE(%struct.xf_Mat_0_256_256_1_* %this_, i32 %index, i8 %val.coerce) uwtable {
  %1 = alloca %struct.xf_Mat_0_256_256_1_*, align 8
  %2 = alloca i32, align 4
  %val = alloca %class.ap_uint.0, align 1
  store %struct.xf_Mat_0_256_256_1_* %this_, %struct.xf_Mat_0_256_256_1_** %1, align 8
  store i32 %index, i32* %2, align 4
  %3 = getelementptr %class.ap_uint.0* %val, i32 0, i32 0
  %4 = bitcast [1 x i8]* %3 to i8*
  store i8 %val.coerce, i8* %4, align 1
  %5 = load i32* %2, align 4
  %6 = sext i32 %5 to i64
  %7 = load %struct.xf_Mat_0_256_256_1_** %1, align 8
  %8 = getelementptr inbounds %struct.xf_Mat_0_256_256_1_* %7, i32 0, i32 4
  %9 = getelementptr inbounds [65536 x %class.ap_uint.0]* %8, i32 0, i64 %6
  %10 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %9, %class.ap_uint.0* %val)
  ret void
}

define internal void @_ZL40p_ZN2xf18Mat_0_1080_1920_1_4initIEEiib_1P21xf_Mat_0_1080_1920_1_iib(%struct.xf_Mat_0_1080_1920_1_* %this_, i32 %_rows, i32 %_cols, i1 zeroext %allocate) nounwind uwtable {
  %1 = alloca %struct.xf_Mat_0_1080_1920_1_*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store %struct.xf_Mat_0_1080_1920_1_* %this_, %struct.xf_Mat_0_1080_1920_1_** %1, align 8
  store i32 %_rows, i32* %2, align 4
  store i32 %_cols, i32* %3, align 4
  %5 = zext i1 %allocate to i8
  store i8 %5, i8* %4, align 1
  %6 = load i32* %2, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %18

; <label>:8                                       ; preds = %0
  %9 = load i32* %2, align 4
  %10 = icmp sle i32 %9, 1080
  br i1 %10, label %11, label %18

; <label>:11                                      ; preds = %8
  %12 = load i32* %3, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %18

; <label>:14                                      ; preds = %11
  %15 = load i32* %3, align 4
  %16 = icmp sle i32 %15, 1920
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %14
  br label %20

; <label>:18                                      ; preds = %14, %11, %8, %0
  call void @__assert_fail(i8* getelementptr inbounds ([143 x i8]* @.str3, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str4, i32 0, i32 0), i32 517, i8* getelementptr inbounds ([94 x i8]* @__PRETTY_FUNCTION__._ZL40p_ZN2xf18Mat_0_1080_1920_1_4initIEEiib_1P21xf_Mat_0_1080_1920_1_iib, i32 0, i32 0)) noreturn nounwind
  unreachable
                                                  ; No predecessors!
  br label %20

; <label>:20                                      ; preds = %19, %17
  %21 = load i32* %2, align 4
  %22 = load %struct.xf_Mat_0_1080_1920_1_** %1, align 8
  %23 = getelementptr inbounds %struct.xf_Mat_0_1080_1920_1_* %22, i32 0, i32 1
  store i32 %21, i32* %23, align 4
  %24 = load i32* %3, align 4
  %25 = load %struct.xf_Mat_0_1080_1920_1_** %1, align 8
  %26 = getelementptr inbounds %struct.xf_Mat_0_1080_1920_1_* %25, i32 0, i32 2
  store i32 %24, i32* %26, align 4
  %27 = load i32* %2, align 4
  %28 = load i32* %3, align 4
  %29 = ashr i32 %28, 0
  %30 = mul nsw i32 %27, %29
  %31 = load %struct.xf_Mat_0_1080_1920_1_** %1, align 8
  %32 = getelementptr inbounds %struct.xf_Mat_0_1080_1920_1_* %31, i32 0, i32 3
  store i32 %30, i32* %32, align 4
  %33 = load i8* %4, align 1
  %34 = trunc i8 %33 to i1
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %20
  br label %36

; <label>:36                                      ; preds = %35, %20
  ret void
}

define linkonce_odr void @_ZN21xf_Mat_0_1080_1920_1_C2Ev(%struct.xf_Mat_0_1080_1920_1_* %this) unnamed_addr uwtable inlinehint align 2 {
  %1 = alloca %struct.xf_Mat_0_1080_1920_1_*, align 8
  store %struct.xf_Mat_0_1080_1920_1_* %this, %struct.xf_Mat_0_1080_1920_1_** %1, align 8
  %2 = load %struct.xf_Mat_0_1080_1920_1_** %1
  %3 = getelementptr inbounds %struct.xf_Mat_0_1080_1920_1_* %2, i32 0, i32 4
  %4 = getelementptr inbounds [2073600 x %class.ap_uint.0]* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.ap_uint.0* %4, i64 2073600
  br label %6

; <label>:6                                       ; preds = %6, %0
  %7 = phi %class.ap_uint.0* [ %4, %0 ], [ %8, %6 ]
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %7)
  %8 = getelementptr inbounds %class.ap_uint.0* %7, i64 1
  %9 = icmp eq %class.ap_uint.0* %8, %5
  br i1 %9, label %10, label %6

; <label>:10                                      ; preds = %6
  ret void
}

define internal void @_ZL38p_ZN2xf16Mat_0_256_256_1_4initIEEiib_1P19xf_Mat_0_256_256_1_iib(%struct.xf_Mat_0_256_256_1_* %this_, i32 %_rows, i32 %_cols, i1 zeroext %allocate) nounwind uwtable {
  %1 = alloca %struct.xf_Mat_0_256_256_1_*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store %struct.xf_Mat_0_256_256_1_* %this_, %struct.xf_Mat_0_256_256_1_** %1, align 8
  store i32 %_rows, i32* %2, align 4
  store i32 %_cols, i32* %3, align 4
  %5 = zext i1 %allocate to i8
  store i8 %5, i8* %4, align 1
  %6 = load i32* %2, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %18

; <label>:8                                       ; preds = %0
  %9 = load i32* %2, align 4
  %10 = icmp sle i32 %9, 256
  br i1 %10, label %11, label %18

; <label>:11                                      ; preds = %8
  %12 = load i32* %3, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %18

; <label>:14                                      ; preds = %11
  %15 = load i32* %3, align 4
  %16 = icmp sle i32 %15, 256
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %14
  br label %20

; <label>:18                                      ; preds = %14, %11, %8, %0
  call void @__assert_fail(i8* getelementptr inbounds ([143 x i8]* @.str3, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str4, i32 0, i32 0), i32 517, i8* getelementptr inbounds ([90 x i8]* @__PRETTY_FUNCTION__._ZL38p_ZN2xf16Mat_0_256_256_1_4initIEEiib_1P19xf_Mat_0_256_256_1_iib, i32 0, i32 0)) noreturn nounwind
  unreachable
                                                  ; No predecessors!
  br label %20

; <label>:20                                      ; preds = %19, %17
  %21 = load i32* %2, align 4
  %22 = load %struct.xf_Mat_0_256_256_1_** %1, align 8
  %23 = getelementptr inbounds %struct.xf_Mat_0_256_256_1_* %22, i32 0, i32 1
  store i32 %21, i32* %23, align 4
  %24 = load i32* %3, align 4
  %25 = load %struct.xf_Mat_0_256_256_1_** %1, align 8
  %26 = getelementptr inbounds %struct.xf_Mat_0_256_256_1_* %25, i32 0, i32 2
  store i32 %24, i32* %26, align 4
  %27 = load i32* %2, align 4
  %28 = load i32* %3, align 4
  %29 = ashr i32 %28, 0
  %30 = mul nsw i32 %27, %29
  %31 = load %struct.xf_Mat_0_256_256_1_** %1, align 8
  %32 = getelementptr inbounds %struct.xf_Mat_0_256_256_1_* %31, i32 0, i32 3
  store i32 %30, i32* %32, align 4
  %33 = load i8* %4, align 1
  %34 = trunc i8 %33 to i1
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %20
  br label %36

; <label>:36                                      ; preds = %35, %20
  ret void
}

define linkonce_odr void @_ZN19xf_Mat_0_256_256_1_C2Ev(%struct.xf_Mat_0_256_256_1_* %this) unnamed_addr uwtable inlinehint align 2 {
  %1 = alloca %struct.xf_Mat_0_256_256_1_*, align 8
  store %struct.xf_Mat_0_256_256_1_* %this, %struct.xf_Mat_0_256_256_1_** %1, align 8
  %2 = load %struct.xf_Mat_0_256_256_1_** %1
  %3 = getelementptr inbounds %struct.xf_Mat_0_256_256_1_* %2, i32 0, i32 4
  %4 = getelementptr inbounds [65536 x %class.ap_uint.0]* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.ap_uint.0* %4, i64 65536
  br label %6

; <label>:6                                       ; preds = %6, %0
  %7 = phi %class.ap_uint.0* [ %4, %0 ], [ %8, %6 ]
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %7)
  %8 = getelementptr inbounds %class.ap_uint.0* %7, i64 1
  %9 = icmp eq %class.ap_uint.0* %8, %5
  br i1 %9, label %10, label %6

; <label>:10                                      ; preds = %6
  ret void
}
