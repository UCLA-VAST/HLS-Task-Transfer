; ModuleID = '/home/vagrant/software-gnn/dse_database/ast_kernels/hog_kernel.cpp'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.ap_uint = type { [32 x i8] }
%struct.xf_Mat_0_2160_3840_1_ = type { i8, i32, i32, i32, [8294400 x %class.ap_uint.0] }
%class.ap_uint.0 = type { [1 x i8] }
%struct.xf_Mat_3_1_2319318_1_ = type { i8, i32, i32, i32, [2319318 x %class.ap_uint.1] }
%class.ap_uint.1 = type { [4 x i8] }
%struct.xf_accel_utils = type { i8 }
%"class.hls::stream.2" = type { %class.ap_uint.0 }
%"class.hls::stream.3" = type { %class.ap_uint.4 }
%class.ap_uint.4 = type { [72 x i8] }
%"class.hls::stream.5" = type { %class.ap_uint.1 }
%"class.hls::stream" = type { %class.ap_uint }
%"class.hls::stream.6" = type { %class.ap_uint.7 }
%class.ap_uint.7 = type { [2 x i8] }
%"class.hls::stream.8" = type { %class.ap_uint.9 }
%class.ap_uint.9 = type { [2 x i8] }
%class.ap_uint.10 = type { [4 x i8] }
%class.ap_uint.11 = type { [6 x i8] }
%class.ap_uint.12 = type { [1 x i8] }
%class.ap_uint.13 = type { [4 x i8] }
%class.ap_uint.23 = type { [7 x i8] }
%class.ap_int = type { [12 x i8] }
%class.ap_ufixed.24 = type { [7 x i8] }
%class.ap_int.25 = type { [13 x i8] }
%class.ap_uint.20 = type { [3 x i8] }
%class.ap_uint.15 = type { [5 x i8] }
%class.ap_ufixed = type { [5 x i8] }
%class.ap_uint.16 = type { [3 x i8] }
%class.ap_uint.14 = type { [2 x i8] }
%class.ap_ufixed.17 = type { [5 x i8] }
%struct.af_bit_ref = type { i8 }
%class.ap_ufixed.18 = type { [5 x i8] }
%class.ap_ufixed.19 = type { [5 x i8] }
%class.ap_fixed = type { [9 x i8] }
%class.ap_uint.21 = type { [1 x i8] }
%class.ap_uint.22 = type { [1 x i8] }
%class.ap_ufixed.26 = type { [7 x i8] }
%struct.af_bit_ref.27 = type { i8 }
%class.ap_ufixed.29 = type { [7 x i8] }
%class.ap_ufixed.30 = type { [7 x i8] }
%class.ap_fixed.31 = type { [13 x i8] }
%class.ap_int.32 = type { [7 x i8] }
%class.ap_int.33 = type { [10 x i8] }
%class.ap_uint.34 = type { [5 x i8] }
%class.ap_int.35 = type { [2 x i8] }
%class.ap_int.36 = type { [5 x i8] }
%class.ap_ufixed.37 = type { [4 x i8] }
%class.ap_uint.38 = type { [4 x i8] }
%class.ap_ufixed.39 = type { [4 x i8] }
%struct.af_bit_ref.40 = type { i8 }
%class.ap_ufixed.42 = type { [5 x i8] }
%class.ap_fixed.43 = type { [9 x i8] }
%class.ap_uint.44 = type { [1 x i8] }
%class.ap_uint.45 = type { [2 x i8] }
%class.ap_int.46 = type { [2 x i8] }

@_ZN2xf13division_lut8E = global [256 x i16] [i16 -1, i16 -32768, i16 16384, i16 10922, i16 8192, i16 6553, i16 5461, i16 4681, i16 4096, i16 3640, i16 3276, i16 2978, i16 2730, i16 2520, i16 2340, i16 2184, i16 2048, i16 1927, i16 1820, i16 1724, i16 1638, i16 1560, i16 1489, i16 1424, i16 1365, i16 1310, i16 1260, i16 1213, i16 1170, i16 1129, i16 1092, i16 1057, i16 1024, i16 992, i16 963, i16 936, i16 910, i16 885, i16 862, i16 840, i16 819, i16 799, i16 780, i16 762, i16 744, i16 728, i16 712, i16 697, i16 682, i16 668, i16 655, i16 642, i16 630, i16 618, i16 606, i16 595, i16 585, i16 574, i16 564, i16 555, i16 546, i16 537, i16 528, i16 520, i16 512, i16 504, i16 496, i16 489, i16 481, i16 474, i16 468, i16 461, i16 455, i16 448, i16 442, i16 436, i16 431, i16 425, i16 420, i16 414, i16 409, i16 404, i16 399, i16 394, i16 390, i16 385, i16 381, i16 376, i16 372, i16 368, i16 364, i16 360, i16 356, i16 352, i16 348, i16 344, i16 341, i16 337, i16 334, i16 330, i16 327, i16 324, i16 321, i16 318, i16 315, i16 312, i16 309, i16 306, i16 303, i16 300, i16 297, i16 295, i16 292, i16 289, i16 287, i16 284, i16 282, i16 280, i16 277, i16 275, i16 273, i16 270, i16 268, i16 266, i16 264, i16 262, i16 260, i16 258, i16 256, i16 254, i16 252, i16 250, i16 248, i16 246, i16 244, i16 242, i16 240, i16 239, i16 237, i16 235, i16 234, i16 232, i16 230, i16 229, i16 227, i16 225, i16 224, i16 222, i16 221, i16 219, i16 218, i16 217, i16 215, i16 214, i16 212, i16 211, i16 210, i16 208, i16 207, i16 206, i16 204, i16 203, i16 202, i16 201, i16 199, i16 198, i16 197, i16 196, i16 195, i16 193, i16 192, i16 191, i16 190, i16 189, i16 188, i16 187, i16 186, i16 185, i16 184, i16 183, i16 182, i16 181, i16 180, i16 179, i16 178, i16 177, i16 176, i16 175, i16 174, i16 173, i16 172, i16 171, i16 170, i16 169, i16 168, i16 168, i16 167, i16 166, i16 165, i16 164, i16 163, i16 163, i16 162, i16 161, i16 160, i16 159, i16 159, i16 158, i16 157, i16 156, i16 156, i16 155, i16 154, i16 153, i16 153, i16 152, i16 151, i16 151, i16 150, i16 149, i16 148, i16 148, i16 147, i16 146, i16 146, i16 145, i16 144, i16 144, i16 143, i16 143, i16 142, i16 141, i16 141, i16 140, i16 140, i16 139, i16 138, i16 138, i16 137, i16 137, i16 136, i16 135, i16 135, i16 134, i16 134, i16 133, i16 133, i16 132, i16 132, i16 131, i16 131, i16 130, i16 130, i16 129, i16 129, i16 128], align 16
@_ZN2xf14base_addr_lut8E = global [126 x i32] [i32 0, i32 512, i32 640, i32 704, i32 736, i32 768, i32 800, i32 816, i32 832, i32 848, i32 856, i32 864, i32 872, i32 880, i32 888, i32 896, i32 904, i32 908, i32 912, i32 916, i32 920, i32 924, i32 928, i32 932, i32 936, i32 937, i32 938, i32 939, i32 940, i32 941, i32 942, i32 943, i32 944, i32 945, i32 946, i32 947, i32 948, i32 949, i32 950, i32 951, i32 952, i32 953, i32 954, i32 955, i32 956, i32 957, i32 958, i32 959, i32 960, i32 961, i32 962, i32 963, i32 964, i32 965, i32 966, i32 967, i32 968, i32 969, i32 970, i32 971, i32 972, i32 973, i32 974, i32 9, i32 7, i32 6, i32 5, i32 5, i32 5, i32 4, i32 4, i32 4, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1], align 16
@_ZN2xf12atan_lut_fp8E = global [977 x i16] [i16 0, i16 7, i16 15, i16 23, i16 31, i16 39, i16 47, i16 55, i16 63, i16 71, i16 79, i16 87, i16 95, i16 103, i16 111, i16 119, i16 127, i16 135, i16 143, i16 151, i16 159, i16 167, i16 175, i16 183, i16 191, i16 199, i16 207, i16 215, i16 223, i16 231, i16 239, i16 247, i16 255, i16 263, i16 271, i16 279, i16 287, i16 295, i16 303, i16 311, i16 319, i16 327, i16 335, i16 343, i16 351, i16 358, i16 366, i16 374, i16 382, i16 390, i16 398, i16 406, i16 414, i16 422, i16 430, i16 438, i16 446, i16 454, i16 461, i16 469, i16 477, i16 485, i16 493, i16 501, i16 509, i16 517, i16 524, i16 532, i16 540, i16 548, i16 556, i16 564, i16 572, i16 579, i16 587, i16 595, i16 603, i16 611, i16 619, i16 626, i16 634, i16 642, i16 650, i16 658, i16 665, i16 673, i16 681, i16 689, i16 697, i16 704, i16 712, i16 720, i16 728, i16 735, i16 743, i16 751, i16 758, i16 766, i16 774, i16 782, i16 789, i16 797, i16 805, i16 812, i16 820, i16 828, i16 835, i16 843, i16 851, i16 858, i16 866, i16 874, i16 881, i16 889, i16 897, i16 904, i16 912, i16 919, i16 927, i16 935, i16 942, i16 950, i16 957, i16 965, i16 973, i16 980, i16 988, i16 995, i16 1003, i16 1010, i16 1018, i16 1025, i16 1033, i16 1040, i16 1048, i16 1055, i16 1063, i16 1070, i16 1078, i16 1085, i16 1093, i16 1100, i16 1107, i16 1115, i16 1122, i16 1130, i16 1137, i16 1144, i16 1152, i16 1159, i16 1167, i16 1174, i16 1181, i16 1189, i16 1196, i16 1203, i16 1211, i16 1218, i16 1225, i16 1233, i16 1240, i16 1247, i16 1254, i16 1262, i16 1269, i16 1276, i16 1283, i16 1291, i16 1298, i16 1305, i16 1312, i16 1319, i16 1327, i16 1334, i16 1341, i16 1348, i16 1355, i16 1362, i16 1370, i16 1377, i16 1384, i16 1391, i16 1398, i16 1405, i16 1412, i16 1419, i16 1426, i16 1433, i16 1441, i16 1448, i16 1455, i16 1462, i16 1469, i16 1476, i16 1483, i16 1490, i16 1497, i16 1504, i16 1511, i16 1518, i16 1524, i16 1531, i16 1538, i16 1545, i16 1552, i16 1559, i16 1566, i16 1573, i16 1580, i16 1587, i16 1593, i16 1600, i16 1607, i16 1614, i16 1621, i16 1628, i16 1634, i16 1641, i16 1648, i16 1655, i16 1661, i16 1668, i16 1675, i16 1682, i16 1688, i16 1695, i16 1702, i16 1708, i16 1715, i16 1722, i16 1728, i16 1735, i16 1742, i16 1748, i16 1755, i16 1762, i16 1768, i16 1775, i16 1781, i16 1788, i16 1794, i16 1801, i16 1808, i16 1814, i16 1821, i16 1827, i16 1834, i16 1840, i16 1847, i16 1853, i16 1860, i16 1866, i16 1872, i16 1879, i16 1885, i16 1892, i16 1898, i16 1905, i16 1911, i16 1917, i16 1924, i16 1930, i16 1936, i16 1943, i16 1949, i16 1955, i16 1962, i16 1968, i16 1974, i16 1980, i16 1987, i16 1993, i16 1999, i16 2005, i16 2012, i16 2018, i16 2024, i16 2030, i16 2036, i16 2043, i16 2049, i16 2055, i16 2061, i16 2067, i16 2073, i16 2079, i16 2086, i16 2092, i16 2098, i16 2104, i16 2110, i16 2116, i16 2122, i16 2128, i16 2134, i16 2140, i16 2146, i16 2152, i16 2158, i16 2164, i16 2170, i16 2176, i16 2182, i16 2188, i16 2194, i16 2200, i16 2205, i16 2211, i16 2217, i16 2223, i16 2229, i16 2235, i16 2241, i16 2246, i16 2252, i16 2258, i16 2264, i16 2270, i16 2275, i16 2281, i16 2287, i16 2293, i16 2298, i16 2304, i16 2310, i16 2316, i16 2321, i16 2327, i16 2333, i16 2338, i16 2344, i16 2350, i16 2355, i16 2361, i16 2366, i16 2372, i16 2378, i16 2383, i16 2389, i16 2394, i16 2400, i16 2406, i16 2411, i16 2417, i16 2422, i16 2428, i16 2433, i16 2439, i16 2444, i16 2450, i16 2455, i16 2460, i16 2466, i16 2471, i16 2477, i16 2482, i16 2488, i16 2493, i16 2498, i16 2504, i16 2509, i16 2514, i16 2520, i16 2525, i16 2530, i16 2536, i16 2541, i16 2546, i16 2552, i16 2557, i16 2562, i16 2567, i16 2573, i16 2578, i16 2583, i16 2588, i16 2593, i16 2599, i16 2604, i16 2609, i16 2614, i16 2619, i16 2624, i16 2630, i16 2635, i16 2640, i16 2645, i16 2650, i16 2655, i16 2660, i16 2665, i16 2670, i16 2675, i16 2680, i16 2685, i16 2690, i16 2695, i16 2700, i16 2705, i16 2710, i16 2715, i16 2720, i16 2725, i16 2730, i16 2735, i16 2740, i16 2745, i16 2750, i16 2755, i16 2760, i16 2765, i16 2769, i16 2774, i16 2779, i16 2784, i16 2789, i16 2794, i16 2798, i16 2803, i16 2808, i16 2813, i16 2818, i16 2822, i16 2827, i16 2832, i16 2837, i16 2841, i16 2846, i16 2851, i16 2855, i16 2860, i16 2865, i16 2869, i16 2874, i16 2879, i16 2883, i16 2888, i16 2893, i16 2897, i16 2902, i16 2907, i16 2911, i16 2916, i16 2920, i16 2925, i16 2929, i16 2934, i16 2939, i16 2943, i16 2948, i16 2952, i16 2957, i16 2961, i16 2966, i16 2970, i16 2975, i16 2979, i16 2984, i16 2988, i16 2992, i16 2997, i16 3001, i16 3006, i16 3010, i16 3014, i16 3019, i16 3023, i16 3028, i16 3032, i16 3036, i16 3041, i16 3045, i16 3049, i16 3054, i16 3058, i16 3062, i16 3067, i16 3071, i16 3075, i16 3079, i16 3084, i16 3088, i16 3092, i16 3096, i16 3101, i16 3105, i16 3109, i16 3113, i16 3117, i16 3122, i16 3126, i16 3130, i16 3134, i16 3138, i16 3142, i16 3147, i16 3151, i16 3155, i16 3159, i16 3163, i16 3167, i16 3171, i16 3175, i16 3179, i16 3183, i16 3188, i16 3192, i16 3196, i16 3200, i16 3204, i16 3208, i16 3212, i16 3216, i16 3232, i16 3247, i16 3263, i16 3279, i16 3294, i16 3309, i16 3325, i16 3340, i16 3355, i16 3370, i16 3384, i16 3399, i16 3413, i16 3428, i16 3442, i16 3456, i16 3470, i16 3484, i16 3498, i16 3512, i16 3526, i16 3539, i16 3553, i16 3566, i16 3579, i16 3592, i16 3605, i16 3618, i16 3631, i16 3644, i16 3656, i16 3669, i16 3681, i16 3694, i16 3706, i16 3718, i16 3730, i16 3742, i16 3754, i16 3766, i16 3777, i16 3789, i16 3801, i16 3812, i16 3823, i16 3835, i16 3846, i16 3857, i16 3868, i16 3879, i16 3890, i16 3901, i16 3911, i16 3922, i16 3932, i16 3943, i16 3953, i16 3964, i16 3974, i16 3984, i16 3994, i16 4004, i16 4014, i16 4024, i16 4034, i16 4044, i16 4053, i16 4063, i16 4072, i16 4082, i16 4091, i16 4101, i16 4110, i16 4119, i16 4128, i16 4137, i16 4146, i16 4155, i16 4164, i16 4173, i16 4182, i16 4190, i16 4199, i16 4208, i16 4216, i16 4225, i16 4233, i16 4241, i16 4250, i16 4258, i16 4266, i16 4274, i16 4282, i16 4290, i16 4298, i16 4306, i16 4314, i16 4322, i16 4329, i16 4337, i16 4345, i16 4352, i16 4360, i16 4367, i16 4375, i16 4382, i16 4390, i16 4397, i16 4404, i16 4411, i16 4418, i16 4426, i16 4433, i16 4440, i16 4447, i16 4454, i16 4460, i16 4467, i16 4474, i16 4481, i16 4487, i16 4494, i16 4501, i16 4507, i16 4514, i16 4520, i16 4527, i16 4533, i16 4546, i16 4559, i16 4571, i16 4583, i16 4595, i16 4607, i16 4619, i16 4631, i16 4642, i16 4654, i16 4665, i16 4676, i16 4687, i16 4698, i16 4709, i16 4719, i16 4730, i16 4740, i16 4750, i16 4761, i16 4771, i16 4780, i16 4790, i16 4800, i16 4810, i16 4819, i16 4828, i16 4838, i16 4847, i16 4856, i16 4865, i16 4874, i16 4883, i16 4891, i16 4900, i16 4908, i16 4917, i16 4925, i16 4933, i16 4941, i16 4949, i16 4957, i16 4965, i16 4973, i16 4981, i16 4989, i16 4996, i16 5004, i16 5011, i16 5018, i16 5026, i16 5033, i16 5040, i16 5047, i16 5054, i16 5061, i16 5068, i16 5075, i16 5082, i16 5088, i16 5095, i16 5101, i16 5108, i16 5114, i16 5127, i16 5139, i16 5152, i16 5164, i16 5175, i16 5187, i16 5198, i16 5210, i16 5221, i16 5231, i16 5242, i16 5252, i16 5263, i16 5273, i16 5283, i16 5292, i16 5302, i16 5311, i16 5321, i16 5330, i16 5339, i16 5347, i16 5356, i16 5365, i16 5373, i16 5381, i16 5390, i16 5398, i16 5406, i16 5413, i16 5421, i16 5429, i16 5436, i16 5444, i16 5451, i16 5458, i16 5465, i16 5472, i16 5479, i16 5486, i16 5492, i16 5499, i16 5505, i16 5512, i16 5518, i16 5524, i16 5530, i16 5536, i16 5542, i16 5548, i16 5554, i16 5560, i16 5566, i16 5571, i16 5577, i16 5582, i16 5588, i16 5593, i16 5598, i16 5603, i16 5609, i16 5614, i16 5619, i16 5624, i16 5628, i16 5633, i16 5638, i16 5643, i16 5647, i16 5652, i16 5657, i16 5661, i16 5666, i16 5670, i16 5674, i16 5679, i16 5683, i16 5687, i16 5691, i16 5695, i16 5699, i16 5704, i16 5707, i16 5711, i16 5715, i16 5719, i16 5723, i16 5727, i16 5731, i16 5734, i16 5738, i16 5742, i16 5745, i16 5749, i16 5752, i16 5756, i16 5762, i16 5769, i16 5776, i16 5782, i16 5789, i16 5795, i16 5801, i16 5807, i16 5813, i16 5818, i16 5824, i16 5830, i16 5835, i16 5840, i16 5846, i16 5851, i16 5856, i16 5861, i16 5866, i16 5871, i16 5875, i16 5880, i16 5885, i16 5889, i16 5894, i16 5898, i16 5902, i16 5906, i16 5911, i16 5915, i16 5919, i16 5923, i16 5927, i16 5930, i16 5934, i16 5938, i16 5942, i16 5945, i16 5949, i16 5952, i16 5956, i16 5959, i16 5963, i16 5966, i16 5969, i16 5972, i16 5976, i16 5979, i16 5985, i16 5991, i16 5997, i16 6002, i16 6008, i16 6013, i16 6019, i16 6024, i16 6029, i16 6034, i16 6038, i16 6043, i16 6048, i16 6052, i16 6056, i16 6061, i16 6065, i16 6069, i16 6073, i16 6077, i16 6081, i16 6084, i16 6088, i16 6091, i16 6095, i16 6098, i16 6102, i16 6105, i16 6108, i16 6111, i16 6114, i16 6118, i16 6121, i16 6123, i16 6126, i16 6129, i16 6132, i16 6135, i16 6137, i16 6140, i16 6142, i16 6145, i16 6147, i16 6150, i16 6152, i16 6155, i16 6157, i16 6159, i16 6162, i16 6164, i16 6166, i16 6168, i16 6170, i16 6172, i16 6174, i16 6176, i16 6180, i16 6184, i16 6188, i16 6191, i16 6195, i16 6198, i16 6201, i16 6205, i16 6208, i16 6211, i16 6214, i16 6217, i16 6219, i16 6222, i16 6225, i16 6227, i16 6230, i16 6232, i16 6235, i16 6237, i16 6239, i16 6242, i16 6244, i16 6246, i16 6248, i16 6250, i16 6252, i16 6254, i16 6256, i16 6258, i16 6260, i16 6261, i16 6268, i16 6274, i16 6280, i16 6286, i16 6291, i16 6295, i16 6300, i16 6304, i16 6308, i16 6312, i16 6315, i16 6318, i16 6321, i16 6324, i16 6327, i16 6330, i16 6332, i16 6334, i16 6337, i16 6339, i16 6341, i16 6343, i16 6345, i16 6347, i16 6348, i16 6350, i16 6352, i16 6353, i16 6355, i16 6356, i16 6357, i16 6359, i16 6360, i16 6361, i16 6363, i16 6364, i16 6365, i16 6366, i16 6367, i16 6367], align 16
@_ZN2xf12division_lutE = global [2049 x i16] [i16 -1, i16 -1, i16 -1, i16 -32, i16 -64, i16 -96, i16 -128, i16 -160, i16 -192, i16 -224, i16 -256, i16 -287, i16 -319, i16 -351, i16 -382, i16 -414, i16 -445, i16 -477, i16 -509, i16 -540, i16 -571, i16 -603, i16 -634, i16 -666, i16 -697, i16 -728, i16 -760, i16 -791, i16 -822, i16 -853, i16 -884, i16 -916, i16 -947, i16 -978, i16 -1009, i16 -1040, i16 -1071, i16 -1102, i16 -1133, i16 -1163, i16 -1194, i16 -1225, i16 -1256, i16 -1287, i16 -1317, i16 -1348, i16 -1379, i16 -1410, i16 -1440, i16 -1471, i16 -1501, i16 -1532, i16 -1562, i16 -1593, i16 -1623, i16 -1654, i16 -1684, i16 -1714, i16 -1745, i16 -1775, i16 -1805, i16 -1836, i16 -1866, i16 -1896, i16 -1926, i16 -1956, i16 -1986, i16 -2017, i16 -2047, i16 -2077, i16 -2107, i16 -2137, i16 -2166, i16 -2196, i16 -2226, i16 -2256, i16 -2286, i16 -2316, i16 -2345, i16 -2375, i16 -2405, i16 -2435, i16 -2464, i16 -2494, i16 -2523, i16 -2553, i16 -2583, i16 -2612, i16 -2642, i16 -2671, i16 -2700, i16 -2730, i16 -2759, i16 -2789, i16 -2818, i16 -2847, i16 -2876, i16 -2906, i16 -2935, i16 -2964, i16 -2993, i16 -3022, i16 -3052, i16 -3081, i16 -3110, i16 -3139, i16 -3168, i16 -3197, i16 -3226, i16 -3254, i16 -3283, i16 -3312, i16 -3341, i16 -3370, i16 -3399, i16 -3427, i16 -3456, i16 -3485, i16 -3514, i16 -3542, i16 -3571, i16 -3599, i16 -3628, i16 -3656, i16 -3685, i16 -3714, i16 -3742, i16 -3770, i16 -3799, i16 -3827, i16 -3856, i16 -3884, i16 -3912, i16 -3940, i16 -3969, i16 -3997, i16 -4025, i16 -4053, i16 -4081, i16 -4110, i16 -4138, i16 -4166, i16 -4194, i16 -4222, i16 -4250, i16 -4278, i16 -4306, i16 -4334, i16 -4362, i16 -4389, i16 -4417, i16 -4445, i16 -4473, i16 -4501, i16 -4528, i16 -4556, i16 -4584, i16 -4612, i16 -4639, i16 -4667, i16 -4694, i16 -4722, i16 -4749, i16 -4777, i16 -4804, i16 -4832, i16 -4859, i16 -4887, i16 -4914, i16 -4942, i16 -4969, i16 -4996, i16 -5024, i16 -5051, i16 -5078, i16 -5105, i16 -5132, i16 -5160, i16 -5187, i16 -5214, i16 -5241, i16 -5268, i16 -5295, i16 -5322, i16 -5349, i16 -5376, i16 -5403, i16 -5430, i16 -5457, i16 -5484, i16 -5511, i16 -5538, i16 -5564, i16 -5591, i16 -5618, i16 -5645, i16 -5671, i16 -5698, i16 -5725, i16 -5751, i16 -5778, i16 -5805, i16 -5831, i16 -5858, i16 -5884, i16 -5911, i16 -5937, i16 -5964, i16 -5990, i16 -6016, i16 -6043, i16 -6069, i16 -6096, i16 -6122, i16 -6148, i16 -6174, i16 -6201, i16 -6227, i16 -6253, i16 -6279, i16 -6305, i16 -6332, i16 -6358, i16 -6384, i16 -6410, i16 -6436, i16 -6462, i16 -6488, i16 -6514, i16 -6540, i16 -6566, i16 -6592, i16 -6617, i16 -6643, i16 -6669, i16 -6695, i16 -6721, i16 -6746, i16 -6772, i16 -6798, i16 -6824, i16 -6849, i16 -6875, i16 -6901, i16 -6926, i16 -6952, i16 -6977, i16 -7003, i16 -7028, i16 -7054, i16 -7079, i16 -7105, i16 -7130, i16 -7156, i16 -7181, i16 -7206, i16 -7232, i16 -7257, i16 -7282, i16 -7308, i16 -7333, i16 -7358, i16 -7383, i16 -7408, i16 -7434, i16 -7459, i16 -7484, i16 -7509, i16 -7534, i16 -7559, i16 -7584, i16 -7609, i16 -7634, i16 -7659, i16 -7684, i16 -7709, i16 -7734, i16 -7759, i16 -7784, i16 -7808, i16 -7833, i16 -7858, i16 -7883, i16 -7908, i16 -7932, i16 -7957, i16 -7982, i16 -8006, i16 -8031, i16 -8056, i16 -8080, i16 -8105, i16 -8129, i16 -8154, i16 -8178, i16 -8203, i16 -8227, i16 -8252, i16 -8276, i16 -8301, i16 -8325, i16 -8350, i16 -8374, i16 -8398, i16 -8423, i16 -8447, i16 -8471, i16 -8495, i16 -8520, i16 -8544, i16 -8568, i16 -8592, i16 -8616, i16 -8640, i16 -8665, i16 -8689, i16 -8713, i16 -8737, i16 -8761, i16 -8785, i16 -8809, i16 -8833, i16 -8857, i16 -8881, i16 -8905, i16 -8928, i16 -8952, i16 -8976, i16 -9000, i16 -9024, i16 -9048, i16 -9071, i16 -9095, i16 -9119, i16 -9142, i16 -9166, i16 -9190, i16 -9213, i16 -9237, i16 -9261, i16 -9284, i16 -9308, i16 -9331, i16 -9355, i16 -9378, i16 -9402, i16 -9425, i16 -9449, i16 -9472, i16 -9496, i16 -9519, i16 -9542, i16 -9566, i16 -9589, i16 -9612, i16 -9636, i16 -9659, i16 -9682, i16 -9705, i16 -9729, i16 -9752, i16 -9775, i16 -9798, i16 -9821, i16 -9844, i16 -9868, i16 -9891, i16 -9914, i16 -9937, i16 -9960, i16 -9983, i16 -10006, i16 -10029, i16 -10052, i16 -10075, i16 -10098, i16 -10120, i16 -10143, i16 -10166, i16 -10189, i16 -10212, i16 -10235, i16 -10257, i16 -10280, i16 -10303, i16 -10326, i16 -10348, i16 -10371, i16 -10394, i16 -10416, i16 -10439, i16 -10462, i16 -10484, i16 -10507, i16 -10529, i16 -10552, i16 -10574, i16 -10597, i16 -10619, i16 -10642, i16 -10664, i16 -10687, i16 -10709, i16 -10731, i16 -10754, i16 -10776, i16 -10798, i16 -10821, i16 -10843, i16 -10865, i16 -10888, i16 -10910, i16 -10932, i16 -10954, i16 -10976, i16 -10999, i16 -11021, i16 -11043, i16 -11065, i16 -11087, i16 -11109, i16 -11131, i16 -11153, i16 -11175, i16 -11197, i16 -11219, i16 -11241, i16 -11263, i16 -11285, i16 -11307, i16 -11329, i16 -11351, i16 -11373, i16 -11395, i16 -11416, i16 -11438, i16 -11460, i16 -11482, i16 -11504, i16 -11525, i16 -11547, i16 -11569, i16 -11590, i16 -11612, i16 -11634, i16 -11655, i16 -11677, i16 -11699, i16 -11720, i16 -11742, i16 -11763, i16 -11785, i16 -11806, i16 -11828, i16 -11849, i16 -11871, i16 -11892, i16 -11914, i16 -11935, i16 -11957, i16 -11978, i16 -11999, i16 -12021, i16 -12042, i16 -12063, i16 -12085, i16 -12106, i16 -12127, i16 -12148, i16 -12170, i16 -12191, i16 -12212, i16 -12233, i16 -12254, i16 -12275, i16 -12297, i16 -12318, i16 -12339, i16 -12360, i16 -12381, i16 -12402, i16 -12423, i16 -12444, i16 -12465, i16 -12486, i16 -12507, i16 -12528, i16 -12549, i16 -12570, i16 -12591, i16 -12612, i16 -12632, i16 -12653, i16 -12674, i16 -12695, i16 -12716, i16 -12736, i16 -12757, i16 -12778, i16 -12799, i16 -12819, i16 -12840, i16 -12861, i16 -12881, i16 -12902, i16 -12923, i16 -12943, i16 -12964, i16 -12985, i16 -13005, i16 -13026, i16 -13046, i16 -13067, i16 -13087, i16 -13108, i16 -13128, i16 -13149, i16 -13169, i16 -13189, i16 -13210, i16 -13230, i16 -13251, i16 -13271, i16 -13291, i16 -13312, i16 -13332, i16 -13352, i16 -13373, i16 -13393, i16 -13413, i16 -13433, i16 -13454, i16 -13474, i16 -13494, i16 -13514, i16 -13534, i16 -13554, i16 -13575, i16 -13595, i16 -13615, i16 -13635, i16 -13655, i16 -13675, i16 -13695, i16 -13715, i16 -13735, i16 -13755, i16 -13775, i16 -13795, i16 -13815, i16 -13835, i16 -13855, i16 -13875, i16 -13894, i16 -13914, i16 -13934, i16 -13954, i16 -13974, i16 -13994, i16 -14013, i16 -14033, i16 -14053, i16 -14073, i16 -14092, i16 -14112, i16 -14132, i16 -14151, i16 -14171, i16 -14191, i16 -14210, i16 -14230, i16 -14250, i16 -14269, i16 -14289, i16 -14308, i16 -14328, i16 -14347, i16 -14367, i16 -14386, i16 -14406, i16 -14425, i16 -14445, i16 -14464, i16 -14484, i16 -14503, i16 -14523, i16 -14542, i16 -14561, i16 -14581, i16 -14600, i16 -14619, i16 -14639, i16 -14658, i16 -14677, i16 -14696, i16 -14716, i16 -14735, i16 -14754, i16 -14773, i16 -14793, i16 -14812, i16 -14831, i16 -14850, i16 -14869, i16 -14888, i16 -14907, i16 -14926, i16 -14946, i16 -14965, i16 -14984, i16 -15003, i16 -15022, i16 -15041, i16 -15060, i16 -15079, i16 -15098, i16 -15117, i16 -15136, i16 -15154, i16 -15173, i16 -15192, i16 -15211, i16 -15230, i16 -15249, i16 -15268, i16 -15287, i16 -15305, i16 -15324, i16 -15343, i16 -15362, i16 -15380, i16 -15399, i16 -15418, i16 -15437, i16 -15455, i16 -15474, i16 -15493, i16 -15511, i16 -15530, i16 -15549, i16 -15567, i16 -15586, i16 -15604, i16 -15623, i16 -15641, i16 -15660, i16 -15679, i16 -15697, i16 -15716, i16 -15734, i16 -15752, i16 -15771, i16 -15789, i16 -15808, i16 -15826, i16 -15845, i16 -15863, i16 -15881, i16 -15900, i16 -15918, i16 -15936, i16 -15955, i16 -15973, i16 -15991, i16 -16010, i16 -16028, i16 -16046, i16 -16064, i16 -16083, i16 -16101, i16 -16119, i16 -16137, i16 -16155, i16 -16174, i16 -16192, i16 -16210, i16 -16228, i16 -16246, i16 -16264, i16 -16282, i16 -16300, i16 -16318, i16 -16336, i16 -16354, i16 -16372, i16 -16390, i16 -16408, i16 -16426, i16 -16444, i16 -16462, i16 -16480, i16 -16498, i16 -16516, i16 -16534, i16 -16552, i16 -16570, i16 -16588, i16 -16605, i16 -16623, i16 -16641, i16 -16659, i16 -16677, i16 -16695, i16 -16712, i16 -16730, i16 -16748, i16 -16766, i16 -16783, i16 -16801, i16 -16819, i16 -16836, i16 -16854, i16 -16872, i16 -16889, i16 -16907, i16 -16924, i16 -16942, i16 -16960, i16 -16977, i16 -16995, i16 -17012, i16 -17030, i16 -17047, i16 -17065, i16 -17082, i16 -17100, i16 -17117, i16 -17135, i16 -17152, i16 -17170, i16 -17187, i16 -17205, i16 -17222, i16 -17239, i16 -17257, i16 -17274, i16 -17291, i16 -17309, i16 -17326, i16 -17343, i16 -17361, i16 -17378, i16 -17395, i16 -17413, i16 -17430, i16 -17447, i16 -17464, i16 -17481, i16 -17499, i16 -17516, i16 -17533, i16 -17550, i16 -17567, i16 -17584, i16 -17602, i16 -17619, i16 -17636, i16 -17653, i16 -17670, i16 -17687, i16 -17704, i16 -17721, i16 -17738, i16 -17755, i16 -17772, i16 -17789, i16 -17806, i16 -17823, i16 -17840, i16 -17857, i16 -17874, i16 -17891, i16 -17908, i16 -17925, i16 -17942, i16 -17958, i16 -17975, i16 -17992, i16 -18009, i16 -18026, i16 -18043, i16 -18059, i16 -18076, i16 -18093, i16 -18110, i16 -18126, i16 -18143, i16 -18160, i16 -18177, i16 -18193, i16 -18210, i16 -18227, i16 -18243, i16 -18260, i16 -18277, i16 -18293, i16 -18310, i16 -18327, i16 -18343, i16 -18360, i16 -18376, i16 -18393, i16 -18409, i16 -18426, i16 -18443, i16 -18459, i16 -18476, i16 -18492, i16 -18509, i16 -18525, i16 -18541, i16 -18558, i16 -18574, i16 -18591, i16 -18607, i16 -18624, i16 -18640, i16 -18656, i16 -18673, i16 -18689, i16 -18705, i16 -18722, i16 -18738, i16 -18754, i16 -18771, i16 -18787, i16 -18803, i16 -18820, i16 -18836, i16 -18852, i16 -18868, i16 -18885, i16 -18901, i16 -18917, i16 -18933, i16 -18949, i16 -18965, i16 -18982, i16 -18998, i16 -19014, i16 -19030, i16 -19046, i16 -19062, i16 -19078, i16 -19094, i16 -19110, i16 -19126, i16 -19143, i16 -19159, i16 -19175, i16 -19191, i16 -19207, i16 -19223, i16 -19239, i16 -19255, i16 -19270, i16 -19286, i16 -19302, i16 -19318, i16 -19334, i16 -19350, i16 -19366, i16 -19382, i16 -19398, i16 -19414, i16 -19429, i16 -19445, i16 -19461, i16 -19477, i16 -19493, i16 -19508, i16 -19524, i16 -19540, i16 -19556, i16 -19572, i16 -19587, i16 -19603, i16 -19619, i16 -19634, i16 -19650, i16 -19666, i16 -19681, i16 -19697, i16 -19713, i16 -19728, i16 -19744, i16 -19760, i16 -19775, i16 -19791, i16 -19806, i16 -19822, i16 -19838, i16 -19853, i16 -19869, i16 -19884, i16 -19900, i16 -19915, i16 -19931, i16 -19946, i16 -19962, i16 -19977, i16 -19993, i16 -20008, i16 -20024, i16 -20039, i16 -20054, i16 -20070, i16 -20085, i16 -20101, i16 -20116, i16 -20131, i16 -20147, i16 -20162, i16 -20177, i16 -20193, i16 -20208, i16 -20223, i16 -20239, i16 -20254, i16 -20269, i16 -20284, i16 -20300, i16 -20315, i16 -20330, i16 -20345, i16 -20361, i16 -20376, i16 -20391, i16 -20406, i16 -20421, i16 -20436, i16 -20452, i16 -20467, i16 -20482, i16 -20497, i16 -20512, i16 -20527, i16 -20542, i16 -20557, i16 -20572, i16 -20587, i16 -20603, i16 -20618, i16 -20633, i16 -20648, i16 -20663, i16 -20678, i16 -20693, i16 -20708, i16 -20723, i16 -20738, i16 -20752, i16 -20767, i16 -20782, i16 -20797, i16 -20812, i16 -20827, i16 -20842, i16 -20857, i16 -20872, i16 -20887, i16 -20901, i16 -20916, i16 -20931, i16 -20946, i16 -20961, i16 -20975, i16 -20990, i16 -21005, i16 -21020, i16 -21035, i16 -21049, i16 -21064, i16 -21079, i16 -21094, i16 -21108, i16 -21123, i16 -21138, i16 -21152, i16 -21167, i16 -21182, i16 -21196, i16 -21211, i16 -21226, i16 -21240, i16 -21255, i16 -21269, i16 -21284, i16 -21299, i16 -21313, i16 -21328, i16 -21342, i16 -21357, i16 -21371, i16 -21386, i16 -21400, i16 -21415, i16 -21429, i16 -21444, i16 -21458, i16 -21473, i16 -21487, i16 -21502, i16 -21516, i16 -21531, i16 -21545, i16 -21560, i16 -21574, i16 -21588, i16 -21603, i16 -21617, i16 -21631, i16 -21646, i16 -21660, i16 -21674, i16 -21689, i16 -21703, i16 -21717, i16 -21732, i16 -21746, i16 -21760, i16 -21775, i16 -21789, i16 -21803, i16 -21817, i16 -21832, i16 -21846, i16 -21860, i16 -21874, i16 -21888, i16 -21903, i16 -21917, i16 -21931, i16 -21945, i16 -21959, i16 -21973, i16 -21988, i16 -22002, i16 -22016, i16 -22030, i16 -22044, i16 -22058, i16 -22072, i16 -22086, i16 -22100, i16 -22114, i16 -22128, i16 -22142, i16 -22156, i16 -22171, i16 -22185, i16 -22199, i16 -22213, i16 -22226, i16 -22240, i16 -22254, i16 -22268, i16 -22282, i16 -22296, i16 -22310, i16 -22324, i16 -22338, i16 -22352, i16 -22366, i16 -22380, i16 -22394, i16 -22407, i16 -22421, i16 -22435, i16 -22449, i16 -22463, i16 -22477, i16 -22490, i16 -22504, i16 -22518, i16 -22532, i16 -22546, i16 -22559, i16 -22573, i16 -22587, i16 -22601, i16 -22614, i16 -22628, i16 -22642, i16 -22655, i16 -22669, i16 -22683, i16 -22696, i16 -22710, i16 -22724, i16 -22737, i16 -22751, i16 -22765, i16 -22778, i16 -22792, i16 -22806, i16 -22819, i16 -22833, i16 -22846, i16 -22860, i16 -22874, i16 -22887, i16 -22901, i16 -22914, i16 -22928, i16 -22941, i16 -22955, i16 -22968, i16 -22982, i16 -22995, i16 -23009, i16 -23022, i16 -23036, i16 -23049, i16 -23063, i16 -23076, i16 -23089, i16 -23103, i16 -23116, i16 -23130, i16 -23143, i16 -23156, i16 -23170, i16 -23183, i16 -23197, i16 -23210, i16 -23223, i16 -23237, i16 -23250, i16 -23263, i16 -23277, i16 -23290, i16 -23303, i16 -23316, i16 -23330, i16 -23343, i16 -23356, i16 -23369, i16 -23383, i16 -23396, i16 -23409, i16 -23422, i16 -23436, i16 -23449, i16 -23462, i16 -23475, i16 -23488, i16 -23502, i16 -23515, i16 -23528, i16 -23541, i16 -23554, i16 -23567, i16 -23580, i16 -23593, i16 -23607, i16 -23620, i16 -23633, i16 -23646, i16 -23659, i16 -23672, i16 -23685, i16 -23698, i16 -23711, i16 -23724, i16 -23737, i16 -23750, i16 -23763, i16 -23776, i16 -23789, i16 -23802, i16 -23815, i16 -23828, i16 -23841, i16 -23854, i16 -23867, i16 -23880, i16 -23893, i16 -23906, i16 -23919, i16 -23931, i16 -23944, i16 -23957, i16 -23970, i16 -23983, i16 -23996, i16 -24009, i16 -24022, i16 -24034, i16 -24047, i16 -24060, i16 -24073, i16 -24086, i16 -24098, i16 -24111, i16 -24124, i16 -24137, i16 -24150, i16 -24162, i16 -24175, i16 -24188, i16 -24201, i16 -24213, i16 -24226, i16 -24239, i16 -24251, i16 -24264, i16 -24277, i16 -24290, i16 -24302, i16 -24315, i16 -24327, i16 -24340, i16 -24353, i16 -24365, i16 -24378, i16 -24391, i16 -24403, i16 -24416, i16 -24428, i16 -24441, i16 -24454, i16 -24466, i16 -24479, i16 -24491, i16 -24504, i16 -24516, i16 -24529, i16 -24541, i16 -24554, i16 -24566, i16 -24579, i16 -24591, i16 -24604, i16 -24616, i16 -24629, i16 -24641, i16 -24654, i16 -24666, i16 -24679, i16 -24691, i16 -24704, i16 -24716, i16 -24728, i16 -24741, i16 -24753, i16 -24766, i16 -24778, i16 -24790, i16 -24803, i16 -24815, i16 -24827, i16 -24840, i16 -24852, i16 -24864, i16 -24877, i16 -24889, i16 -24901, i16 -24914, i16 -24926, i16 -24938, i16 -24951, i16 -24963, i16 -24975, i16 -24987, i16 -25000, i16 -25012, i16 -25024, i16 -25036, i16 -25048, i16 -25061, i16 -25073, i16 -25085, i16 -25097, i16 -25109, i16 -25122, i16 -25134, i16 -25146, i16 -25158, i16 -25170, i16 -25182, i16 -25195, i16 -25207, i16 -25219, i16 -25231, i16 -25243, i16 -25255, i16 -25267, i16 -25279, i16 -25291, i16 -25303, i16 -25315, i16 -25327, i16 -25340, i16 -25352, i16 -25364, i16 -25376, i16 -25388, i16 -25400, i16 -25412, i16 -25424, i16 -25436, i16 -25448, i16 -25460, i16 -25472, i16 -25483, i16 -25495, i16 -25507, i16 -25519, i16 -25531, i16 -25543, i16 -25555, i16 -25567, i16 -25579, i16 -25591, i16 -25603, i16 -25615, i16 -25626, i16 -25638, i16 -25650, i16 -25662, i16 -25674, i16 -25686, i16 -25697, i16 -25709, i16 -25721, i16 -25733, i16 -25745, i16 -25756, i16 -25768, i16 -25780, i16 -25792, i16 -25804, i16 -25815, i16 -25827, i16 -25839, i16 -25851, i16 -25862, i16 -25874, i16 -25886, i16 -25897, i16 -25909, i16 -25921, i16 -25933, i16 -25944, i16 -25956, i16 -25968, i16 -25979, i16 -25991, i16 -26003, i16 -26014, i16 -26026, i16 -26037, i16 -26049, i16 -26061, i16 -26072, i16 -26084, i16 -26095, i16 -26107, i16 -26119, i16 -26130, i16 -26142, i16 -26153, i16 -26165, i16 -26176, i16 -26188, i16 -26200, i16 -26211, i16 -26223, i16 -26234, i16 -26246, i16 -26257, i16 -26269, i16 -26280, i16 -26292, i16 -26303, i16 -26314, i16 -26326, i16 -26337, i16 -26349, i16 -26360, i16 -26372, i16 -26383, i16 -26395, i16 -26406, i16 -26417, i16 -26429, i16 -26440, i16 -26452, i16 -26463, i16 -26474, i16 -26486, i16 -26497, i16 -26508, i16 -26520, i16 -26531, i16 -26542, i16 -26554, i16 -26565, i16 -26576, i16 -26588, i16 -26599, i16 -26610, i16 -26622, i16 -26633, i16 -26644, i16 -26655, i16 -26667, i16 -26678, i16 -26689, i16 -26700, i16 -26712, i16 -26723, i16 -26734, i16 -26745, i16 -26756, i16 -26768, i16 -26779, i16 -26790, i16 -26801, i16 -26812, i16 -26824, i16 -26835, i16 -26846, i16 -26857, i16 -26868, i16 -26879, i16 -26890, i16 -26902, i16 -26913, i16 -26924, i16 -26935, i16 -26946, i16 -26957, i16 -26968, i16 -26979, i16 -26990, i16 -27001, i16 -27012, i16 -27024, i16 -27035, i16 -27046, i16 -27057, i16 -27068, i16 -27079, i16 -27090, i16 -27101, i16 -27112, i16 -27123, i16 -27134, i16 -27145, i16 -27156, i16 -27167, i16 -27178, i16 -27189, i16 -27200, i16 -27210, i16 -27221, i16 -27232, i16 -27243, i16 -27254, i16 -27265, i16 -27276, i16 -27287, i16 -27298, i16 -27309, i16 -27320, i16 -27330, i16 -27341, i16 -27352, i16 -27363, i16 -27374, i16 -27385, i16 -27396, i16 -27406, i16 -27417, i16 -27428, i16 -27439, i16 -27450, i16 -27461, i16 -27471, i16 -27482, i16 -27493, i16 -27504, i16 -27514, i16 -27525, i16 -27536, i16 -27547, i16 -27558, i16 -27568, i16 -27579, i16 -27590, i16 -27600, i16 -27611, i16 -27622, i16 -27633, i16 -27643, i16 -27654, i16 -27665, i16 -27675, i16 -27686, i16 -27697, i16 -27707, i16 -27718, i16 -27729, i16 -27739, i16 -27750, i16 -27761, i16 -27771, i16 -27782, i16 -27792, i16 -27803, i16 -27814, i16 -27824, i16 -27835, i16 -27845, i16 -27856, i16 -27867, i16 -27877, i16 -27888, i16 -27898, i16 -27909, i16 -27919, i16 -27930, i16 -27940, i16 -27951, i16 -27962, i16 -27972, i16 -27983, i16 -27993, i16 -28004, i16 -28014, i16 -28025, i16 -28035, i16 -28046, i16 -28056, i16 -28066, i16 -28077, i16 -28087, i16 -28098, i16 -28108, i16 -28119, i16 -28129, i16 -28140, i16 -28150, i16 -28160, i16 -28171, i16 -28181, i16 -28192, i16 -28202, i16 -28212, i16 -28223, i16 -28233, i16 -28243, i16 -28254, i16 -28264, i16 -28274, i16 -28285, i16 -28295, i16 -28306, i16 -28316, i16 -28326, i16 -28336, i16 -28347, i16 -28357, i16 -28367, i16 -28378, i16 -28388, i16 -28398, i16 -28408, i16 -28419, i16 -28429, i16 -28439, i16 -28450, i16 -28460, i16 -28470, i16 -28480, i16 -28490, i16 -28501, i16 -28511, i16 -28521, i16 -28531, i16 -28542, i16 -28552, i16 -28562, i16 -28572, i16 -28582, i16 -28592, i16 -28603, i16 -28613, i16 -28623, i16 -28633, i16 -28643, i16 -28653, i16 -28663, i16 -28674, i16 -28684, i16 -28694, i16 -28704, i16 -28714, i16 -28724, i16 -28734, i16 -28744, i16 -28754, i16 -28765, i16 -28775, i16 -28785, i16 -28795, i16 -28805, i16 -28815, i16 -28825, i16 -28835, i16 -28845, i16 -28855, i16 -28865, i16 -28875, i16 -28885, i16 -28895, i16 -28905, i16 -28915, i16 -28925, i16 -28935, i16 -28945, i16 -28955, i16 -28965, i16 -28975, i16 -28985, i16 -28995, i16 -29005, i16 -29015, i16 -29025, i16 -29035, i16 -29044, i16 -29054, i16 -29064, i16 -29074, i16 -29084, i16 -29094, i16 -29104, i16 -29114, i16 -29124, i16 -29134, i16 -29143, i16 -29153, i16 -29163, i16 -29173, i16 -29183, i16 -29193, i16 -29203, i16 -29212, i16 -29222, i16 -29232, i16 -29242, i16 -29252, i16 -29261, i16 -29271, i16 -29281, i16 -29291, i16 -29301, i16 -29310, i16 -29320, i16 -29330, i16 -29340, i16 -29349, i16 -29359, i16 -29369, i16 -29379, i16 -29388, i16 -29398, i16 -29408, i16 -29418, i16 -29427, i16 -29437, i16 -29447, i16 -29456, i16 -29466, i16 -29476, i16 -29486, i16 -29495, i16 -29505, i16 -29515, i16 -29524, i16 -29534, i16 -29544, i16 -29553, i16 -29563, i16 -29572, i16 -29582, i16 -29592, i16 -29601, i16 -29611, i16 -29621, i16 -29630, i16 -29640, i16 -29649, i16 -29659, i16 -29669, i16 -29678, i16 -29688, i16 -29697, i16 -29707, i16 -29716, i16 -29726, i16 -29736, i16 -29745, i16 -29755, i16 -29764, i16 -29774, i16 -29783, i16 -29793, i16 -29802, i16 -29812, i16 -29821, i16 -29831, i16 -29840, i16 -29850, i16 -29859, i16 -29869, i16 -29878, i16 -29888, i16 -29897, i16 -29907, i16 -29916, i16 -29926, i16 -29935, i16 -29944, i16 -29954, i16 -29963, i16 -29973, i16 -29982, i16 -29992, i16 -30001, i16 -30010, i16 -30020, i16 -30029, i16 -30039, i16 -30048, i16 -30057, i16 -30067, i16 -30076, i16 -30085, i16 -30095, i16 -30104, i16 -30114, i16 -30123, i16 -30132, i16 -30142, i16 -30151, i16 -30160, i16 -30170, i16 -30179, i16 -30188, i16 -30197, i16 -30207, i16 -30216, i16 -30225, i16 -30235, i16 -30244, i16 -30253, i16 -30262, i16 -30272, i16 -30281, i16 -30290, i16 -30299, i16 -30309, i16 -30318, i16 -30327, i16 -30336, i16 -30346, i16 -30355, i16 -30364, i16 -30373, i16 -30383, i16 -30392, i16 -30401, i16 -30410, i16 -30419, i16 -30429, i16 -30438, i16 -30447, i16 -30456, i16 -30465, i16 -30474, i16 -30484, i16 -30493, i16 -30502, i16 -30511, i16 -30520, i16 -30529, i16 -30538, i16 -30548, i16 -30557, i16 -30566, i16 -30575, i16 -30584, i16 -30593, i16 -30602, i16 -30611, i16 -30620, i16 -30629, i16 -30638, i16 -30648, i16 -30657, i16 -30666, i16 -30675, i16 -30684, i16 -30693, i16 -30702, i16 -30711, i16 -30720, i16 -30729, i16 -30738, i16 -30747, i16 -30756, i16 -30765, i16 -30774, i16 -30783, i16 -30792, i16 -30801, i16 -30810, i16 -30819, i16 -30828, i16 -30837, i16 -30846, i16 -30855, i16 -30864, i16 -30873, i16 -30882, i16 -30891, i16 -30900, i16 -30909, i16 -30918, i16 -30926, i16 -30935, i16 -30944, i16 -30953, i16 -30962, i16 -30971, i16 -30980, i16 -30989, i16 -30998, i16 -31007, i16 -31015, i16 -31024, i16 -31033, i16 -31042, i16 -31051, i16 -31060, i16 -31069, i16 -31078, i16 -31086, i16 -31095, i16 -31104, i16 -31113, i16 -31122, i16 -31131, i16 -31139, i16 -31148, i16 -31157, i16 -31166, i16 -31175, i16 -31183, i16 -31192, i16 -31201, i16 -31210, i16 -31218, i16 -31227, i16 -31236, i16 -31245, i16 -31254, i16 -31262, i16 -31271, i16 -31280, i16 -31289, i16 -31297, i16 -31306, i16 -31315, i16 -31323, i16 -31332, i16 -31341, i16 -31350, i16 -31358, i16 -31367, i16 -31376, i16 -31384, i16 -31393, i16 -31402, i16 -31410, i16 -31419, i16 -31428, i16 -31436, i16 -31445, i16 -31454, i16 -31462, i16 -31471, i16 -31480, i16 -31488, i16 -31497, i16 -31506, i16 -31514, i16 -31523, i16 -31531, i16 -31540, i16 -31549, i16 -31557, i16 -31566, i16 -31575, i16 -31583, i16 -31592, i16 -31600, i16 -31609, i16 -31617, i16 -31626, i16 -31635, i16 -31643, i16 -31652, i16 -31660, i16 -31669, i16 -31677, i16 -31686, i16 -31694, i16 -31703, i16 -31711, i16 -31720, i16 -31729, i16 -31737, i16 -31746, i16 -31754, i16 -31763, i16 -31771, i16 -31780, i16 -31788, i16 -31796, i16 -31805, i16 -31813, i16 -31822, i16 -31830, i16 -31839, i16 -31847, i16 -31856, i16 -31864, i16 -31873, i16 -31881, i16 -31890, i16 -31898, i16 -31906, i16 -31915, i16 -31923, i16 -31932, i16 -31940, i16 -31948, i16 -31957, i16 -31965, i16 -31974, i16 -31982, i16 -31990, i16 -31999, i16 -32007, i16 -32016, i16 -32024, i16 -32032, i16 -32041, i16 -32049, i16 -32057, i16 -32066, i16 -32074, i16 -32082, i16 -32091, i16 -32099, i16 -32107, i16 -32116, i16 -32124, i16 -32132, i16 -32141, i16 -32149, i16 -32157, i16 -32166, i16 -32174, i16 -32182, i16 -32190, i16 -32199, i16 -32207, i16 -32215, i16 -32224, i16 -32232, i16 -32240, i16 -32248, i16 -32257, i16 -32265, i16 -32273, i16 -32281, i16 -32290, i16 -32298, i16 -32306, i16 -32314, i16 -32323, i16 -32331, i16 -32339, i16 -32347, i16 -32355, i16 -32364, i16 -32372, i16 -32380, i16 -32388, i16 -32396, i16 -32404, i16 -32413, i16 -32421, i16 -32429, i16 -32437, i16 -32445, i16 -32453, i16 -32462, i16 -32470, i16 -32478, i16 -32486, i16 -32494, i16 -32502, i16 -32510, i16 -32519, i16 -32527, i16 -32535, i16 -32543, i16 -32551, i16 -32559, i16 -32567, i16 -32575, i16 -32583, i16 -32592, i16 -32600, i16 -32608, i16 -32616, i16 -32624, i16 -32632, i16 -32640, i16 -32648, i16 -32656, i16 -32664, i16 -32672, i16 -32680, i16 -32688, i16 -32696, i16 -32704, i16 -32712, i16 -32720, i16 -32728, i16 -32736, i16 -32744, i16 -32752], align 16
@.str = private unnamed_addr constant [95 x i8] c"((_height <= ROWS ) && (_width <= COLS)) && \22ROWS and COLS should be greater than input image\22\00", align 1
@.str1 = private unnamed_addr constant [29 x i8] c"xf_hog_descriptor_kernel.hpp\00", align 1
@__PRETTY_FUNCTION__._ZL146p_Z6xFDHOGILi128ELi64ELi8ELi16ELi16ELi8ELi8ELi9ELi2160ELi3840ELi0ELi2ELi1ELi1ELi45ELi1ELb0EEP6streamI7ap_uintILi8EEER6streamI7ap_uintILi576EEEtt_1PN3hls6streamI7ap_uintILi8EEEERNS0_IS1_ILi576EEEEtt = private unnamed_addr constant [255 x i8] c"void p_Z6xFDHOGILi128ELi64ELi8ELi16ELi16ELi8ELi8ELi9ELi2160ELi3840ELi0ELi2ELi1ELi1ELi45ELi1ELb0EEP6streamI7ap_uintILi8EEER6streamI7ap_uintILi576EEEtt_1(hls::stream<_DataType_0_1_name> *, hls::stream<_StreamType_45_name> &, unsigned short, unsigned short)\00", align 1
@.str2 = private unnamed_addr constant [13 x i8] c"phase_stream\00", align 1
@.str3 = private unnamed_addr constant [11 x i8] c"mag_stream\00", align 1
@.str4 = private unnamed_addr constant [81 x i8] c"((_height%CELL_HEIGHT) == 0) && \22Image HEIGHT must be a multiple of CELL_HEIGHT\22\00", align 1
@.str5 = private unnamed_addr constant [32 x i8] c"xf_hog_descriptor_hist_norm.hpp\00", align 1
@__PRETTY_FUNCTION__._ZL177p_Z16xFDHOGDescriptorILi128ELi64ELi8ELi8ELi8ELi9ELi2ELi2ELi2160ELi3840ELi2ELi2ELi1ELi5ELi45ELb0EER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi576EEEtt_1RN3hls6streamI7ap_uintILi16EEEES4_RNS0_IS1_ILi576EEEEtt = private unnamed_addr constant [321 x i8] c"void p_Z16xFDHOGDescriptorILi128ELi64ELi8ELi8ELi8ELi9ELi2ELi2ELi2160ELi3840ELi2ELi2ELi1ELi5ELi45ELb0EER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi576EEEtt_1(hls::stream<_StreamType_5_name> &, hls::stream<_StreamType_5_name> &, hls::stream<_StreamType_45_name> &, unsigned short, unsigned short)\00", align 1
@.str6 = private unnamed_addr constant [77 x i8] c"((_width%CELL_WIDTH) == 0) && \22Image WIDTH must be a multiple of CELL_WIDTH\22\00", align 1
@.str7 = private unnamed_addr constant [79 x i8] c"(M<=16) && \22Integer part of x should always be less than or equal to 16 bits.\22\00", align 1
@.str8 = private unnamed_addr constant [10 x i8] c"xf_math.h\00", align 1
@__PRETTY_FUNCTION__._ZL20p_ZN2xf7InverseEtiPctiPc = private unnamed_addr constant [63 x i8] c"unsigned int p_ZN2xf7InverseEtiPc(unsigned short, int, char *)\00", align 1
@.str9 = private unnamed_addr constant [109 x i8] c"((N1 == 9-M1) && (N2==9-M2) && (M1==M2)) && \22xs and ys should be of signed 9-bit and same fixed point type.\22\00", align 1
@__PRETTY_FUNCTION__._ZL24p_ZN2xf9Atan2LUT8Essiiiissiiii = private unnamed_addr constant [65 x i8] c"short p_ZN2xf9Atan2LUT8Essiiii(short, short, int, int, int, int)\00", align 1
@.str10 = private unnamed_addr constant [58 x i8] c"(M1==8) && (M2==8) && \22x and y should be of Q8.0 format.\22\00", align 1
@__PRETTY_FUNCTION__._ZL29p_ZN2xf11DivideYByX8EhhiiPcPchhiiPcS_ = private unnamed_addr constant [99 x i8] c"unsigned int p_ZN2xf11DivideYByX8EhhiiPcPc(unsigned char, unsigned char, int, int, char *, char *)\00", align 1
@.str11 = private unnamed_addr constant [40 x i8] c"(M==8) && \22x should be of Q8.0 format.\22\00", align 1
@__PRETTY_FUNCTION__._ZL21p_ZN2xf8Inverse8EhiPchiPc = private unnamed_addr constant [65 x i8] c"unsigned short p_ZN2xf8Inverse8EhiPc(unsigned char, int, char *)\00", align 1
@.str12 = private unnamed_addr constant [82 x i8] c"(_border_type == XF_BORDER_CONSTANT) && \22Border type must be XF_BORDER_CONSTANT \22\00", align 1
@.str13 = private unnamed_addr constant [32 x i8] c"xf_hog_descriptor_gradients.hpp\00", align 1
@__PRETTY_FUNCTION__._ZL141p_Z14xFHOGgradientsILi2160ELi3840ELi0ELi13ELi1ELi1ELi2ELi1ELb0EEP6streamI7ap_uintILi8EEER6streamI7ap_uintILi9EEER6streamI7ap_uintILi9EEEitt_1PN3hls6streamI7ap_uintILi8EEEERNS0_IS1_ILi9EEEES7_itt = private unnamed_addr constant [289 x i8] c"void p_Z14xFHOGgradientsILi2160ELi3840ELi0ELi13ELi1ELi1ELi2ELi1ELb0EEP6streamI7ap_uintILi8EEER6streamI7ap_uintILi9EEER6streamI7ap_uintILi9EEEitt_1(hls::stream<_DataType_0_1_name> *, hls::stream<_StreamType_2_name> &, hls::stream<_StreamType_2_name> &, int, unsigned short, unsigned short)\00", align 1
@.str14 = private unnamed_addr constant [143 x i8] c"(_rows > 0) && (_rows <= ROWS) && (_cols > 0) && (_cols <= COLS) && \22The number of rows and columns must be less than the template arguments.\22\00", align 1
@.str15 = private unnamed_addr constant [13 x i8] c"xf_structs.h\00", align 1
@__PRETTY_FUNCTION__._ZL40p_ZN2xf18Mat_3_1_2319318_1_4initIEEiib_1P21xf_Mat_3_1_2319318_1_iib = private unnamed_addr constant [94 x i8] c"void p_ZN2xf18Mat_3_1_2319318_1_4initIEEiib_1(struct xf_Mat_3_1_2319318_1_ *, int, int, bool)\00", align 1
@__PRETTY_FUNCTION__._ZL40p_ZN2xf18Mat_0_2160_3840_1_4initIEEiib_1P21xf_Mat_0_2160_3840_1_iib = private unnamed_addr constant [94 x i8] c"void p_ZN2xf18Mat_0_2160_3840_1_4initIEEiib_1(struct xf_Mat_0_2160_3840_1_ *, int, int, bool)\00", align 1

define void @_Z20hog_descriptor_accelP7ap_uintILi256EES1_iii(%class.ap_uint* %img_inp, %class.ap_uint* %img_out, i32 %rows, i32 %cols, i32 %desc_size) uwtable {
  %1 = alloca %class.ap_uint*, align 8
  %2 = alloca %class.ap_uint*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %pROWS = alloca i32, align 4
  %pCOLS = alloca i32, align 4
  %pNPC1 = alloca i32, align 4
  %pDSTS = alloca i32, align 4
  %in_mat = alloca %struct.xf_Mat_0_2160_3840_1_, align 4
  %out_mat = alloca %struct.xf_Mat_3_1_2319318_1_, align 4
  store %class.ap_uint* %img_inp, %class.ap_uint** %1, align 8
  store %class.ap_uint* %img_out, %class.ap_uint** %2, align 8
  store i32 %rows, i32* %3, align 4
  store i32 %cols, i32* %4, align 4
  store i32 %desc_size, i32* %5, align 4
  store i32 2160, i32* %pROWS, align 4
  store i32 3840, i32* %pCOLS, align 4
  store i32 1, i32* %pNPC1, align 4
  store i32 2319318, i32* %pDSTS, align 4
  call void @_ZN21xf_Mat_0_2160_3840_1_C1Ev(%struct.xf_Mat_0_2160_3840_1_* %in_mat)
  %6 = load i32* %3, align 4
  %7 = load i32* %4, align 4
  call void @_ZL36p_ZN2xf18Mat_0_2160_3840_1_C2IEEii_1P21xf_Mat_0_2160_3840_1_ii(%struct.xf_Mat_0_2160_3840_1_* %in_mat, i32 %6, i32 %7)
  call void @_ZN21xf_Mat_3_1_2319318_1_C1Ev(%struct.xf_Mat_3_1_2319318_1_* %out_mat)
  %8 = load i32* %5, align 4
  call void @_ZL36p_ZN2xf18Mat_3_1_2319318_1_C2IEEii_1P21xf_Mat_3_1_2319318_1_ii(%struct.xf_Mat_3_1_2319318_1_* %out_mat, i32 1, i32 %8)
  %9 = load %class.ap_uint** %1, align 8
  call void @_ZL99p_ZN2xf11Array2xfMatILi256ELi0ELi2160ELi3840ELi1EEEP7ap_uintILi256EER3MatILi0ELi2160ELi3840ELi1EE_1P7ap_uintILi256EER21xf_Mat_0_2160_3840_1_(%class.ap_uint* %9, %struct.xf_Mat_0_2160_3840_1_* %in_mat)
  call void @_ZL170p_ZN2xf13HOGDescriptorILi128ELi64ELi8ELi16ELi16ELi8ELi8ELi9ELi2319318ELi1ELi1ELi0ELi3ELi2160ELi3840ELi1ELb0EEER3MatILi0ELi2160ELi3840ELi1EER3MatILi3ELi1ELi2319318ELi1EE_1R21xf_Mat_0_2160_3840_1_R21xf_Mat_3_1_2319318_1_(%struct.xf_Mat_0_2160_3840_1_* %in_mat, %struct.xf_Mat_3_1_2319318_1_* %out_mat)
  %10 = load %class.ap_uint** %2, align 8
  call void @_ZL99p_ZN2xf11xfMat2ArrayILi256ELi3ELi1ELi2319318ELi1EEER3MatILi3ELi1ELi2319318ELi1EEP7ap_uintILi256EE_1R21xf_Mat_3_1_2319318_1_P7ap_uintILi256EE(%struct.xf_Mat_3_1_2319318_1_* %out_mat, %class.ap_uint* %10)
  ret void
}

define linkonce_odr void @_ZN21xf_Mat_0_2160_3840_1_C1Ev(%struct.xf_Mat_0_2160_3840_1_* %this) unnamed_addr uwtable inlinehint align 2 {
  %1 = alloca %struct.xf_Mat_0_2160_3840_1_*, align 8
  store %struct.xf_Mat_0_2160_3840_1_* %this, %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  %2 = load %struct.xf_Mat_0_2160_3840_1_** %1
  call void @_ZN21xf_Mat_0_2160_3840_1_C2Ev(%struct.xf_Mat_0_2160_3840_1_* %2)
  ret void
}

define internal void @_ZL36p_ZN2xf18Mat_0_2160_3840_1_C2IEEii_1P21xf_Mat_0_2160_3840_1_ii(%struct.xf_Mat_0_2160_3840_1_* %this_, i32 %_rows, i32 %_cols) uwtable {
  %1 = alloca %struct.xf_Mat_0_2160_3840_1_*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store %struct.xf_Mat_0_2160_3840_1_* %this_, %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  store i32 %_rows, i32* %2, align 4
  store i32 %_cols, i32* %3, align 4
  %4 = load %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  %5 = load i32* %2, align 4
  %6 = load i32* %3, align 4
  call void @_ZL40p_ZN2xf18Mat_0_2160_3840_1_4initIEEiib_1P21xf_Mat_0_2160_3840_1_iib(%struct.xf_Mat_0_2160_3840_1_* %4, i32 %5, i32 %6, i1 zeroext true)
  ret void
}

define linkonce_odr void @_ZN21xf_Mat_3_1_2319318_1_C1Ev(%struct.xf_Mat_3_1_2319318_1_* %this) unnamed_addr uwtable inlinehint align 2 {
  %1 = alloca %struct.xf_Mat_3_1_2319318_1_*, align 8
  store %struct.xf_Mat_3_1_2319318_1_* %this, %struct.xf_Mat_3_1_2319318_1_** %1, align 8
  %2 = load %struct.xf_Mat_3_1_2319318_1_** %1
  call void @_ZN21xf_Mat_3_1_2319318_1_C2Ev(%struct.xf_Mat_3_1_2319318_1_* %2)
  ret void
}

define internal void @_ZL36p_ZN2xf18Mat_3_1_2319318_1_C2IEEii_1P21xf_Mat_3_1_2319318_1_ii(%struct.xf_Mat_3_1_2319318_1_* %this_, i32 %_rows, i32 %_cols) uwtable {
  %1 = alloca %struct.xf_Mat_3_1_2319318_1_*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store %struct.xf_Mat_3_1_2319318_1_* %this_, %struct.xf_Mat_3_1_2319318_1_** %1, align 8
  store i32 %_rows, i32* %2, align 4
  store i32 %_cols, i32* %3, align 4
  %4 = load %struct.xf_Mat_3_1_2319318_1_** %1, align 8
  %5 = load i32* %2, align 4
  %6 = load i32* %3, align 4
  call void @_ZL40p_ZN2xf18Mat_3_1_2319318_1_4initIEEiib_1P21xf_Mat_3_1_2319318_1_iib(%struct.xf_Mat_3_1_2319318_1_* %4, i32 %5, i32 %6, i1 zeroext true)
  ret void
}

define internal void @_ZL99p_ZN2xf11Array2xfMatILi256ELi0ELi2160ELi3840ELi1EEEP7ap_uintILi256EER3MatILi0ELi2160ELi3840ELi1EE_1P7ap_uintILi256EER21xf_Mat_0_2160_3840_1_(%class.ap_uint* %srcPtr, %struct.xf_Mat_0_2160_3840_1_* %dstMat) uwtable {
  %1 = alloca %class.ap_uint*, align 8
  %2 = alloca %struct.xf_Mat_0_2160_3840_1_*, align 8
  %au = alloca %struct.xf_accel_utils, align 1
  store %class.ap_uint* %srcPtr, %class.ap_uint** %1, align 8
  store %struct.xf_Mat_0_2160_3840_1_* %dstMat, %struct.xf_Mat_0_2160_3840_1_** %2, align 8
  %3 = load %class.ap_uint** %1, align 8
  %4 = load %struct.xf_Mat_0_2160_3840_1_** %2, align 8
  call void @_ZL112p_ZN2xf11accel_utils11Array2xfMatILi256ELi0ELi2160ELi3840ELi1EEEP7ap_uintILi256EER3MatILi0ELi2160ELi3840ELi1EE_1P14xf_accel_utilsP7ap_uintILi256EER21xf_Mat_0_2160_3840_1_(%struct.xf_accel_utils* %au, %class.ap_uint* %3, %struct.xf_Mat_0_2160_3840_1_* %4)
  ret void
}

define internal void @_ZL170p_ZN2xf13HOGDescriptorILi128ELi64ELi8ELi16ELi16ELi8ELi8ELi9ELi2319318ELi1ELi1ELi0ELi3ELi2160ELi3840ELi1ELb0EEER3MatILi0ELi2160ELi3840ELi1EER3MatILi3ELi1ELi2319318ELi1EE_1R21xf_Mat_0_2160_3840_1_R21xf_Mat_3_1_2319318_1_(%struct.xf_Mat_0_2160_3840_1_* %_in_mat, %struct.xf_Mat_3_1_2319318_1_* %_desc_mat) uwtable {
  %1 = alloca %struct.xf_Mat_0_2160_3840_1_*, align 8
  %2 = alloca %struct.xf_Mat_3_1_2319318_1_*, align 8
  %in_strm = alloca %"class.hls::stream.2", align 1
  %in = alloca [1 x %"class.hls::stream.2"], align 1
  %_block_strm = alloca %"class.hls::stream.3", align 1
  %desc_strm = alloca %"class.hls::stream.5", align 1
  %IN_TC = alloca i32, align 4
  %i = alloca i32, align 4
  %3 = alloca %class.ap_uint.0, align 1
  %OUT_TC = alloca i32, align 4
  %i1 = alloca i32, align 4
  %4 = alloca %class.ap_uint.1, align 1
  store %struct.xf_Mat_0_2160_3840_1_* %_in_mat, %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  store %struct.xf_Mat_3_1_2319318_1_* %_desc_mat, %struct.xf_Mat_3_1_2319318_1_** %2, align 8
  call void @_ZN3hls6streamI7ap_uintILi8EEEC1Ev(%"class.hls::stream.2"* %in_strm)
  %5 = getelementptr inbounds [1 x %"class.hls::stream.2"]* %in, i32 0, i32 0
  %6 = getelementptr inbounds %"class.hls::stream.2"* %5, i64 1
  br label %7

; <label>:7                                       ; preds = %7, %0
  %8 = phi %"class.hls::stream.2"* [ %5, %0 ], [ %9, %7 ]
  call void @_ZN3hls6streamI7ap_uintILi8EEEC1Ev(%"class.hls::stream.2"* %8)
  %9 = getelementptr inbounds %"class.hls::stream.2"* %8, i64 1
  %10 = icmp eq %"class.hls::stream.2"* %9, %6
  br i1 %10, label %11, label %7

; <label>:11                                      ; preds = %7
  call void @_ZN3hls6streamI7ap_uintILi576EEEC1Ev(%"class.hls::stream.3"* %_block_strm)
  call void @_ZN3hls6streamI7ap_uintILi32EEEC1Ev(%"class.hls::stream.5"* %desc_strm)
  store i32 8294400, i32* %IN_TC, align 4
  store i32 0, i32* %i, align 4
  br label %12

; <label>:12                                      ; preds = %24, %11
  %13 = load i32* %i, align 4
  %14 = load %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  %15 = getelementptr inbounds %struct.xf_Mat_0_2160_3840_1_* %14, i32 0, i32 3
  %16 = load i32* %15, align 4
  %17 = icmp slt i32 %13, %16
  br i1 %17, label %18, label %27

; <label>:18                                      ; preds = %12
  %19 = load %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  %20 = load i32* %i, align 4
  %21 = call i8 @_ZL38p_ZN2xf18Mat_0_2160_3840_1_4readIEEi_1P21xf_Mat_0_2160_3840_1_i(%struct.xf_Mat_0_2160_3840_1_* %19, i32 %20)
  %22 = getelementptr %class.ap_uint.0* %3, i32 0, i32 0
  %23 = bitcast [1 x i8]* %22 to i8*
  store i8 %21, i8* %23, align 1
  call void @_ZN3hls6streamI7ap_uintILi8EEE5writeERKS2_(%"class.hls::stream.2"* %in_strm, %class.ap_uint.0* %3)
  br label %24

; <label>:24                                      ; preds = %18
  %25 = load i32* %i, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %i, align 4
  br label %12

; <label>:27                                      ; preds = %12
  %28 = getelementptr inbounds [1 x %"class.hls::stream.2"]* %in, i32 0, i32 0
  %29 = load %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  %30 = getelementptr inbounds %struct.xf_Mat_0_2160_3840_1_* %29, i32 0, i32 1
  %31 = load i32* %30, align 4
  %32 = trunc i32 %31 to i16
  %33 = load %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  %34 = getelementptr inbounds %struct.xf_Mat_0_2160_3840_1_* %33, i32 0, i32 2
  %35 = load i32* %34, align 4
  %36 = trunc i32 %35 to i16
  call void @_ZL124p_Z19xFHOGReadFromStreamILi2160ELi3840ELi1E7ap_uintILi8EE7ap_uintILi8EEER6streamI7ap_uintILi8EEEP6streamI7ap_uintILi8EEEtt_1RN3hls6streamI7ap_uintILi8EEEEPS3_tt(%"class.hls::stream.2"* %in_strm, %"class.hls::stream.2"* %28, i16 zeroext %32, i16 zeroext %36)
  %37 = getelementptr inbounds [1 x %"class.hls::stream.2"]* %in, i32 0, i32 0
  %38 = load %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  %39 = getelementptr inbounds %struct.xf_Mat_0_2160_3840_1_* %38, i32 0, i32 1
  %40 = load i32* %39, align 4
  %41 = trunc i32 %40 to i16
  %42 = load %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  %43 = getelementptr inbounds %struct.xf_Mat_0_2160_3840_1_* %42, i32 0, i32 2
  %44 = load i32* %43, align 4
  %45 = trunc i32 %44 to i16
  call void @_ZL146p_Z6xFDHOGILi128ELi64ELi8ELi16ELi16ELi8ELi8ELi9ELi2160ELi3840ELi0ELi2ELi1ELi1ELi45ELi1ELb0EEP6streamI7ap_uintILi8EEER6streamI7ap_uintILi576EEEtt_1PN3hls6streamI7ap_uintILi8EEEERNS0_IS1_ILi576EEEEtt(%"class.hls::stream.2"* %37, %"class.hls::stream.3"* %_block_strm, i16 zeroext %41, i16 zeroext %45)
  %46 = load %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  %47 = getelementptr inbounds %struct.xf_Mat_0_2160_3840_1_* %46, i32 0, i32 1
  %48 = load i32* %47, align 4
  %49 = trunc i32 %48 to i16
  %50 = load %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  %51 = getelementptr inbounds %struct.xf_Mat_0_2160_3840_1_* %50, i32 0, i32 2
  %52 = load i32* %51, align 4
  %53 = trunc i32 %52 to i16
  call void @_ZL147p_Z17xFWriteHOGDescNRBILi16ELi16ELi8ELi8ELi9ELi0ELi2160ELi3840ELi2ELi1ELi45E7ap_uintILi32EEER6streamI7ap_uintILi576EEER6streamI7ap_uintILi32EEEtt_1RN3hls6streamI7ap_uintILi576EEEERNS0_IS1_ILi32EEEEtt(%"class.hls::stream.3"* %_block_strm, %"class.hls::stream.5"* %desc_strm, i16 zeroext %49, i16 zeroext %53)
  store i32 8294400, i32* %OUT_TC, align 4
  store i32 0, i32* %i1, align 4
  br label %54

; <label>:54                                      ; preds = %69, %27
  %55 = load i32* %i1, align 4
  %56 = load %struct.xf_Mat_3_1_2319318_1_** %2, align 8
  %57 = getelementptr inbounds %struct.xf_Mat_3_1_2319318_1_* %56, i32 0, i32 3
  %58 = load i32* %57, align 4
  %59 = icmp slt i32 %55, %58
  br i1 %59, label %60, label %72

; <label>:60                                      ; preds = %54
  %61 = load %struct.xf_Mat_3_1_2319318_1_** %2, align 8
  %62 = load i32* %i1, align 4
  %63 = call i32 @_ZN3hls6streamI7ap_uintILi32EEE4readEv(%"class.hls::stream.5"* %desc_strm)
  %64 = getelementptr %class.ap_uint.1* %4, i32 0, i32 0
  %65 = bitcast [4 x i8]* %64 to i32*
  store i32 %63, i32* %65, align 1
  %66 = getelementptr %class.ap_uint.1* %4, i32 0, i32 0
  %67 = bitcast [4 x i8]* %66 to i32*
  %68 = load i32* %67, align 1
  call void @_ZL54p_ZN2xf18Mat_3_1_2319318_1_5writeIEEi7ap_uintILi32EE_1P21xf_Mat_3_1_2319318_1_i7ap_uintILi32EE(%struct.xf_Mat_3_1_2319318_1_* %61, i32 %62, i32 %68)
  br label %69

; <label>:69                                      ; preds = %60
  %70 = load i32* %i1, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %i1, align 4
  br label %54

; <label>:72                                      ; preds = %54
  ret void
}

define internal void @_ZL99p_ZN2xf11xfMat2ArrayILi256ELi3ELi1ELi2319318ELi1EEER3MatILi3ELi1ELi2319318ELi1EEP7ap_uintILi256EE_1R21xf_Mat_3_1_2319318_1_P7ap_uintILi256EE(%struct.xf_Mat_3_1_2319318_1_* %srcMat, %class.ap_uint* %dstPtr) uwtable {
  %1 = alloca %struct.xf_Mat_3_1_2319318_1_*, align 8
  %2 = alloca %class.ap_uint*, align 8
  %au = alloca %struct.xf_accel_utils, align 1
  store %struct.xf_Mat_3_1_2319318_1_* %srcMat, %struct.xf_Mat_3_1_2319318_1_** %1, align 8
  store %class.ap_uint* %dstPtr, %class.ap_uint** %2, align 8
  %3 = load %struct.xf_Mat_3_1_2319318_1_** %1, align 8
  %4 = load %class.ap_uint** %2, align 8
  call void @_ZL112p_ZN2xf11accel_utils11xfMat2ArrayILi256ELi3ELi1ELi2319318ELi1EEER3MatILi3ELi1ELi2319318ELi1EEP7ap_uintILi256EE_1P14xf_accel_utilsR21xf_Mat_3_1_2319318_1_P7ap_uintILi256EE(%struct.xf_accel_utils* %au, %struct.xf_Mat_3_1_2319318_1_* %3, %class.ap_uint* %4)
  ret void
}

define internal void @_ZL112p_ZN2xf11accel_utils11xfMat2ArrayILi256ELi3ELi1ELi2319318ELi1EEER3MatILi3ELi1ELi2319318ELi1EEP7ap_uintILi256EE_1P14xf_accel_utilsR21xf_Mat_3_1_2319318_1_P7ap_uintILi256EE(%struct.xf_accel_utils* %this_, %struct.xf_Mat_3_1_2319318_1_* %srcMat, %class.ap_uint* %dstPtr) uwtable {
  %1 = alloca %struct.xf_accel_utils*, align 8
  %2 = alloca %struct.xf_Mat_3_1_2319318_1_*, align 8
  %3 = alloca %class.ap_uint*, align 8
  %ch_width = alloca i32, align 4
  %strm = alloca %"class.hls::stream", align 1
  %rows = alloca i32, align 4
  %cols = alloca i32, align 4
  store %struct.xf_accel_utils* %this_, %struct.xf_accel_utils** %1, align 8
  store %struct.xf_Mat_3_1_2319318_1_* %srcMat, %struct.xf_Mat_3_1_2319318_1_** %2, align 8
  store %class.ap_uint* %dstPtr, %class.ap_uint** %3, align 8
  store i32 32, i32* %ch_width, align 4
  call void @_ZN3hls6streamI7ap_uintILi256EEEC1Ev(%"class.hls::stream"* %strm)
  %4 = load %struct.xf_Mat_3_1_2319318_1_** %2, align 8
  %5 = getelementptr inbounds %struct.xf_Mat_3_1_2319318_1_* %4, i32 0, i32 1
  %6 = load i32* %5, align 4
  store i32 %6, i32* %rows, align 4
  %7 = load %struct.xf_Mat_3_1_2319318_1_** %2, align 8
  %8 = getelementptr inbounds %struct.xf_Mat_3_1_2319318_1_* %7, i32 0, i32 2
  %9 = load i32* %8, align 4
  store i32 %9, i32* %cols, align 4
  %10 = load %struct.xf_accel_utils** %1, align 8
  %11 = load %struct.xf_Mat_3_1_2319318_1_** %2, align 8
  call void @_ZL133p_ZN2xf11accel_utils13xfMat2hlsStrmILi256ELi3ELi1ELi2319318ELi1ELi2319318EEER3MatILi3ELi1ELi2319318ELi1EER6streamI7ap_uintILi256EEE_1P14xf_accel_utilsR21xf_Mat_3_1_2319318_1_RN3hls6streamI7ap_uintILi256EEEE(%struct.xf_accel_utils* %10, %struct.xf_Mat_3_1_2319318_1_* %11, %"class.hls::stream"* %strm)
  %12 = load %struct.xf_accel_utils** %1, align 8
  %13 = load %class.ap_uint** %3, align 8
  %14 = load i32* %rows, align 4
  %15 = load i32* %cols, align 4
  call void @_ZL127p_ZN2xf11accel_utils13hlsStrm2ArrayILi256ELi1ELi2319318ELi1ELi1ELi32ELi289914EEER6streamI7ap_uintILi256EEEP7ap_uintILi256EEii_1P14xf_accel_utilsRN3hls6streamI7ap_uintILi256EEEEPS4_ii(%struct.xf_accel_utils* %12, %"class.hls::stream"* %strm, %class.ap_uint* %13, i32 %14, i32 %15)
  ret void
}

declare void @_ZN3hls6streamI7ap_uintILi256EEEC1Ev(%"class.hls::stream"*)

define internal void @_ZL133p_ZN2xf11accel_utils13xfMat2hlsStrmILi256ELi3ELi1ELi2319318ELi1ELi2319318EEER3MatILi3ELi1ELi2319318ELi1EER6streamI7ap_uintILi256EEE_1P14xf_accel_utilsR21xf_Mat_3_1_2319318_1_RN3hls6streamI7ap_uintILi256EEEE(%struct.xf_accel_utils* %this_, %struct.xf_Mat_3_1_2319318_1_* %srcMat, %"class.hls::stream"* %dstStrm) uwtable {
  %1 = alloca %struct.xf_accel_utils*, align 8
  %2 = alloca %struct.xf_Mat_3_1_2319318_1_*, align 8
  %3 = alloca %"class.hls::stream"*, align 8
  %rows = alloca i32, align 4
  %cols = alloca i32, align 4
  %loop_count = alloca i32, align 4
  %bits_to_add = alloca i32, align 4
  %N_size = alloca i32, align 4
  %r = alloca %class.ap_uint, align 1
  %in = alloca %class.ap_uint.1, align 1
  %i = alloca i32, align 4
  %4 = alloca %class.ap_uint.1, align 1
  store %struct.xf_accel_utils* %this_, %struct.xf_accel_utils** %1, align 8
  store %struct.xf_Mat_3_1_2319318_1_* %srcMat, %struct.xf_Mat_3_1_2319318_1_** %2, align 8
  store %"class.hls::stream"* %dstStrm, %"class.hls::stream"** %3, align 8
  %5 = load %struct.xf_Mat_3_1_2319318_1_** %2, align 8
  %6 = getelementptr inbounds %struct.xf_Mat_3_1_2319318_1_* %5, i32 0, i32 1
  %7 = load i32* %6, align 4
  store i32 %7, i32* %rows, align 4
  %8 = load %struct.xf_Mat_3_1_2319318_1_** %2, align 8
  %9 = getelementptr inbounds %struct.xf_Mat_3_1_2319318_1_* %8, i32 0, i32 2
  %10 = load i32* %9, align 4
  store i32 %10, i32* %cols, align 4
  %11 = load i32* %rows, align 4
  %12 = load i32* %cols, align 4
  %13 = mul nsw i32 %11, %12
  %14 = sdiv i32 %13, 1
  store i32 %14, i32* %loop_count, align 4
  store i32 256, i32* %bits_to_add, align 4
  store i32 32, i32* %N_size, align 4
  call void @_ZN7ap_uintILi256EEC1Ev(%class.ap_uint* %r)
  call void @_ZN7ap_uintILi32EEC1Ev(%class.ap_uint.1* %in)
  br label %15

; <label>:15                                      ; preds = %0
  store i32 0, i32* %i, align 4
  br label %16

; <label>:16                                      ; preds = %64, %15
  %17 = load i32* %i, align 4
  %18 = load i32* %loop_count, align 4
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %20, label %67

; <label>:20                                      ; preds = %16
  %21 = load %struct.xf_Mat_3_1_2319318_1_** %2, align 8
  %22 = load i32* %i, align 4
  %23 = call i32 @_ZL38p_ZN2xf18Mat_3_1_2319318_1_4readIEEi_1P21xf_Mat_3_1_2319318_1_i(%struct.xf_Mat_3_1_2319318_1_* %21, i32 %22)
  %24 = getelementptr %class.ap_uint.1* %4, i32 0, i32 0
  %25 = bitcast [4 x i8]* %24 to i32*
  store i32 %23, i32* %25, align 1
  %26 = call %class.ap_uint.1* @_ZN7ap_uintILi32EEaSERKS0_(%class.ap_uint.1* %in, %class.ap_uint.1* %4)
  %27 = load i32* %bits_to_add, align 4
  %28 = icmp sle i32 %27, 32
  br i1 %28, label %29, label %52

; <label>:29                                      ; preds = %20
  %30 = load i32* %bits_to_add, align 4
  %31 = sub nsw i32 %30, 1
  %32 = call i64* @_ZN7ap_uintILi32EE5rangeEii(%class.ap_uint.1* %in, i32 %31, i32 0)
  %33 = load i64* %32
  %34 = load i32* %bits_to_add, align 4
  %35 = sub nsw i32 256, %34
  %36 = call i64* @_ZN7ap_uintILi256EE5rangeEii(%class.ap_uint* %r, i32 255, i32 %35)
  store i64 %33, i64* %36
  %37 = load %"class.hls::stream"** %3, align 8
  call void @_ZN3hls6streamI7ap_uintILi256EEE5writeERKS2_(%"class.hls::stream"* %37, %class.ap_uint* %r)
  %38 = load i32* %bits_to_add, align 4
  %39 = icmp ne i32 %38, 32
  br i1 %39, label %40, label %48

; <label>:40                                      ; preds = %29
  %41 = load i32* %bits_to_add, align 4
  %42 = call i64* @_ZN7ap_uintILi32EE5rangeEii(%class.ap_uint.1* %in, i32 31, i32 %41)
  %43 = load i64* %42
  %44 = load i32* %bits_to_add, align 4
  %45 = sub nsw i32 32, %44
  %46 = sub nsw i32 %45, 1
  %47 = call i64* @_ZN7ap_uintILi256EE5rangeEii(%class.ap_uint* %r, i32 %46, i32 0)
  store i64 %43, i64* %47
  br label %48

; <label>:48                                      ; preds = %40, %29
  %49 = load i32* %bits_to_add, align 4
  %50 = sub nsw i32 32, %49
  %51 = sub nsw i32 256, %50
  store i32 %51, i32* %bits_to_add, align 4
  br label %63

; <label>:52                                      ; preds = %20
  %53 = call i64 @_ZNK7ap_uintILi32EEcvmEv(%class.ap_uint.1* %in)
  %54 = load i32* %bits_to_add, align 4
  %55 = sub nsw i32 256, %54
  %56 = add nsw i32 %55, 32
  %57 = sub nsw i32 %56, 1
  %58 = load i32* %bits_to_add, align 4
  %59 = sub nsw i32 256, %58
  %60 = call i64* @_ZN7ap_uintILi256EE5rangeEii(%class.ap_uint* %r, i32 %57, i32 %59)
  store i64 %53, i64* %60
  %61 = load i32* %bits_to_add, align 4
  %62 = sub nsw i32 %61, 32
  store i32 %62, i32* %bits_to_add, align 4
  br label %63

; <label>:63                                      ; preds = %52, %48
  br label %64

; <label>:64                                      ; preds = %63
  %65 = load i32* %i, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %i, align 4
  br label %16

; <label>:67                                      ; preds = %16
  %68 = load i32* %bits_to_add, align 4
  %69 = icmp ne i32 %68, 256
  br i1 %69, label %70, label %72

; <label>:70                                      ; preds = %67
  %71 = load %"class.hls::stream"** %3, align 8
  call void @_ZN3hls6streamI7ap_uintILi256EEE5writeERKS2_(%"class.hls::stream"* %71, %class.ap_uint* %r)
  br label %72

; <label>:72                                      ; preds = %70, %67
  ret void
}

define internal void @_ZL127p_ZN2xf11accel_utils13hlsStrm2ArrayILi256ELi1ELi2319318ELi1ELi1ELi32ELi289914EEER6streamI7ap_uintILi256EEEP7ap_uintILi256EEii_1P14xf_accel_utilsRN3hls6streamI7ap_uintILi256EEEEPS4_ii(%struct.xf_accel_utils* %this_, %"class.hls::stream"* %srcStrm, %class.ap_uint* %dstPtr, i32 %rows, i32 %cols) uwtable {
  %1 = alloca %struct.xf_accel_utils*, align 8
  %2 = alloca %"class.hls::stream"*, align 8
  %3 = alloca %class.ap_uint*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %pixel_width = alloca i32, align 4
  %loop_count = alloca i32, align 4
  %i = alloca i32, align 4
  %6 = alloca %class.ap_uint, align 1
  store %struct.xf_accel_utils* %this_, %struct.xf_accel_utils** %1, align 8
  store %"class.hls::stream"* %srcStrm, %"class.hls::stream"** %2, align 8
  store %class.ap_uint* %dstPtr, %class.ap_uint** %3, align 8
  store i32 %rows, i32* %4, align 4
  store i32 %cols, i32* %5, align 4
  store i32 32, i32* %pixel_width, align 4
  %7 = load i32* %4, align 4
  %8 = load i32* %5, align 4
  %9 = mul nsw i32 %7, %8
  %10 = load i32* %pixel_width, align 4
  %11 = mul nsw i32 %9, %10
  %12 = add nsw i32 %11, 256
  %13 = sub nsw i32 %12, 1
  %14 = sdiv i32 %13, 256
  store i32 %14, i32* %loop_count, align 4
  store i32 0, i32* %i, align 4
  br label %15

; <label>:15                                      ; preds = %26, %0
  %16 = load i32* %i, align 4
  %17 = load i32* %loop_count, align 4
  %18 = icmp slt i32 %16, %17
  br i1 %18, label %19, label %29

; <label>:19                                      ; preds = %15
  %20 = load i32* %i, align 4
  %21 = sext i32 %20 to i64
  %22 = load %class.ap_uint** %3, align 8
  %23 = getelementptr inbounds %class.ap_uint* %22, i64 %21
  %24 = load %"class.hls::stream"** %2, align 8
  call void @_ZN3hls6streamI7ap_uintILi256EEE4readEv(%class.ap_uint* sret %6, %"class.hls::stream"* %24)
  %25 = call %class.ap_uint* @_ZN7ap_uintILi256EEaSERKS0_(%class.ap_uint* %23, %class.ap_uint* %6)
  br label %26

; <label>:26                                      ; preds = %19
  %27 = load i32* %i, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %i, align 4
  br label %15

; <label>:29                                      ; preds = %15
  ret void
}

declare %class.ap_uint* @_ZN7ap_uintILi256EEaSERKS0_(%class.ap_uint*, %class.ap_uint*)

declare void @_ZN3hls6streamI7ap_uintILi256EEE4readEv(%class.ap_uint* sret, %"class.hls::stream"*)

declare void @_ZN7ap_uintILi256EEC1Ev(%class.ap_uint*)

declare void @_ZN7ap_uintILi32EEC1Ev(%class.ap_uint.1*)

declare %class.ap_uint.1* @_ZN7ap_uintILi32EEaSERKS0_(%class.ap_uint.1*, %class.ap_uint.1*)

define internal i32 @_ZL38p_ZN2xf18Mat_3_1_2319318_1_4readIEEi_1P21xf_Mat_3_1_2319318_1_i(%struct.xf_Mat_3_1_2319318_1_* %this_, i32 %index) nounwind uwtable {
  %1 = alloca %class.ap_uint.1, align 1
  %2 = alloca %struct.xf_Mat_3_1_2319318_1_*, align 8
  %3 = alloca i32, align 4
  store %struct.xf_Mat_3_1_2319318_1_* %this_, %struct.xf_Mat_3_1_2319318_1_** %2, align 8
  store i32 %index, i32* %3, align 4
  %4 = load i32* %3, align 4
  %5 = sext i32 %4 to i64
  %6 = load %struct.xf_Mat_3_1_2319318_1_** %2, align 8
  %7 = getelementptr inbounds %struct.xf_Mat_3_1_2319318_1_* %6, i32 0, i32 4
  %8 = getelementptr inbounds [2319318 x %class.ap_uint.1]* %7, i32 0, i64 %5
  %9 = bitcast %class.ap_uint.1* %1 to i8*
  %10 = bitcast %class.ap_uint.1* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 4, i32 1, i1 false)
  %11 = getelementptr %class.ap_uint.1* %1, i32 0, i32 0
  %12 = bitcast [4 x i8]* %11 to i32*
  %13 = load i32* %12, align 1
  ret i32 %13
}

declare i64* @_ZN7ap_uintILi32EE5rangeEii(%class.ap_uint.1*, i32, i32)

declare i64* @_ZN7ap_uintILi256EE5rangeEii(%class.ap_uint*, i32, i32)

declare void @_ZN3hls6streamI7ap_uintILi256EEE5writeERKS2_(%"class.hls::stream"*, %class.ap_uint*)

declare i64 @_ZNK7ap_uintILi32EEcvmEv(%class.ap_uint.1*)

declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture, i64, i32, i1) nounwind

declare void @_ZN3hls6streamI7ap_uintILi8EEEC1Ev(%"class.hls::stream.2"*)

declare void @_ZN3hls6streamI7ap_uintILi576EEEC1Ev(%"class.hls::stream.3"*)

declare void @_ZN3hls6streamI7ap_uintILi32EEEC1Ev(%"class.hls::stream.5"*)

declare void @_ZN3hls6streamI7ap_uintILi8EEE5writeERKS2_(%"class.hls::stream.2"*, %class.ap_uint.0*)

define internal i8 @_ZL38p_ZN2xf18Mat_0_2160_3840_1_4readIEEi_1P21xf_Mat_0_2160_3840_1_i(%struct.xf_Mat_0_2160_3840_1_* %this_, i32 %index) nounwind uwtable {
  %1 = alloca %class.ap_uint.0, align 1
  %2 = alloca %struct.xf_Mat_0_2160_3840_1_*, align 8
  %3 = alloca i32, align 4
  store %struct.xf_Mat_0_2160_3840_1_* %this_, %struct.xf_Mat_0_2160_3840_1_** %2, align 8
  store i32 %index, i32* %3, align 4
  %4 = load i32* %3, align 4
  %5 = sext i32 %4 to i64
  %6 = load %struct.xf_Mat_0_2160_3840_1_** %2, align 8
  %7 = getelementptr inbounds %struct.xf_Mat_0_2160_3840_1_* %6, i32 0, i32 4
  %8 = getelementptr inbounds [8294400 x %class.ap_uint.0]* %7, i32 0, i64 %5
  %9 = bitcast %class.ap_uint.0* %1 to i8*
  %10 = bitcast %class.ap_uint.0* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 1, i32 1, i1 false)
  %11 = getelementptr %class.ap_uint.0* %1, i32 0, i32 0
  %12 = bitcast [1 x i8]* %11 to i8*
  %13 = load i8* %12, align 1
  ret i8 %13
}

define internal void @_ZL124p_Z19xFHOGReadFromStreamILi2160ELi3840ELi1E7ap_uintILi8EE7ap_uintILi8EEER6streamI7ap_uintILi8EEEP6streamI7ap_uintILi8EEEtt_1RN3hls6streamI7ap_uintILi8EEEEPS3_tt(%"class.hls::stream.2"* %in_stream, %"class.hls::stream.2"* %out_stream, i16 zeroext %height, i16 zeroext %width) uwtable {
  %1 = alloca %"class.hls::stream.2"*, align 8
  %2 = alloca %"class.hls::stream.2"*, align 8
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  store %"class.hls::stream.2"* %in_stream, %"class.hls::stream.2"** %1, align 8
  store %"class.hls::stream.2"* %out_stream, %"class.hls::stream.2"** %2, align 8
  store i16 %height, i16* %3, align 2
  store i16 %width, i16* %4, align 2
  %5 = load %"class.hls::stream.2"** %1, align 8
  %6 = load %"class.hls::stream.2"** %2, align 8
  %7 = load i16* %3, align 2
  %8 = load i16* %4, align 2
  call void @_ZL130p_Z25xFHOGReadFromStreamKernelILi2160ELi3840ELi1E7ap_uintILi8EE7ap_uintILi8EEER6streamI7ap_uintILi8EEEP6streamI7ap_uintILi8EEEtt_1RN3hls6streamI7ap_uintILi8EEEEPS3_tt(%"class.hls::stream.2"* %5, %"class.hls::stream.2"* %6, i16 zeroext %7, i16 zeroext %8)
  ret void
}

define internal void @_ZL146p_Z6xFDHOGILi128ELi64ELi8ELi16ELi16ELi8ELi8ELi9ELi2160ELi3840ELi0ELi2ELi1ELi1ELi45ELi1ELb0EEP6streamI7ap_uintILi8EEER6streamI7ap_uintILi576EEEtt_1PN3hls6streamI7ap_uintILi8EEEERNS0_IS1_ILi576EEEEtt(%"class.hls::stream.2"* %_in_stream, %"class.hls::stream.3"* %_block_stream, i16 zeroext %_height, i16 zeroext %_width) uwtable {
  %1 = alloca %"class.hls::stream.2"*, align 8
  %2 = alloca %"class.hls::stream.3"*, align 8
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  store %"class.hls::stream.2"* %_in_stream, %"class.hls::stream.2"** %1, align 8
  store %"class.hls::stream.3"* %_block_stream, %"class.hls::stream.3"** %2, align 8
  store i16 %_height, i16* %3, align 2
  store i16 %_width, i16* %4, align 2
  %5 = load i16* %4, align 2
  %6 = zext i16 %5 to i32
  %7 = ashr i32 %6, 0
  %8 = trunc i32 %7 to i16
  store i16 %8, i16* %4, align 2
  %9 = load i16* %3, align 2
  %10 = zext i16 %9 to i32
  %11 = icmp sle i32 %10, 2160
  br i1 %11, label %12, label %17

; <label>:12                                      ; preds = %0
  %13 = load i16* %4, align 2
  %14 = zext i16 %13 to i32
  %15 = icmp sle i32 %14, 3840
  br i1 %15, label %16, label %17

; <label>:16                                      ; preds = %12
  br label %19

; <label>:17                                      ; preds = %12, %0
  call void @__assert_fail(i8* getelementptr inbounds ([95 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8]* @.str1, i32 0, i32 0), i32 107, i8* getelementptr inbounds ([255 x i8]* @__PRETTY_FUNCTION__._ZL146p_Z6xFDHOGILi128ELi64ELi8ELi16ELi16ELi8ELi8ELi9ELi2160ELi3840ELi0ELi2ELi1ELi1ELi45ELi1ELb0EEP6streamI7ap_uintILi8EEER6streamI7ap_uintILi576EEEtt_1PN3hls6streamI7ap_uintILi8EEEERNS0_IS1_ILi576EEEEtt, i32 0, i32 0)) noreturn nounwind
  unreachable
                                                  ; No predecessors!
  br label %19

; <label>:19                                      ; preds = %18, %16
  %20 = load %"class.hls::stream.2"** %1, align 8
  %21 = load %"class.hls::stream.3"** %2, align 8
  %22 = load i16* %3, align 2
  %23 = load i16* %4, align 2
  call void @_ZL155p_Z12xFDHOGKernelILi128ELi64ELi8ELi8ELi8ELi9ELi2ELi2ELi2ELi2160ELi3840ELi0ELi2ELi1ELi1ELi45ELi1ELb0EEP6streamI7ap_uintILi8EEER6streamI7ap_uintILi576EEEtt_1PN3hls6streamI7ap_uintILi8EEEERNS0_IS1_ILi576EEEEtt(%"class.hls::stream.2"* %20, %"class.hls::stream.3"* %21, i16 zeroext %22, i16 zeroext %23)
  ret void
}

define internal void @_ZL147p_Z17xFWriteHOGDescNRBILi16ELi16ELi8ELi8ELi9ELi0ELi2160ELi3840ELi2ELi1ELi45E7ap_uintILi32EEER6streamI7ap_uintILi576EEER6streamI7ap_uintILi32EEEtt_1RN3hls6streamI7ap_uintILi576EEEERNS0_IS1_ILi32EEEEtt(%"class.hls::stream.3"* %_block_strm, %"class.hls::stream.5"* %_desc_strm, i16 zeroext %height, i16 zeroext %width) uwtable {
  %1 = alloca %"class.hls::stream.3"*, align 8
  %2 = alloca %"class.hls::stream.5"*, align 8
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %novb = alloca i32, align 4
  %nohb = alloca i32, align 4
  store %"class.hls::stream.3"* %_block_strm, %"class.hls::stream.3"** %1, align 8
  store %"class.hls::stream.5"* %_desc_strm, %"class.hls::stream.5"** %2, align 8
  store i16 %height, i16* %3, align 2
  store i16 %width, i16* %4, align 2
  %5 = load i16* %3, align 2
  %6 = zext i16 %5 to i32
  %7 = sdiv i32 %6, 8
  %8 = sub nsw i32 %7, 1
  store i32 %8, i32* %novb, align 4
  %9 = load i16* %4, align 2
  %10 = zext i16 %9 to i32
  %11 = sdiv i32 %10, 8
  %12 = sub nsw i32 %11, 1
  store i32 %12, i32* %nohb, align 4
  %13 = load %"class.hls::stream.3"** %1, align 8
  %14 = load %"class.hls::stream.5"** %2, align 8
  %15 = load i32* %novb, align 4
  %16 = trunc i32 %15 to i16
  %17 = load i32* %nohb, align 4
  %18 = trunc i32 %17 to i16
  call void @_ZL162p_Z23xFWriteHOGDescKernelNRBILi2160ELi3840ELi2ELi1ELi45E7ap_uintILi32EELi269ELi479ELi32ELi18ELi4ELi128851EER6streamI7ap_uintILi576EEER6streamI7ap_uintILi32EEEtt_1RN3hls6streamI7ap_uintILi576EEEERNS0_IS1_ILi32EEEEtt(%"class.hls::stream.3"* %13, %"class.hls::stream.5"* %14, i16 zeroext %16, i16 zeroext %18)
  ret void
}

define internal void @_ZL54p_ZN2xf18Mat_3_1_2319318_1_5writeIEEi7ap_uintILi32EE_1P21xf_Mat_3_1_2319318_1_i7ap_uintILi32EE(%struct.xf_Mat_3_1_2319318_1_* %this_, i32 %index, i32 %val.coerce) uwtable {
  %1 = alloca %struct.xf_Mat_3_1_2319318_1_*, align 8
  %2 = alloca i32, align 4
  %val = alloca %class.ap_uint.1, align 4
  store %struct.xf_Mat_3_1_2319318_1_* %this_, %struct.xf_Mat_3_1_2319318_1_** %1, align 8
  store i32 %index, i32* %2, align 4
  %3 = getelementptr %class.ap_uint.1* %val, i32 0, i32 0
  %4 = bitcast [4 x i8]* %3 to i32*
  store i32 %val.coerce, i32* %4, align 1
  %5 = load i32* %2, align 4
  %6 = sext i32 %5 to i64
  %7 = load %struct.xf_Mat_3_1_2319318_1_** %1, align 8
  %8 = getelementptr inbounds %struct.xf_Mat_3_1_2319318_1_* %7, i32 0, i32 4
  %9 = getelementptr inbounds [2319318 x %class.ap_uint.1]* %8, i32 0, i64 %6
  %10 = call %class.ap_uint.1* @_ZN7ap_uintILi32EEaSERKS0_(%class.ap_uint.1* %9, %class.ap_uint.1* %val)
  ret void
}

declare i32 @_ZN3hls6streamI7ap_uintILi32EEE4readEv(%"class.hls::stream.5"*)

define internal void @_ZL162p_Z23xFWriteHOGDescKernelNRBILi2160ELi3840ELi2ELi1ELi45E7ap_uintILi32EELi269ELi479ELi32ELi18ELi4ELi128851EER6streamI7ap_uintILi576EEER6streamI7ap_uintILi32EEEtt_1RN3hls6streamI7ap_uintILi576EEEERNS0_IS1_ILi32EEEEtt(%"class.hls::stream.3"* %_block_strm, %"class.hls::stream.5"* %_desc_strm, i16 zeroext %novb, i16 zeroext %nohb) uwtable {
  %1 = alloca %"class.hls::stream.3"*, align 8
  %2 = alloca %"class.hls::stream.5"*, align 8
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %block_data = alloca %class.ap_uint.4, align 1
  %block_descriptor = alloca %class.ap_uint.1, align 1
  %offset = alloca i32, align 4
  %step = alloca i8, align 1
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca %class.ap_uint.0, align 1
  %5 = alloca %class.ap_uint.4, align 1
  %6 = alloca %class.ap_uint.0, align 1
  %7 = alloca %class.ap_uint.0, align 1
  store %"class.hls::stream.3"* %_block_strm, %"class.hls::stream.3"** %1, align 8
  store %"class.hls::stream.5"* %_desc_strm, %"class.hls::stream.5"** %2, align 8
  store i16 %novb, i16* %3, align 2
  store i16 %nohb, i16* %4, align 2
  call void @_ZN7ap_uintILi576EEC1Ev(%class.ap_uint.4* %block_data)
  call void @_ZN7ap_uintILi32EEC1Ev(%class.ap_uint.1* %block_descriptor)
  store i32 0, i32* %offset, align 4
  store i8 32, i8* %step, align 1
  store i32 0, i32* %k, align 4
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %j)
  br label %8

; <label>:8                                       ; preds = %0
  store i32 0, i32* %i, align 4
  br label %9

; <label>:9                                       ; preds = %49, %8
  %10 = load i32* %i, align 4
  %11 = load i16* %3, align 2
  %12 = zext i16 %11 to i32
  %13 = load i16* %4, align 2
  %14 = zext i16 %13 to i32
  %15 = mul nsw i32 %12, %14
  %16 = icmp slt i32 %10, %15
  br i1 %16, label %17, label %52

; <label>:17                                      ; preds = %9
  %18 = load %"class.hls::stream.3"** %1, align 8
  call void @_ZN3hls6streamI7ap_uintILi576EEE4readEv(%class.ap_uint.4* sret %5, %"class.hls::stream.3"* %18)
  %19 = call %class.ap_uint.4* @_ZN7ap_uintILi576EEaSERKS0_(%class.ap_uint.4* %block_data, %class.ap_uint.4* %5)
  store i32 0, i32* %offset, align 4
  br label %20

; <label>:20                                      ; preds = %17
  %21 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %j, i32 0)
  br label %22

; <label>:22                                      ; preds = %44, %20
  %23 = bitcast %class.ap_uint.0* %6 to i8*
  %24 = bitcast %class.ap_uint.0* %j to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 1, i32 1, i1 false)
  %25 = getelementptr %class.ap_uint.0* %6, i32 0, i32 0
  %26 = bitcast [1 x i8]* %25 to i8*
  %27 = load i8* %26, align 1
  %28 = call zeroext i1 @_ZltILi8EEb7ap_uintIXT_EEi(i8 %27, i32 18)
  br i1 %28, label %29, label %48

; <label>:29                                      ; preds = %22
  %30 = load i32* %offset, align 4
  %31 = load i8* %step, align 1
  %32 = zext i8 %31 to i32
  %33 = sub nsw i32 %32, 1
  %34 = add i32 %30, %33
  %35 = load i32* %offset, align 4
  %36 = call i64* @_ZN7ap_uintILi576EE5rangeEii(%class.ap_uint.4* %block_data, i32 %34, i32 %35)
  %37 = load i64* %36
  %38 = call %class.ap_uint.1* @_ZN7ap_uintILi32EEaSEm(%class.ap_uint.1* %block_descriptor, i64 %37)
  %39 = load %"class.hls::stream.5"** %2, align 8
  call void @_ZN3hls6streamI7ap_uintILi32EEE5writeERKS2_(%"class.hls::stream.5"* %39, %class.ap_uint.1* %block_descriptor)
  %40 = load i8* %step, align 1
  %41 = zext i8 %40 to i32
  %42 = load i32* %offset, align 4
  %43 = add i32 %42, %41
  store i32 %43, i32* %offset, align 4
  br label %44

; <label>:44                                      ; preds = %29
  %45 = call i8 @_ZN7ap_uintILi8EEppEi(%class.ap_uint.0* %j, i32 0)
  %46 = getelementptr %class.ap_uint.0* %7, i32 0, i32 0
  %47 = bitcast [1 x i8]* %46 to i8*
  store i8 %45, i8* %47, align 1
  br label %22

; <label>:48                                      ; preds = %22
  br label %49

; <label>:49                                      ; preds = %48
  %50 = load i32* %i, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %i, align 4
  br label %9

; <label>:52                                      ; preds = %9
  ret void
}

declare void @_ZN7ap_uintILi576EEC1Ev(%class.ap_uint.4*)

declare void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0*)

declare %class.ap_uint.4* @_ZN7ap_uintILi576EEaSERKS0_(%class.ap_uint.4*, %class.ap_uint.4*)

declare void @_ZN3hls6streamI7ap_uintILi576EEE4readEv(%class.ap_uint.4* sret, %"class.hls::stream.3"*)

declare %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0*, i32)

declare zeroext i1 @_ZltILi8EEb7ap_uintIXT_EEi(i8, i32)

declare %class.ap_uint.1* @_ZN7ap_uintILi32EEaSEm(%class.ap_uint.1*, i64)

declare i64* @_ZN7ap_uintILi576EE5rangeEii(%class.ap_uint.4*, i32, i32)

declare void @_ZN3hls6streamI7ap_uintILi32EEE5writeERKS2_(%"class.hls::stream.5"*, %class.ap_uint.1*)

declare i8 @_ZN7ap_uintILi8EEppEi(%class.ap_uint.0*, i32)

declare void @__assert_fail(i8*, i8*, i32, i8*) noreturn nounwind

define internal void @_ZL155p_Z12xFDHOGKernelILi128ELi64ELi8ELi8ELi8ELi9ELi2ELi2ELi2ELi2160ELi3840ELi0ELi2ELi1ELi1ELi45ELi1ELb0EEP6streamI7ap_uintILi8EEER6streamI7ap_uintILi576EEEtt_1PN3hls6streamI7ap_uintILi8EEEERNS0_IS1_ILi576EEEEtt(%"class.hls::stream.2"* %_in_stream, %"class.hls::stream.3"* %_block_stream, i16 zeroext %_height, i16 zeroext %_width) uwtable {
  %1 = alloca %"class.hls::stream.2"*, align 8
  %2 = alloca %"class.hls::stream.3"*, align 8
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %grad_x_stream = alloca %"class.hls::stream.6", align 1
  %grad_y_stream = alloca %"class.hls::stream.6", align 1
  %phase_stream = alloca %"class.hls::stream.8", align 1
  %mag_stream = alloca %"class.hls::stream.8", align 1
  store %"class.hls::stream.2"* %_in_stream, %"class.hls::stream.2"** %1, align 8
  store %"class.hls::stream.3"* %_block_stream, %"class.hls::stream.3"** %2, align 8
  store i16 %_height, i16* %3, align 2
  store i16 %_width, i16* %4, align 2
  call void @_ZN3hls6streamI7ap_uintILi9EEEC1Ev(%"class.hls::stream.6"* %grad_x_stream)
  call void @_ZN3hls6streamI7ap_uintILi9EEEC1Ev(%"class.hls::stream.6"* %grad_y_stream)
  call void @_ZN3hls6streamI7ap_uintILi16EEEC1EPKc(%"class.hls::stream.8"* %phase_stream, i8* getelementptr inbounds ([13 x i8]* @.str2, i32 0, i32 0))
  call void @_ZN3hls6streamI7ap_uintILi16EEEC1EPKc(%"class.hls::stream.8"* %mag_stream, i8* getelementptr inbounds ([11 x i8]* @.str3, i32 0, i32 0))
  %5 = load %"class.hls::stream.2"** %1, align 8
  %6 = load i16* %3, align 2
  %7 = load i16* %4, align 2
  call void @_ZL141p_Z14xFHOGgradientsILi2160ELi3840ELi0ELi13ELi1ELi1ELi2ELi1ELb0EEP6streamI7ap_uintILi8EEER6streamI7ap_uintILi9EEER6streamI7ap_uintILi9EEEitt_1PN3hls6streamI7ap_uintILi8EEEERNS0_IS1_ILi9EEEES7_itt(%"class.hls::stream.2"* %5, %"class.hls::stream.6"* %grad_x_stream, %"class.hls::stream.6"* %grad_y_stream, i32 0, i16 zeroext %6, i16 zeroext %7)
  %8 = load i16* %3, align 2
  %9 = load i16* %4, align 2
  call void @_ZL163p_Z19xFHOGPhaseMagnitudeILi2160ELi3840ELi13ELi2ELi1ELi2ELi5EER6streamI7ap_uintILi9EEER6streamI7ap_uintILi9EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEEtt_1RN3hls6streamI7ap_uintILi9EEEES4_RNS0_IS1_ILi16EEEES7_tt(%"class.hls::stream.6"* %grad_x_stream, %"class.hls::stream.6"* %grad_y_stream, %"class.hls::stream.8"* %phase_stream, %"class.hls::stream.8"* %mag_stream, i16 zeroext %8, i16 zeroext %9)
  %10 = load %"class.hls::stream.3"** %2, align 8
  %11 = load i16* %3, align 2
  %12 = load i16* %4, align 2
  call void @_ZL177p_Z16xFDHOGDescriptorILi128ELi64ELi8ELi8ELi8ELi9ELi2ELi2ELi2160ELi3840ELi2ELi2ELi1ELi5ELi45ELb0EER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi576EEEtt_1RN3hls6streamI7ap_uintILi16EEEES4_RNS0_IS1_ILi576EEEEtt(%"class.hls::stream.8"* %phase_stream, %"class.hls::stream.8"* %mag_stream, %"class.hls::stream.3"* %10, i16 zeroext %11, i16 zeroext %12)
  ret void
}

declare void @_ZN3hls6streamI7ap_uintILi9EEEC1Ev(%"class.hls::stream.6"*)

declare void @_ZN3hls6streamI7ap_uintILi16EEEC1EPKc(%"class.hls::stream.8"*, i8*)

define internal void @_ZL141p_Z14xFHOGgradientsILi2160ELi3840ELi0ELi13ELi1ELi1ELi2ELi1ELb0EEP6streamI7ap_uintILi8EEER6streamI7ap_uintILi9EEER6streamI7ap_uintILi9EEEitt_1PN3hls6streamI7ap_uintILi8EEEERNS0_IS1_ILi9EEEES7_itt(%"class.hls::stream.2"* %_src, %"class.hls::stream.6"* %_gradx, %"class.hls::stream.6"* %_grady, i32 %_border_type, i16 zeroext %_height, i16 zeroext %_width) uwtable {
  %1 = alloca %"class.hls::stream.2"*, align 8
  %2 = alloca %"class.hls::stream.6"*, align 8
  %3 = alloca %"class.hls::stream.6"*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  store %"class.hls::stream.2"* %_src, %"class.hls::stream.2"** %1, align 8
  store %"class.hls::stream.6"* %_gradx, %"class.hls::stream.6"** %2, align 8
  store %"class.hls::stream.6"* %_grady, %"class.hls::stream.6"** %3, align 8
  store i32 %_border_type, i32* %4, align 4
  store i16 %_height, i16* %5, align 2
  store i16 %_width, i16* %6, align 2
  %7 = load i32* %4, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

; <label>:9                                       ; preds = %0
  br label %12

; <label>:10                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([82 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8]* @.str13, i32 0, i32 0), i32 505, i8* getelementptr inbounds ([289 x i8]* @__PRETTY_FUNCTION__._ZL141p_Z14xFHOGgradientsILi2160ELi3840ELi0ELi13ELi1ELi1ELi2ELi1ELb0EEP6streamI7ap_uintILi8EEER6streamI7ap_uintILi9EEER6streamI7ap_uintILi9EEEitt_1PN3hls6streamI7ap_uintILi8EEEERNS0_IS1_ILi9EEEES7_itt, i32 0, i32 0)) noreturn nounwind
  unreachable
                                                  ; No predecessors!
  br label %12

; <label>:12                                      ; preds = %11, %9
  %13 = load %"class.hls::stream.2"** %1, align 8
  %14 = load %"class.hls::stream.6"** %2, align 8
  %15 = load %"class.hls::stream.6"** %3, align 8
  %16 = load i16* %5, align 2
  %17 = load i16* %6, align 2
  call void @_ZL157p_Z20xFHOGgradientsKernelILi2160ELi3840ELi0ELi13ELi1ELi1ELi2ELi1ELi3840ELi1ELb0EEP6streamI7ap_uintILi8EEER6streamI7ap_uintILi9EEER6streamI7ap_uintILi9EEEtt_1PN3hls6streamI7ap_uintILi8EEEERNS0_IS1_ILi9EEEES7_tt(%"class.hls::stream.2"* %13, %"class.hls::stream.6"* %14, %"class.hls::stream.6"* %15, i16 zeroext %16, i16 zeroext %17)
  ret void
}

define internal void @_ZL163p_Z19xFHOGPhaseMagnitudeILi2160ELi3840ELi13ELi2ELi1ELi2ELi5EER6streamI7ap_uintILi9EEER6streamI7ap_uintILi9EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEEtt_1RN3hls6streamI7ap_uintILi9EEEES4_RNS0_IS1_ILi16EEEES7_tt(%"class.hls::stream.6"* %_grad_x, %"class.hls::stream.6"* %_grad_y, %"class.hls::stream.8"* %_phase_stream, %"class.hls::stream.8"* %_mag_stream, i16 zeroext %height, i16 zeroext %width) uwtable {
  %1 = alloca %"class.hls::stream.6"*, align 8
  %2 = alloca %"class.hls::stream.6"*, align 8
  %3 = alloca %"class.hls::stream.8"*, align 8
  %4 = alloca %"class.hls::stream.8"*, align 8
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  store %"class.hls::stream.6"* %_grad_x, %"class.hls::stream.6"** %1, align 8
  store %"class.hls::stream.6"* %_grad_y, %"class.hls::stream.6"** %2, align 8
  store %"class.hls::stream.8"* %_phase_stream, %"class.hls::stream.8"** %3, align 8
  store %"class.hls::stream.8"* %_mag_stream, %"class.hls::stream.8"** %4, align 8
  store i16 %height, i16* %5, align 2
  store i16 %width, i16* %6, align 2
  %7 = load %"class.hls::stream.6"** %1, align 8
  %8 = load %"class.hls::stream.6"** %2, align 8
  %9 = load %"class.hls::stream.8"** %3, align 8
  %10 = load %"class.hls::stream.8"** %4, align 8
  %11 = load i16* %5, align 2
  %12 = load i16* %6, align 2
  call void @_ZL176p_Z25xFHOGPhaseMagnitudeKernelILi2160ELi3840ELi13ELi2ELi1ELi2ELi5ELi3840EER6streamI7ap_uintILi9EEER6streamI7ap_uintILi9EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEEtt_1RN3hls6streamI7ap_uintILi9EEEES4_RNS0_IS1_ILi16EEEES7_tt(%"class.hls::stream.6"* %7, %"class.hls::stream.6"* %8, %"class.hls::stream.8"* %9, %"class.hls::stream.8"* %10, i16 zeroext %11, i16 zeroext %12)
  ret void
}

define internal void @_ZL177p_Z16xFDHOGDescriptorILi128ELi64ELi8ELi8ELi8ELi9ELi2ELi2ELi2160ELi3840ELi2ELi2ELi1ELi5ELi45ELb0EER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi576EEEtt_1RN3hls6streamI7ap_uintILi16EEEES4_RNS0_IS1_ILi576EEEEtt(%"class.hls::stream.8"* %_phase_strm, %"class.hls::stream.8"* %_mag_strm, %"class.hls::stream.3"* %_block_strm, i16 zeroext %_height, i16 zeroext %_width) uwtable {
  %1 = alloca %"class.hls::stream.8"*, align 8
  %2 = alloca %"class.hls::stream.8"*, align 8
  %3 = alloca %"class.hls::stream.3"*, align 8
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %novw = alloca i16, align 2
  %nohw = alloca i16, align 2
  %novc = alloca i16, align 2
  %nohc = alloca i16, align 2
  %novb = alloca i16, align 2
  %nohb = alloca i16, align 2
  store %"class.hls::stream.8"* %_phase_strm, %"class.hls::stream.8"** %1, align 8
  store %"class.hls::stream.8"* %_mag_strm, %"class.hls::stream.8"** %2, align 8
  store %"class.hls::stream.3"* %_block_strm, %"class.hls::stream.3"** %3, align 8
  store i16 %_height, i16* %4, align 2
  store i16 %_width, i16* %5, align 2
  %6 = load i16* %4, align 2
  %7 = zext i16 %6 to i32
  %8 = srem i32 %7, 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

; <label>:10                                      ; preds = %0
  br label %13

; <label>:11                                      ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([81 x i8]* @.str4, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8]* @.str5, i32 0, i32 0), i32 213, i8* getelementptr inbounds ([321 x i8]* @__PRETTY_FUNCTION__._ZL177p_Z16xFDHOGDescriptorILi128ELi64ELi8ELi8ELi8ELi9ELi2ELi2ELi2160ELi3840ELi2ELi2ELi1ELi5ELi45ELb0EER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi576EEEtt_1RN3hls6streamI7ap_uintILi16EEEES4_RNS0_IS1_ILi576EEEEtt, i32 0, i32 0)) noreturn nounwind
  unreachable
                                                  ; No predecessors!
  br label %13

; <label>:13                                      ; preds = %12, %10
  %14 = load i16* %5, align 2
  %15 = zext i16 %14 to i32
  %16 = srem i32 %15, 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

; <label>:18                                      ; preds = %13
  br label %21

; <label>:19                                      ; preds = %13
  call void @__assert_fail(i8* getelementptr inbounds ([77 x i8]* @.str6, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8]* @.str5, i32 0, i32 0), i32 215, i8* getelementptr inbounds ([321 x i8]* @__PRETTY_FUNCTION__._ZL177p_Z16xFDHOGDescriptorILi128ELi64ELi8ELi8ELi8ELi9ELi2ELi2ELi2160ELi3840ELi2ELi2ELi1ELi5ELi45ELb0EER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi576EEEtt_1RN3hls6streamI7ap_uintILi16EEEES4_RNS0_IS1_ILi576EEEEtt, i32 0, i32 0)) noreturn nounwind
  unreachable
                                                  ; No predecessors!
  br label %21

; <label>:21                                      ; preds = %20, %18
  %22 = load i16* %4, align 2
  %23 = zext i16 %22 to i32
  %24 = sub nsw i32 %23, 128
  %25 = sdiv i32 %24, 8
  %26 = add nsw i32 %25, 1
  %27 = trunc i32 %26 to i16
  store i16 %27, i16* %novw, align 2
  %28 = load i16* %5, align 2
  %29 = zext i16 %28 to i32
  %30 = sub nsw i32 %29, 64
  %31 = sdiv i32 %30, 8
  %32 = add nsw i32 %31, 1
  %33 = trunc i32 %32 to i16
  store i16 %33, i16* %nohw, align 2
  %34 = load i16* %4, align 2
  %35 = zext i16 %34 to i32
  %36 = sdiv i32 %35, 8
  %37 = trunc i32 %36 to i16
  store i16 %37, i16* %novc, align 2
  %38 = load i16* %5, align 2
  %39 = zext i16 %38 to i32
  %40 = sdiv i32 %39, 8
  %41 = trunc i32 %40 to i16
  store i16 %41, i16* %nohc, align 2
  %42 = load i16* %4, align 2
  %43 = zext i16 %42 to i32
  %44 = sdiv i32 %43, 8
  %45 = sub nsw i32 %44, 1
  %46 = trunc i32 %45 to i16
  store i16 %46, i16* %novb, align 2
  %47 = load i16* %5, align 2
  %48 = zext i16 %47 to i32
  %49 = sdiv i32 %48, 8
  %50 = sub nsw i32 %49, 1
  %51 = trunc i32 %50 to i16
  store i16 %51, i16* %nohb, align 2
  %52 = load %"class.hls::stream.8"** %1, align 8
  %53 = load %"class.hls::stream.8"** %2, align 8
  %54 = load %"class.hls::stream.3"** %3, align 8
  %55 = load i16* %4, align 2
  %56 = load i16* %5, align 2
  %57 = load i16* %novw, align 2
  %58 = load i16* %nohw, align 2
  %59 = load i16* %novc, align 2
  %60 = load i16* %nohc, align 2
  %61 = load i16* %novb, align 2
  %62 = load i16* %nohb, align 2
  call void @_ZL230p_Z22xFDHOGDescriptorKernelILi2160ELi3840ELi2ELi2ELi1ELi5ELi45ELi128ELi64ELi8ELi8ELi8ELi9ELi2ELi2ELi255ELi473ELi270ELi480ELi269ELi479ELi20ELb0EER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi576EEEtttttttt_1RN3hls6streamI7ap_uintILi16EEEES4_RNS0_IS1_ILi576EEEEtttttttt(%"class.hls::stream.8"* %52, %"class.hls::stream.8"* %53, %"class.hls::stream.3"* %54, i16 zeroext %55, i16 zeroext %56, i16 zeroext %57, i16 zeroext %58, i16 zeroext %59, i16 zeroext %60, i16 zeroext %61, i16 zeroext %62)
  ret void
}

define internal void @_ZL230p_Z22xFDHOGDescriptorKernelILi2160ELi3840ELi2ELi2ELi1ELi5ELi45ELi128ELi64ELi8ELi8ELi8ELi9ELi2ELi2ELi255ELi473ELi270ELi480ELi269ELi479ELi20ELb0EER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi576EEEtttttttt_1RN3hls6streamI7ap_uintILi16EEEES4_RNS0_IS1_ILi576EEEEtttttttt(%"class.hls::stream.8"* %_phase_strm, %"class.hls::stream.8"* %_mag_strm, %"class.hls::stream.3"* %_block_strm, i16 zeroext %_height, i16 zeroext %_width, i16 zeroext %novw, i16 zeroext %nohw, i16 zeroext %novc, i16 zeroext %nohc, i16 zeroext %novb, i16 zeroext %nohb) uwtable {
  %1 = alloca %"class.hls::stream.8"*, align 8
  %2 = alloca %"class.hls::stream.8"*, align 8
  %3 = alloca %"class.hls::stream.3"*, align 8
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca i16, align 2
  %HA_1 = alloca [480 x [9 x %class.ap_uint.10]], align 16
  %HA_2 = alloca [480 x [9 x %class.ap_uint.10]], align 16
  %HA_3 = alloca [480 x [9 x %class.ap_uint.10]], align 16
  %ssv_1 = alloca [480 x %class.ap_uint.11], align 16
  %ssv_2 = alloca [480 x %class.ap_uint.11], align 16
  %ssv_3 = alloca [480 x %class.ap_uint.11], align 16
  %bin_center = alloca [9 x i16], align 16
  %offset = alloca i16, align 2
  %bi = alloca i16, align 2
  %_s_i = alloca i32, align 4
  %_l_i = alloca i8, align 1
  %idx = alloca %class.ap_uint.12, align 1
  %12 = alloca %class.ap_uint.12, align 1
  %13 = alloca %class.ap_uint.12, align 1
  %14 = alloca %class.ap_uint.12, align 1
  %15 = alloca %class.ap_uint.12, align 1
  store %"class.hls::stream.8"* %_phase_strm, %"class.hls::stream.8"** %1, align 8
  store %"class.hls::stream.8"* %_mag_strm, %"class.hls::stream.8"** %2, align 8
  store %"class.hls::stream.3"* %_block_strm, %"class.hls::stream.3"** %3, align 8
  store i16 %_height, i16* %4, align 2
  store i16 %_width, i16* %5, align 2
  store i16 %novw, i16* %6, align 2
  store i16 %nohw, i16* %7, align 2
  store i16 %novc, i16* %8, align 2
  store i16 %nohc, i16* %9, align 2
  store i16 %novb, i16* %10, align 2
  store i16 %nohb, i16* %11, align 2
  %16 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_1, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %class.ap_uint.10* %16, i64 4320
  br label %18

; <label>:18                                      ; preds = %18, %0
  %19 = phi %class.ap_uint.10* [ %16, %0 ], [ %20, %18 ]
  call void @_ZN7ap_uintILi25EEC1Ev(%class.ap_uint.10* %19)
  %20 = getelementptr inbounds %class.ap_uint.10* %19, i64 1
  %21 = icmp eq %class.ap_uint.10* %20, %17
  br i1 %21, label %22, label %18

; <label>:22                                      ; preds = %18
  %23 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_2, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %class.ap_uint.10* %23, i64 4320
  br label %25

; <label>:25                                      ; preds = %25, %22
  %26 = phi %class.ap_uint.10* [ %23, %22 ], [ %27, %25 ]
  call void @_ZN7ap_uintILi25EEC1Ev(%class.ap_uint.10* %26)
  %27 = getelementptr inbounds %class.ap_uint.10* %26, i64 1
  %28 = icmp eq %class.ap_uint.10* %27, %24
  br i1 %28, label %29, label %25

; <label>:29                                      ; preds = %25
  %30 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_3, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %class.ap_uint.10* %30, i64 4320
  br label %32

; <label>:32                                      ; preds = %32, %29
  %33 = phi %class.ap_uint.10* [ %30, %29 ], [ %34, %32 ]
  call void @_ZN7ap_uintILi25EEC1Ev(%class.ap_uint.10* %33)
  %34 = getelementptr inbounds %class.ap_uint.10* %33, i64 1
  %35 = icmp eq %class.ap_uint.10* %34, %31
  br i1 %35, label %36, label %32

; <label>:36                                      ; preds = %32
  %37 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_1, i32 0, i32 0
  %38 = getelementptr inbounds %class.ap_uint.11* %37, i64 480
  br label %39

; <label>:39                                      ; preds = %39, %36
  %40 = phi %class.ap_uint.11* [ %37, %36 ], [ %41, %39 ]
  call void @_ZN7ap_uintILi48EEC1Ev(%class.ap_uint.11* %40)
  %41 = getelementptr inbounds %class.ap_uint.11* %40, i64 1
  %42 = icmp eq %class.ap_uint.11* %41, %38
  br i1 %42, label %43, label %39

; <label>:43                                      ; preds = %39
  %44 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_2, i32 0, i32 0
  %45 = getelementptr inbounds %class.ap_uint.11* %44, i64 480
  br label %46

; <label>:46                                      ; preds = %46, %43
  %47 = phi %class.ap_uint.11* [ %44, %43 ], [ %48, %46 ]
  call void @_ZN7ap_uintILi48EEC1Ev(%class.ap_uint.11* %47)
  %48 = getelementptr inbounds %class.ap_uint.11* %47, i64 1
  %49 = icmp eq %class.ap_uint.11* %48, %45
  br i1 %49, label %50, label %46

; <label>:50                                      ; preds = %46
  %51 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_3, i32 0, i32 0
  %52 = getelementptr inbounds %class.ap_uint.11* %51, i64 480
  br label %53

; <label>:53                                      ; preds = %53, %50
  %54 = phi %class.ap_uint.11* [ %51, %50 ], [ %55, %53 ]
  call void @_ZN7ap_uintILi48EEC1Ev(%class.ap_uint.11* %54)
  %55 = getelementptr inbounds %class.ap_uint.11* %54, i64 1
  %56 = icmp eq %class.ap_uint.11* %55, %52
  br i1 %56, label %57, label %53

; <label>:57                                      ; preds = %53
  store i16 1280, i16* %offset, align 2
  store i16 0, i16* %bi, align 2
  store i32 0, i32* %_s_i, align 4
  store i8 0, i8* %_l_i, align 1
  store i32 0, i32* %_s_i, align 4
  br label %58

; <label>:58                                      ; preds = %70, %57
  %59 = load i32* %_s_i, align 4
  %60 = icmp sle i32 %59, 8
  br i1 %60, label %61, label %73

; <label>:61                                      ; preds = %58
  %62 = load i16* %offset, align 2
  %63 = load i32* %_s_i, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [9 x i16]* %bin_center, i32 0, i64 %64
  store i16 %62, i16* %65, align 2
  %66 = load i16* %offset, align 2
  %67 = zext i16 %66 to i32
  %68 = add nsw i32 %67, 2560
  %69 = trunc i32 %68 to i16
  store i16 %69, i16* %offset, align 2
  br label %70

; <label>:70                                      ; preds = %61
  %71 = load i32* %_s_i, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %_s_i, align 4
  br label %58

; <label>:73                                      ; preds = %58
  call void @_ZN7ap_uintILi2EEC1Ev(%class.ap_uint.12* %idx)
  %74 = load %"class.hls::stream.8"** %1, align 8
  %75 = load %"class.hls::stream.8"** %2, align 8
  %76 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_1, i32 0, i32 0
  %77 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_1, i32 0, i32 0
  %78 = getelementptr inbounds [9 x i16]* %bin_center, i32 0, i32 0
  %79 = load i16* %9, align 2
  call void @_ZL204p_Z17xFDHOGcomputeHistILi2160ELi3840ELi2ELi1ELi5ELi8ELi8ELi480ELi3840ELi8ELi20ELi9E7ap_uintILi25EE7ap_uintILi48EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEEPA9_7ap_uintILi25EEP7ap_uintILi48EEPtt_1RN3hls6streamI7ap_uintILi16EEEES4_PA9_S1_ILi25EEPS1_ILi48EEPtt(%"class.hls::stream.8"* %74, %"class.hls::stream.8"* %75, [9 x %class.ap_uint.10]* %76, %class.ap_uint.11* %77, i16* %78, i16 zeroext %79)
  %80 = load %"class.hls::stream.8"** %1, align 8
  %81 = load %"class.hls::stream.8"** %2, align 8
  %82 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_2, i32 0, i32 0
  %83 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_2, i32 0, i32 0
  %84 = getelementptr inbounds [9 x i16]* %bin_center, i32 0, i32 0
  %85 = load i16* %9, align 2
  call void @_ZL204p_Z17xFDHOGcomputeHistILi2160ELi3840ELi2ELi1ELi5ELi8ELi8ELi480ELi3840ELi8ELi20ELi9E7ap_uintILi25EE7ap_uintILi48EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEEPA9_7ap_uintILi25EEP7ap_uintILi48EEPtt_1RN3hls6streamI7ap_uintILi16EEEES4_PA9_S1_ILi25EEPS1_ILi48EEPtt(%"class.hls::stream.8"* %80, %"class.hls::stream.8"* %81, [9 x %class.ap_uint.10]* %82, %class.ap_uint.11* %83, i16* %84, i16 zeroext %85)
  %86 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %idx, i32 2)
  br label %87

; <label>:87                                      ; preds = %73
  store i16 0, i16* %bi, align 2
  br label %88

; <label>:88                                      ; preds = %159, %87
  %89 = load i16* %bi, align 2
  %90 = zext i16 %89 to i32
  %91 = load i16* %10, align 2
  %92 = zext i16 %91 to i32
  %93 = sub nsw i32 %92, 1
  %94 = icmp slt i32 %90, %93
  br i1 %94, label %95, label %162

; <label>:95                                      ; preds = %88
  %96 = bitcast %class.ap_uint.12* %12 to i8*
  %97 = bitcast %class.ap_uint.12* %idx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %97, i64 1, i32 1, i1 false)
  %98 = getelementptr %class.ap_uint.12* %12, i32 0, i32 0
  %99 = bitcast [1 x i8]* %98 to i8*
  %100 = load i8* %99, align 1
  %101 = call zeroext i1 @_ZeqILi2EEb7ap_uintIXT_EEi(i8 %100, i32 2)
  br i1 %101, label %102, label %118

; <label>:102                                     ; preds = %95
  %103 = load %"class.hls::stream.8"** %1, align 8
  %104 = load %"class.hls::stream.8"** %2, align 8
  %105 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_3, i32 0, i32 0
  %106 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_3, i32 0, i32 0
  %107 = getelementptr inbounds [9 x i16]* %bin_center, i32 0, i32 0
  %108 = load i16* %9, align 2
  call void @_ZL204p_Z17xFDHOGcomputeHistILi2160ELi3840ELi2ELi1ELi5ELi8ELi8ELi480ELi3840ELi8ELi20ELi9E7ap_uintILi25EE7ap_uintILi48EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEEPA9_7ap_uintILi25EEP7ap_uintILi48EEPtt_1RN3hls6streamI7ap_uintILi16EEEES4_PA9_S1_ILi25EEPS1_ILi48EEPtt(%"class.hls::stream.8"* %103, %"class.hls::stream.8"* %104, [9 x %class.ap_uint.10]* %105, %class.ap_uint.11* %106, i16* %107, i16 zeroext %108)
  %109 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_1, i32 0, i32 0
  %110 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_2, i32 0, i32 0
  %111 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_1, i32 0, i32 0
  %112 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_2, i32 0, i32 0
  %113 = load %"class.hls::stream.3"** %3, align 8
  %114 = load i16* %bi, align 2
  %115 = load i16* %11, align 2
  %116 = load i16* %9, align 2
  call void @_ZL240p_Z15xFDHOGNormalizeILi2160ELi3840ELi2ELi1ELi45ELi480ELi2ELi2ELi473ELi255ELi36ELi128ELi64ELi8ELi8ELi479ELi9E7ap_uintILi25EE7ap_uintILi48EEEPA9_7ap_uintILi25EEPA9_7ap_uintILi25EEP7ap_uintILi48EEP7ap_uintILi48EER6streamI7ap_uintILi576EEEttt_1PA9_7ap_uintILi25EES2_PS_ILi48EES4_RN3hls6streamIS_ILi576EEEEttt([9 x %class.ap_uint.10]* %109, [9 x %class.ap_uint.10]* %110, %class.ap_uint.11* %111, %class.ap_uint.11* %112, %"class.hls::stream.3"* %113, i16 zeroext %114, i16 zeroext %115, i16 zeroext %116)
  %117 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %idx, i32 0)
  br label %158

; <label>:118                                     ; preds = %95
  %119 = bitcast %class.ap_uint.12* %13 to i8*
  %120 = bitcast %class.ap_uint.12* %idx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %119, i8* %120, i64 1, i32 1, i1 false)
  %121 = getelementptr %class.ap_uint.12* %13, i32 0, i32 0
  %122 = bitcast [1 x i8]* %121 to i8*
  %123 = load i8* %122, align 1
  %124 = call zeroext i1 @_ZeqILi2EEb7ap_uintIXT_EEi(i8 %123, i32 0)
  br i1 %124, label %125, label %141

; <label>:125                                     ; preds = %118
  %126 = load %"class.hls::stream.8"** %1, align 8
  %127 = load %"class.hls::stream.8"** %2, align 8
  %128 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_1, i32 0, i32 0
  %129 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_1, i32 0, i32 0
  %130 = getelementptr inbounds [9 x i16]* %bin_center, i32 0, i32 0
  %131 = load i16* %9, align 2
  call void @_ZL204p_Z17xFDHOGcomputeHistILi2160ELi3840ELi2ELi1ELi5ELi8ELi8ELi480ELi3840ELi8ELi20ELi9E7ap_uintILi25EE7ap_uintILi48EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEEPA9_7ap_uintILi25EEP7ap_uintILi48EEPtt_1RN3hls6streamI7ap_uintILi16EEEES4_PA9_S1_ILi25EEPS1_ILi48EEPtt(%"class.hls::stream.8"* %126, %"class.hls::stream.8"* %127, [9 x %class.ap_uint.10]* %128, %class.ap_uint.11* %129, i16* %130, i16 zeroext %131)
  %132 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_2, i32 0, i32 0
  %133 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_3, i32 0, i32 0
  %134 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_2, i32 0, i32 0
  %135 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_3, i32 0, i32 0
  %136 = load %"class.hls::stream.3"** %3, align 8
  %137 = load i16* %bi, align 2
  %138 = load i16* %11, align 2
  %139 = load i16* %9, align 2
  call void @_ZL240p_Z15xFDHOGNormalizeILi2160ELi3840ELi2ELi1ELi45ELi480ELi2ELi2ELi473ELi255ELi36ELi128ELi64ELi8ELi8ELi479ELi9E7ap_uintILi25EE7ap_uintILi48EEEPA9_7ap_uintILi25EEPA9_7ap_uintILi25EEP7ap_uintILi48EEP7ap_uintILi48EER6streamI7ap_uintILi576EEEttt_1PA9_7ap_uintILi25EES2_PS_ILi48EES4_RN3hls6streamIS_ILi576EEEEttt([9 x %class.ap_uint.10]* %132, [9 x %class.ap_uint.10]* %133, %class.ap_uint.11* %134, %class.ap_uint.11* %135, %"class.hls::stream.3"* %136, i16 zeroext %137, i16 zeroext %138, i16 zeroext %139)
  %140 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %idx, i32 1)
  br label %157

; <label>:141                                     ; preds = %118
  %142 = load %"class.hls::stream.8"** %1, align 8
  %143 = load %"class.hls::stream.8"** %2, align 8
  %144 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_2, i32 0, i32 0
  %145 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_2, i32 0, i32 0
  %146 = getelementptr inbounds [9 x i16]* %bin_center, i32 0, i32 0
  %147 = load i16* %9, align 2
  call void @_ZL204p_Z17xFDHOGcomputeHistILi2160ELi3840ELi2ELi1ELi5ELi8ELi8ELi480ELi3840ELi8ELi20ELi9E7ap_uintILi25EE7ap_uintILi48EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEEPA9_7ap_uintILi25EEP7ap_uintILi48EEPtt_1RN3hls6streamI7ap_uintILi16EEEES4_PA9_S1_ILi25EEPS1_ILi48EEPtt(%"class.hls::stream.8"* %142, %"class.hls::stream.8"* %143, [9 x %class.ap_uint.10]* %144, %class.ap_uint.11* %145, i16* %146, i16 zeroext %147)
  %148 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_3, i32 0, i32 0
  %149 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_1, i32 0, i32 0
  %150 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_3, i32 0, i32 0
  %151 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_1, i32 0, i32 0
  %152 = load %"class.hls::stream.3"** %3, align 8
  %153 = load i16* %bi, align 2
  %154 = load i16* %11, align 2
  %155 = load i16* %9, align 2
  call void @_ZL240p_Z15xFDHOGNormalizeILi2160ELi3840ELi2ELi1ELi45ELi480ELi2ELi2ELi473ELi255ELi36ELi128ELi64ELi8ELi8ELi479ELi9E7ap_uintILi25EE7ap_uintILi48EEEPA9_7ap_uintILi25EEPA9_7ap_uintILi25EEP7ap_uintILi48EEP7ap_uintILi48EER6streamI7ap_uintILi576EEEttt_1PA9_7ap_uintILi25EES2_PS_ILi48EES4_RN3hls6streamIS_ILi576EEEEttt([9 x %class.ap_uint.10]* %148, [9 x %class.ap_uint.10]* %149, %class.ap_uint.11* %150, %class.ap_uint.11* %151, %"class.hls::stream.3"* %152, i16 zeroext %153, i16 zeroext %154, i16 zeroext %155)
  %156 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %idx, i32 2)
  br label %157

; <label>:157                                     ; preds = %141, %125
  br label %158

; <label>:158                                     ; preds = %157, %102
  br label %159

; <label>:159                                     ; preds = %158
  %160 = load i16* %bi, align 2
  %161 = add i16 %160, 1
  store i16 %161, i16* %bi, align 2
  br label %88

; <label>:162                                     ; preds = %88
  %163 = bitcast %class.ap_uint.12* %14 to i8*
  %164 = bitcast %class.ap_uint.12* %idx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %163, i8* %164, i64 1, i32 1, i1 false)
  %165 = getelementptr %class.ap_uint.12* %14, i32 0, i32 0
  %166 = bitcast [1 x i8]* %165 to i8*
  %167 = load i8* %166, align 1
  %168 = call zeroext i1 @_ZeqILi2EEb7ap_uintIXT_EEi(i8 %167, i32 2)
  br i1 %168, label %169, label %178

; <label>:169                                     ; preds = %162
  %170 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_1, i32 0, i32 0
  %171 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_2, i32 0, i32 0
  %172 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_1, i32 0, i32 0
  %173 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_2, i32 0, i32 0
  %174 = load %"class.hls::stream.3"** %3, align 8
  %175 = load i16* %bi, align 2
  %176 = load i16* %11, align 2
  %177 = load i16* %9, align 2
  call void @_ZL240p_Z15xFDHOGNormalizeILi2160ELi3840ELi2ELi1ELi45ELi480ELi2ELi2ELi473ELi255ELi36ELi128ELi64ELi8ELi8ELi479ELi9E7ap_uintILi25EE7ap_uintILi48EEEPA9_7ap_uintILi25EEPA9_7ap_uintILi25EEP7ap_uintILi48EEP7ap_uintILi48EER6streamI7ap_uintILi576EEEttt_1PA9_7ap_uintILi25EES2_PS_ILi48EES4_RN3hls6streamIS_ILi576EEEEttt([9 x %class.ap_uint.10]* %170, [9 x %class.ap_uint.10]* %171, %class.ap_uint.11* %172, %class.ap_uint.11* %173, %"class.hls::stream.3"* %174, i16 zeroext %175, i16 zeroext %176, i16 zeroext %177)
  br label %204

; <label>:178                                     ; preds = %162
  %179 = bitcast %class.ap_uint.12* %15 to i8*
  %180 = bitcast %class.ap_uint.12* %idx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %179, i8* %180, i64 1, i32 1, i1 false)
  %181 = getelementptr %class.ap_uint.12* %15, i32 0, i32 0
  %182 = bitcast [1 x i8]* %181 to i8*
  %183 = load i8* %182, align 1
  %184 = call zeroext i1 @_ZeqILi2EEb7ap_uintIXT_EEi(i8 %183, i32 0)
  br i1 %184, label %185, label %194

; <label>:185                                     ; preds = %178
  %186 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_2, i32 0, i32 0
  %187 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_3, i32 0, i32 0
  %188 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_2, i32 0, i32 0
  %189 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_3, i32 0, i32 0
  %190 = load %"class.hls::stream.3"** %3, align 8
  %191 = load i16* %bi, align 2
  %192 = load i16* %11, align 2
  %193 = load i16* %9, align 2
  call void @_ZL240p_Z15xFDHOGNormalizeILi2160ELi3840ELi2ELi1ELi45ELi480ELi2ELi2ELi473ELi255ELi36ELi128ELi64ELi8ELi8ELi479ELi9E7ap_uintILi25EE7ap_uintILi48EEEPA9_7ap_uintILi25EEPA9_7ap_uintILi25EEP7ap_uintILi48EEP7ap_uintILi48EER6streamI7ap_uintILi576EEEttt_1PA9_7ap_uintILi25EES2_PS_ILi48EES4_RN3hls6streamIS_ILi576EEEEttt([9 x %class.ap_uint.10]* %186, [9 x %class.ap_uint.10]* %187, %class.ap_uint.11* %188, %class.ap_uint.11* %189, %"class.hls::stream.3"* %190, i16 zeroext %191, i16 zeroext %192, i16 zeroext %193)
  br label %203

; <label>:194                                     ; preds = %178
  %195 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_3, i32 0, i32 0
  %196 = getelementptr inbounds [480 x [9 x %class.ap_uint.10]]* %HA_1, i32 0, i32 0
  %197 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_3, i32 0, i32 0
  %198 = getelementptr inbounds [480 x %class.ap_uint.11]* %ssv_1, i32 0, i32 0
  %199 = load %"class.hls::stream.3"** %3, align 8
  %200 = load i16* %bi, align 2
  %201 = load i16* %11, align 2
  %202 = load i16* %9, align 2
  call void @_ZL240p_Z15xFDHOGNormalizeILi2160ELi3840ELi2ELi1ELi45ELi480ELi2ELi2ELi473ELi255ELi36ELi128ELi64ELi8ELi8ELi479ELi9E7ap_uintILi25EE7ap_uintILi48EEEPA9_7ap_uintILi25EEPA9_7ap_uintILi25EEP7ap_uintILi48EEP7ap_uintILi48EER6streamI7ap_uintILi576EEEttt_1PA9_7ap_uintILi25EES2_PS_ILi48EES4_RN3hls6streamIS_ILi576EEEEttt([9 x %class.ap_uint.10]* %195, [9 x %class.ap_uint.10]* %196, %class.ap_uint.11* %197, %class.ap_uint.11* %198, %"class.hls::stream.3"* %199, i16 zeroext %200, i16 zeroext %201, i16 zeroext %202)
  br label %203

; <label>:203                                     ; preds = %194, %185
  br label %204

; <label>:204                                     ; preds = %203, %169
  ret void
}

declare void @_ZN7ap_uintILi25EEC1Ev(%class.ap_uint.10*)

declare void @_ZN7ap_uintILi48EEC1Ev(%class.ap_uint.11*)

declare void @_ZN7ap_uintILi2EEC1Ev(%class.ap_uint.12*)

define internal void @_ZL204p_Z17xFDHOGcomputeHistILi2160ELi3840ELi2ELi1ELi5ELi8ELi8ELi480ELi3840ELi8ELi20ELi9E7ap_uintILi25EE7ap_uintILi48EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEEPA9_7ap_uintILi25EEP7ap_uintILi48EEPtt_1RN3hls6streamI7ap_uintILi16EEEES4_PA9_S1_ILi25EEPS1_ILi48EEPtt(%"class.hls::stream.8"* %_phase_strm, %"class.hls::stream.8"* %_mag_strm, [9 x %class.ap_uint.10]* %HA, %class.ap_uint.11* %ssv, i16* %bin_center, i16 zeroext %nohc) uwtable {
  %1 = alloca %"class.hls::stream.8"*, align 8
  %2 = alloca %"class.hls::stream.8"*, align 8
  %3 = alloca [9 x %class.ap_uint.10]*, align 8
  %4 = alloca %class.ap_uint.11*, align 8
  %5 = alloca i16*, align 8
  %6 = alloca i16, align 2
  store %"class.hls::stream.8"* %_phase_strm, %"class.hls::stream.8"** %1, align 8
  store %"class.hls::stream.8"* %_mag_strm, %"class.hls::stream.8"** %2, align 8
  store [9 x %class.ap_uint.10]* %HA, [9 x %class.ap_uint.10]** %3, align 8
  store %class.ap_uint.11* %ssv, %class.ap_uint.11** %4, align 8
  store i16* %bin_center, i16** %5, align 8
  store i16 %nohc, i16* %6, align 2
  %7 = load %"class.hls::stream.8"** %1, align 8
  %8 = load %"class.hls::stream.8"** %2, align 8
  %9 = load [9 x %class.ap_uint.10]** %3, align 8
  %10 = load %class.ap_uint.11** %4, align 8
  %11 = load i16** %5, align 8
  %12 = load i16* %6, align 2
  call void @_ZL206p_Z19xFDHOGcomputeHistNOILi2160ELi3840ELi2ELi1ELi5ELi8ELi8ELi480ELi3840ELi8ELi20E7ap_uintILi25EELi9E7ap_uintILi48EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEEPA9_7ap_uintILi25EEP7ap_uintILi48EEPtt_1RN3hls6streamI7ap_uintILi16EEEES4_PA9_S1_ILi25EEPS1_ILi48EEPtt(%"class.hls::stream.8"* %7, %"class.hls::stream.8"* %8, [9 x %class.ap_uint.10]* %9, %class.ap_uint.11* %10, i16* %11, i16 zeroext %12)
  ret void
}

declare %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12*, i32)

declare zeroext i1 @_ZeqILi2EEb7ap_uintIXT_EEi(i8, i32)

define internal void @_ZL240p_Z15xFDHOGNormalizeILi2160ELi3840ELi2ELi1ELi45ELi480ELi2ELi2ELi473ELi255ELi36ELi128ELi64ELi8ELi8ELi479ELi9E7ap_uintILi25EE7ap_uintILi48EEEPA9_7ap_uintILi25EEPA9_7ap_uintILi25EEP7ap_uintILi48EEP7ap_uintILi48EER6streamI7ap_uintILi576EEEttt_1PA9_7ap_uintILi25EES2_PS_ILi48EES4_RN3hls6streamIS_ILi576EEEEttt([9 x %class.ap_uint.10]* %HA_1, [9 x %class.ap_uint.10]* %HA_2, %class.ap_uint.11* %ssv_1, %class.ap_uint.11* %ssv_2, %"class.hls::stream.3"* %_block_strm, i16 zeroext %bi, i16 zeroext %nohb, i16 zeroext %nohc) uwtable {
  %1 = alloca [9 x %class.ap_uint.10]*, align 8
  %2 = alloca [9 x %class.ap_uint.10]*, align 8
  %3 = alloca %class.ap_uint.11*, align 8
  %4 = alloca %class.ap_uint.11*, align 8
  %5 = alloca %"class.hls::stream.3"*, align 8
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %bj = alloca i16, align 2
  %tmp_nf_sq24_1 = alloca [1 x %class.ap_uint.13], align 1
  %tmp_nf_sq24_2 = alloca [1 x %class.ap_uint.13], align 1
  %nf_1 = alloca [1 x i32], align 4
  %nf_2 = alloca [1 x i32], align 4
  %n_1 = alloca [1 x i8], align 1
  %n_2 = alloca [1 x i8], align 1
  %norm_block_1 = alloca [36 x i16], align 16
  %norm_block_2 = alloca [36 x i16], align 16
  %fx_rnf_sq_1 = alloca [1 x i16], align 2
  %fx_rnf_sq_2 = alloca [1 x i16], align 2
  %flag = alloca i8, align 1
  %9 = alloca %class.ap_uint.13, align 1
  %10 = alloca %class.ap_uint.13, align 1
  %11 = alloca %class.ap_uint.13, align 1
  %12 = alloca %class.ap_uint.13, align 1
  %13 = alloca %class.ap_uint.13, align 1
  %14 = alloca %class.ap_uint.13, align 1
  store [9 x %class.ap_uint.10]* %HA_1, [9 x %class.ap_uint.10]** %1, align 8
  store [9 x %class.ap_uint.10]* %HA_2, [9 x %class.ap_uint.10]** %2, align 8
  store %class.ap_uint.11* %ssv_1, %class.ap_uint.11** %3, align 8
  store %class.ap_uint.11* %ssv_2, %class.ap_uint.11** %4, align 8
  store %"class.hls::stream.3"* %_block_strm, %"class.hls::stream.3"** %5, align 8
  store i16 %bi, i16* %6, align 2
  store i16 %nohb, i16* %7, align 2
  store i16 %nohc, i16* %8, align 2
  store i16 0, i16* %bj, align 2
  %15 = getelementptr inbounds [1 x %class.ap_uint.13]* %tmp_nf_sq24_1, i32 0, i32 0
  %16 = getelementptr inbounds %class.ap_uint.13* %15, i64 1
  br label %17

; <label>:17                                      ; preds = %17, %0
  %18 = phi %class.ap_uint.13* [ %15, %0 ], [ %19, %17 ]
  call void @_ZN7ap_uintILi26EEC1Ev(%class.ap_uint.13* %18)
  %19 = getelementptr inbounds %class.ap_uint.13* %18, i64 1
  %20 = icmp eq %class.ap_uint.13* %19, %16
  br i1 %20, label %21, label %17

; <label>:21                                      ; preds = %17
  %22 = getelementptr inbounds [1 x %class.ap_uint.13]* %tmp_nf_sq24_2, i32 0, i32 0
  %23 = getelementptr inbounds %class.ap_uint.13* %22, i64 1
  br label %24

; <label>:24                                      ; preds = %24, %21
  %25 = phi %class.ap_uint.13* [ %22, %21 ], [ %26, %24 ]
  call void @_ZN7ap_uintILi26EEC1Ev(%class.ap_uint.13* %25)
  %26 = getelementptr inbounds %class.ap_uint.13* %25, i64 1
  %27 = icmp eq %class.ap_uint.13* %26, %23
  br i1 %27, label %28, label %24

; <label>:28                                      ; preds = %24
  store i8 1, i8* %flag, align 1
  %29 = load %class.ap_uint.11** %3, align 8
  %30 = load %class.ap_uint.11** %4, align 8
  %31 = load i16* %bj, align 2
  %32 = getelementptr inbounds [1 x %class.ap_uint.13]* %tmp_nf_sq24_1, i32 0, i64 0
  call void @_ZL111p_Z22xFDHOGnormalizeKernel1IP7ap_uintILi48EE7ap_uintILi26EEEP7ap_uintILi48EEP7ap_uintILi48EEtR7ap_uintILi26EE_1P7ap_uintILi48EES1_tRS_ILi26EE(%class.ap_uint.11* %29, %class.ap_uint.11* %30, i16 zeroext %31, %class.ap_uint.13* %32)
  %33 = load i16* %bj, align 2
  %34 = add i16 %33, 1
  store i16 %34, i16* %bj, align 2
  %35 = load %class.ap_uint.11** %3, align 8
  %36 = load %class.ap_uint.11** %4, align 8
  %37 = load i16* %bj, align 2
  %38 = getelementptr inbounds [1 x %class.ap_uint.13]* %tmp_nf_sq24_2, i32 0, i64 0
  call void @_ZL111p_Z22xFDHOGnormalizeKernel1IP7ap_uintILi48EE7ap_uintILi26EEEP7ap_uintILi48EEP7ap_uintILi48EEtR7ap_uintILi26EE_1P7ap_uintILi48EES1_tRS_ILi26EE(%class.ap_uint.11* %35, %class.ap_uint.11* %36, i16 zeroext %37, %class.ap_uint.13* %38)
  %39 = getelementptr inbounds [1 x %class.ap_uint.13]* %tmp_nf_sq24_1, i32 0, i64 0
  %40 = bitcast %class.ap_uint.13* %9 to i8*
  %41 = bitcast %class.ap_uint.13* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 4, i32 1, i1 false)
  %42 = getelementptr inbounds [1 x i32]* %nf_1, i32 0, i64 0
  %43 = getelementptr inbounds [1 x i8]* %n_1, i32 0, i64 0
  %44 = getelementptr %class.ap_uint.13* %9, i32 0, i32 0
  %45 = bitcast [4 x i8]* %44 to i32*
  %46 = load i32* %45, align 1
  call void @_ZL68p_Z24xFDHOGnormalizeKernelInvI7ap_uintILi26EEjE7ap_uintILi26EERjRc_17ap_uintILi26EERjRc(i32 %46, i32* %42, i8* %43)
  %47 = load i16* %bj, align 2
  %48 = add i16 %47, 1
  store i16 %48, i16* %bj, align 2
  %49 = load %class.ap_uint.11** %3, align 8
  %50 = load %class.ap_uint.11** %4, align 8
  %51 = load i16* %bj, align 2
  %52 = getelementptr inbounds [1 x %class.ap_uint.13]* %tmp_nf_sq24_1, i32 0, i64 0
  call void @_ZL111p_Z22xFDHOGnormalizeKernel1IP7ap_uintILi48EE7ap_uintILi26EEEP7ap_uintILi48EEP7ap_uintILi48EEtR7ap_uintILi26EE_1P7ap_uintILi48EES1_tRS_ILi26EE(%class.ap_uint.11* %49, %class.ap_uint.11* %50, i16 zeroext %51, %class.ap_uint.13* %52)
  %53 = getelementptr inbounds [1 x %class.ap_uint.13]* %tmp_nf_sq24_2, i32 0, i64 0
  %54 = bitcast %class.ap_uint.13* %10 to i8*
  %55 = bitcast %class.ap_uint.13* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 4, i32 1, i1 false)
  %56 = getelementptr inbounds [1 x i32]* %nf_2, i32 0, i64 0
  %57 = getelementptr inbounds [1 x i8]* %n_2, i32 0, i64 0
  %58 = getelementptr %class.ap_uint.13* %10, i32 0, i32 0
  %59 = bitcast [4 x i8]* %58 to i32*
  %60 = load i32* %59, align 1
  call void @_ZL68p_Z24xFDHOGnormalizeKernelInvI7ap_uintILi26EEjE7ap_uintILi26EERjRc_17ap_uintILi26EERjRc(i32 %60, i32* %56, i8* %57)
  %61 = load [9 x %class.ap_uint.10]** %1, align 8
  %62 = load [9 x %class.ap_uint.10]** %2, align 8
  %63 = getelementptr inbounds [1 x i32]* %nf_1, i32 0, i64 0
  %64 = load i32* %63, align 4
  %65 = getelementptr inbounds [36 x i16]* %norm_block_1, i32 0, i32 0
  %66 = getelementptr inbounds [1 x i16]* %fx_rnf_sq_1, i32 0, i64 0
  %67 = load i16* %bj, align 2
  %68 = zext i16 %67 to i32
  %69 = sub nsw i32 %68, 2
  %70 = trunc i32 %69 to i16
  %71 = getelementptr inbounds [1 x i8]* %n_1, i32 0, i64 0
  %72 = load i8* %71, align 1
  call void @_ZL112p_Z22xFDHOGnormalizeKernel2ILi480ELi2ELi2E7ap_uintILi25EELi9EttjEPA9_7ap_uintILi25EEPA9_7ap_uintILi25EEjPtRttc_1PA9_7ap_uintILi25EES2_jPtRttc([9 x %class.ap_uint.10]* %61, [9 x %class.ap_uint.10]* %62, i32 %64, i16* %65, i16* %66, i16 zeroext %70, i8 signext %72)
  br label %73

; <label>:73                                      ; preds = %28
  store i16 3, i16* %bj, align 2
  br label %74

; <label>:74                                      ; preds = %142, %73
  %75 = load i16* %bj, align 2
  %76 = zext i16 %75 to i32
  %77 = load i16* %7, align 2
  %78 = zext i16 %77 to i32
  %79 = icmp slt i32 %76, %78
  br i1 %79, label %80, label %145

; <label>:80                                      ; preds = %74
  %81 = load i8* %flag, align 1
  %82 = trunc i8 %81 to i1
  br i1 %82, label %83, label %112

; <label>:83                                      ; preds = %80
  %84 = load %class.ap_uint.11** %3, align 8
  %85 = load %class.ap_uint.11** %4, align 8
  %86 = load i16* %bj, align 2
  %87 = getelementptr inbounds [1 x %class.ap_uint.13]* %tmp_nf_sq24_2, i32 0, i64 0
  call void @_ZL111p_Z22xFDHOGnormalizeKernel1IP7ap_uintILi48EE7ap_uintILi26EEEP7ap_uintILi48EEP7ap_uintILi48EEtR7ap_uintILi26EE_1P7ap_uintILi48EES1_tRS_ILi26EE(%class.ap_uint.11* %84, %class.ap_uint.11* %85, i16 zeroext %86, %class.ap_uint.13* %87)
  %88 = getelementptr inbounds [1 x %class.ap_uint.13]* %tmp_nf_sq24_1, i32 0, i64 0
  %89 = bitcast %class.ap_uint.13* %11 to i8*
  %90 = bitcast %class.ap_uint.13* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 4, i32 1, i1 false)
  %91 = getelementptr inbounds [1 x i32]* %nf_1, i32 0, i64 0
  %92 = getelementptr inbounds [1 x i8]* %n_1, i32 0, i64 0
  %93 = getelementptr %class.ap_uint.13* %11, i32 0, i32 0
  %94 = bitcast [4 x i8]* %93 to i32*
  %95 = load i32* %94, align 1
  call void @_ZL68p_Z24xFDHOGnormalizeKernelInvI7ap_uintILi26EEjE7ap_uintILi26EERjRc_17ap_uintILi26EERjRc(i32 %95, i32* %91, i8* %92)
  %96 = load [9 x %class.ap_uint.10]** %1, align 8
  %97 = load [9 x %class.ap_uint.10]** %2, align 8
  %98 = getelementptr inbounds [1 x i32]* %nf_2, i32 0, i64 0
  %99 = load i32* %98, align 4
  %100 = getelementptr inbounds [36 x i16]* %norm_block_2, i32 0, i32 0
  %101 = getelementptr inbounds [1 x i16]* %fx_rnf_sq_2, i32 0, i64 0
  %102 = load i16* %bj, align 2
  %103 = zext i16 %102 to i32
  %104 = sub nsw i32 %103, 2
  %105 = trunc i32 %104 to i16
  %106 = getelementptr inbounds [1 x i8]* %n_2, i32 0, i64 0
  %107 = load i8* %106, align 1
  call void @_ZL112p_Z22xFDHOGnormalizeKernel2ILi480ELi2ELi2E7ap_uintILi25EELi9EttjEPA9_7ap_uintILi25EEPA9_7ap_uintILi25EEjPtRttc_1PA9_7ap_uintILi25EES2_jPtRttc([9 x %class.ap_uint.10]* %96, [9 x %class.ap_uint.10]* %97, i32 %99, i16* %100, i16* %101, i16 zeroext %105, i8 signext %107)
  %108 = getelementptr inbounds [36 x i16]* %norm_block_1, i32 0, i32 0
  %109 = getelementptr inbounds [1 x i16]* %fx_rnf_sq_1, i32 0, i64 0
  %110 = load i16* %109, align 2
  %111 = load %"class.hls::stream.3"** %5, align 8
  call void @_ZL108p_Z23xFDHOGReNormalizeKernelILi480ELi2ELi2ELi9ELi2160ELi3840ELi2ELi1ELi45EttEPttR6streamI7ap_uintILi576EEE_1PttRN3hls6streamI7ap_uintILi576EEEE(i16* %108, i16 zeroext %110, %"class.hls::stream.3"* %111)
  store i8 0, i8* %flag, align 1
  br label %141

; <label>:112                                     ; preds = %80
  %113 = load %class.ap_uint.11** %3, align 8
  %114 = load %class.ap_uint.11** %4, align 8
  %115 = load i16* %bj, align 2
  %116 = getelementptr inbounds [1 x %class.ap_uint.13]* %tmp_nf_sq24_1, i32 0, i64 0
  call void @_ZL111p_Z22xFDHOGnormalizeKernel1IP7ap_uintILi48EE7ap_uintILi26EEEP7ap_uintILi48EEP7ap_uintILi48EEtR7ap_uintILi26EE_1P7ap_uintILi48EES1_tRS_ILi26EE(%class.ap_uint.11* %113, %class.ap_uint.11* %114, i16 zeroext %115, %class.ap_uint.13* %116)
  %117 = getelementptr inbounds [1 x %class.ap_uint.13]* %tmp_nf_sq24_2, i32 0, i64 0
  %118 = bitcast %class.ap_uint.13* %12 to i8*
  %119 = bitcast %class.ap_uint.13* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %118, i8* %119, i64 4, i32 1, i1 false)
  %120 = getelementptr inbounds [1 x i32]* %nf_2, i32 0, i64 0
  %121 = getelementptr inbounds [1 x i8]* %n_2, i32 0, i64 0
  %122 = getelementptr %class.ap_uint.13* %12, i32 0, i32 0
  %123 = bitcast [4 x i8]* %122 to i32*
  %124 = load i32* %123, align 1
  call void @_ZL68p_Z24xFDHOGnormalizeKernelInvI7ap_uintILi26EEjE7ap_uintILi26EERjRc_17ap_uintILi26EERjRc(i32 %124, i32* %120, i8* %121)
  %125 = load [9 x %class.ap_uint.10]** %1, align 8
  %126 = load [9 x %class.ap_uint.10]** %2, align 8
  %127 = getelementptr inbounds [1 x i32]* %nf_1, i32 0, i64 0
  %128 = load i32* %127, align 4
  %129 = getelementptr inbounds [36 x i16]* %norm_block_1, i32 0, i32 0
  %130 = getelementptr inbounds [1 x i16]* %fx_rnf_sq_1, i32 0, i64 0
  %131 = load i16* %bj, align 2
  %132 = zext i16 %131 to i32
  %133 = sub nsw i32 %132, 2
  %134 = trunc i32 %133 to i16
  %135 = getelementptr inbounds [1 x i8]* %n_1, i32 0, i64 0
  %136 = load i8* %135, align 1
  call void @_ZL112p_Z22xFDHOGnormalizeKernel2ILi480ELi2ELi2E7ap_uintILi25EELi9EttjEPA9_7ap_uintILi25EEPA9_7ap_uintILi25EEjPtRttc_1PA9_7ap_uintILi25EES2_jPtRttc([9 x %class.ap_uint.10]* %125, [9 x %class.ap_uint.10]* %126, i32 %128, i16* %129, i16* %130, i16 zeroext %134, i8 signext %136)
  %137 = getelementptr inbounds [36 x i16]* %norm_block_2, i32 0, i32 0
  %138 = getelementptr inbounds [1 x i16]* %fx_rnf_sq_2, i32 0, i64 0
  %139 = load i16* %138, align 2
  %140 = load %"class.hls::stream.3"** %5, align 8
  call void @_ZL108p_Z23xFDHOGReNormalizeKernelILi480ELi2ELi2ELi9ELi2160ELi3840ELi2ELi1ELi45EttEPttR6streamI7ap_uintILi576EEE_1PttRN3hls6streamI7ap_uintILi576EEEE(i16* %137, i16 zeroext %139, %"class.hls::stream.3"* %140)
  store i8 1, i8* %flag, align 1
  br label %141

; <label>:141                                     ; preds = %112, %83
  br label %142

; <label>:142                                     ; preds = %141
  %143 = load i16* %bj, align 2
  %144 = add i16 %143, 1
  store i16 %144, i16* %bj, align 2
  br label %74

; <label>:145                                     ; preds = %74
  %146 = load i8* %flag, align 1
  %147 = trunc i8 %146 to i1
  br i1 %147, label %148, label %175

; <label>:148                                     ; preds = %145
  %149 = getelementptr inbounds [1 x %class.ap_uint.13]* %tmp_nf_sq24_1, i32 0, i64 0
  %150 = bitcast %class.ap_uint.13* %13 to i8*
  %151 = bitcast %class.ap_uint.13* %149 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %150, i8* %151, i64 4, i32 1, i1 false)
  %152 = getelementptr inbounds [1 x i32]* %nf_1, i32 0, i64 0
  %153 = getelementptr inbounds [1 x i8]* %n_1, i32 0, i64 0
  %154 = getelementptr %class.ap_uint.13* %13, i32 0, i32 0
  %155 = bitcast [4 x i8]* %154 to i32*
  %156 = load i32* %155, align 1
  call void @_ZL68p_Z24xFDHOGnormalizeKernelInvI7ap_uintILi26EEjE7ap_uintILi26EERjRc_17ap_uintILi26EERjRc(i32 %156, i32* %152, i8* %153)
  %157 = load [9 x %class.ap_uint.10]** %1, align 8
  %158 = load [9 x %class.ap_uint.10]** %2, align 8
  %159 = getelementptr inbounds [1 x i32]* %nf_2, i32 0, i64 0
  %160 = load i32* %159, align 4
  %161 = getelementptr inbounds [36 x i16]* %norm_block_2, i32 0, i32 0
  %162 = getelementptr inbounds [1 x i16]* %fx_rnf_sq_2, i32 0, i64 0
  %163 = load i16* %bj, align 2
  %164 = zext i16 %163 to i32
  %165 = sub nsw i32 %164, 2
  %166 = trunc i32 %165 to i16
  %167 = getelementptr inbounds [1 x i8]* %n_2, i32 0, i64 0
  %168 = load i8* %167, align 1
  call void @_ZL112p_Z22xFDHOGnormalizeKernel2ILi480ELi2ELi2E7ap_uintILi25EELi9EttjEPA9_7ap_uintILi25EEPA9_7ap_uintILi25EEjPtRttc_1PA9_7ap_uintILi25EES2_jPtRttc([9 x %class.ap_uint.10]* %157, [9 x %class.ap_uint.10]* %158, i32 %160, i16* %161, i16* %162, i16 zeroext %166, i8 signext %168)
  %169 = getelementptr inbounds [36 x i16]* %norm_block_1, i32 0, i32 0
  %170 = getelementptr inbounds [1 x i16]* %fx_rnf_sq_1, i32 0, i64 0
  %171 = load i16* %170, align 2
  %172 = load %"class.hls::stream.3"** %5, align 8
  call void @_ZL108p_Z23xFDHOGReNormalizeKernelILi480ELi2ELi2ELi9ELi2160ELi3840ELi2ELi1ELi45EttEPttR6streamI7ap_uintILi576EEE_1PttRN3hls6streamI7ap_uintILi576EEEE(i16* %169, i16 zeroext %171, %"class.hls::stream.3"* %172)
  store i8 0, i8* %flag, align 1
  %173 = load i16* %bj, align 2
  %174 = add i16 %173, 1
  store i16 %174, i16* %bj, align 2
  br label %202

; <label>:175                                     ; preds = %145
  %176 = getelementptr inbounds [1 x %class.ap_uint.13]* %tmp_nf_sq24_2, i32 0, i64 0
  %177 = bitcast %class.ap_uint.13* %14 to i8*
  %178 = bitcast %class.ap_uint.13* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %177, i8* %178, i64 4, i32 1, i1 false)
  %179 = getelementptr inbounds [1 x i32]* %nf_2, i32 0, i64 0
  %180 = getelementptr inbounds [1 x i8]* %n_2, i32 0, i64 0
  %181 = getelementptr %class.ap_uint.13* %14, i32 0, i32 0
  %182 = bitcast [4 x i8]* %181 to i32*
  %183 = load i32* %182, align 1
  call void @_ZL68p_Z24xFDHOGnormalizeKernelInvI7ap_uintILi26EEjE7ap_uintILi26EERjRc_17ap_uintILi26EERjRc(i32 %183, i32* %179, i8* %180)
  %184 = load [9 x %class.ap_uint.10]** %1, align 8
  %185 = load [9 x %class.ap_uint.10]** %2, align 8
  %186 = getelementptr inbounds [1 x i32]* %nf_1, i32 0, i64 0
  %187 = load i32* %186, align 4
  %188 = getelementptr inbounds [36 x i16]* %norm_block_1, i32 0, i32 0
  %189 = getelementptr inbounds [1 x i16]* %fx_rnf_sq_1, i32 0, i64 0
  %190 = load i16* %bj, align 2
  %191 = zext i16 %190 to i32
  %192 = sub nsw i32 %191, 2
  %193 = trunc i32 %192 to i16
  %194 = getelementptr inbounds [1 x i8]* %n_1, i32 0, i64 0
  %195 = load i8* %194, align 1
  call void @_ZL112p_Z22xFDHOGnormalizeKernel2ILi480ELi2ELi2E7ap_uintILi25EELi9EttjEPA9_7ap_uintILi25EEPA9_7ap_uintILi25EEjPtRttc_1PA9_7ap_uintILi25EES2_jPtRttc([9 x %class.ap_uint.10]* %184, [9 x %class.ap_uint.10]* %185, i32 %187, i16* %188, i16* %189, i16 zeroext %193, i8 signext %195)
  %196 = getelementptr inbounds [36 x i16]* %norm_block_2, i32 0, i32 0
  %197 = getelementptr inbounds [1 x i16]* %fx_rnf_sq_2, i32 0, i64 0
  %198 = load i16* %197, align 2
  %199 = load %"class.hls::stream.3"** %5, align 8
  call void @_ZL108p_Z23xFDHOGReNormalizeKernelILi480ELi2ELi2ELi9ELi2160ELi3840ELi2ELi1ELi45EttEPttR6streamI7ap_uintILi576EEE_1PttRN3hls6streamI7ap_uintILi576EEEE(i16* %196, i16 zeroext %198, %"class.hls::stream.3"* %199)
  store i8 1, i8* %flag, align 1
  %200 = load i16* %bj, align 2
  %201 = add i16 %200, 1
  store i16 %201, i16* %bj, align 2
  br label %202

; <label>:202                                     ; preds = %175, %148
  %203 = load i8* %flag, align 1
  %204 = trunc i8 %203 to i1
  br i1 %204, label %205, label %222

; <label>:205                                     ; preds = %202
  %206 = load [9 x %class.ap_uint.10]** %1, align 8
  %207 = load [9 x %class.ap_uint.10]** %2, align 8
  %208 = getelementptr inbounds [1 x i32]* %nf_2, i32 0, i64 0
  %209 = load i32* %208, align 4
  %210 = getelementptr inbounds [36 x i16]* %norm_block_2, i32 0, i32 0
  %211 = getelementptr inbounds [1 x i16]* %fx_rnf_sq_2, i32 0, i64 0
  %212 = load i16* %bj, align 2
  %213 = zext i16 %212 to i32
  %214 = sub nsw i32 %213, 2
  %215 = trunc i32 %214 to i16
  %216 = getelementptr inbounds [1 x i8]* %n_2, i32 0, i64 0
  %217 = load i8* %216, align 1
  call void @_ZL112p_Z22xFDHOGnormalizeKernel2ILi480ELi2ELi2E7ap_uintILi25EELi9EttjEPA9_7ap_uintILi25EEPA9_7ap_uintILi25EEjPtRttc_1PA9_7ap_uintILi25EES2_jPtRttc([9 x %class.ap_uint.10]* %206, [9 x %class.ap_uint.10]* %207, i32 %209, i16* %210, i16* %211, i16 zeroext %215, i8 signext %217)
  %218 = getelementptr inbounds [36 x i16]* %norm_block_1, i32 0, i32 0
  %219 = getelementptr inbounds [1 x i16]* %fx_rnf_sq_1, i32 0, i64 0
  %220 = load i16* %219, align 2
  %221 = load %"class.hls::stream.3"** %5, align 8
  call void @_ZL108p_Z23xFDHOGReNormalizeKernelILi480ELi2ELi2ELi9ELi2160ELi3840ELi2ELi1ELi45EttEPttR6streamI7ap_uintILi576EEE_1PttRN3hls6streamI7ap_uintILi576EEEE(i16* %218, i16 zeroext %220, %"class.hls::stream.3"* %221)
  store i8 0, i8* %flag, align 1
  br label %239

; <label>:222                                     ; preds = %202
  %223 = load [9 x %class.ap_uint.10]** %1, align 8
  %224 = load [9 x %class.ap_uint.10]** %2, align 8
  %225 = getelementptr inbounds [1 x i32]* %nf_1, i32 0, i64 0
  %226 = load i32* %225, align 4
  %227 = getelementptr inbounds [36 x i16]* %norm_block_1, i32 0, i32 0
  %228 = getelementptr inbounds [1 x i16]* %fx_rnf_sq_1, i32 0, i64 0
  %229 = load i16* %bj, align 2
  %230 = zext i16 %229 to i32
  %231 = sub nsw i32 %230, 2
  %232 = trunc i32 %231 to i16
  %233 = getelementptr inbounds [1 x i8]* %n_1, i32 0, i64 0
  %234 = load i8* %233, align 1
  call void @_ZL112p_Z22xFDHOGnormalizeKernel2ILi480ELi2ELi2E7ap_uintILi25EELi9EttjEPA9_7ap_uintILi25EEPA9_7ap_uintILi25EEjPtRttc_1PA9_7ap_uintILi25EES2_jPtRttc([9 x %class.ap_uint.10]* %223, [9 x %class.ap_uint.10]* %224, i32 %226, i16* %227, i16* %228, i16 zeroext %232, i8 signext %234)
  %235 = getelementptr inbounds [36 x i16]* %norm_block_2, i32 0, i32 0
  %236 = getelementptr inbounds [1 x i16]* %fx_rnf_sq_2, i32 0, i64 0
  %237 = load i16* %236, align 2
  %238 = load %"class.hls::stream.3"** %5, align 8
  call void @_ZL108p_Z23xFDHOGReNormalizeKernelILi480ELi2ELi2ELi9ELi2160ELi3840ELi2ELi1ELi45EttEPttR6streamI7ap_uintILi576EEE_1PttRN3hls6streamI7ap_uintILi576EEEE(i16* %235, i16 zeroext %237, %"class.hls::stream.3"* %238)
  store i8 1, i8* %flag, align 1
  br label %239

; <label>:239                                     ; preds = %222, %205
  %240 = load i8* %flag, align 1
  %241 = trunc i8 %240 to i1
  br i1 %241, label %242, label %247

; <label>:242                                     ; preds = %239
  %243 = getelementptr inbounds [36 x i16]* %norm_block_1, i32 0, i32 0
  %244 = getelementptr inbounds [1 x i16]* %fx_rnf_sq_1, i32 0, i64 0
  %245 = load i16* %244, align 2
  %246 = load %"class.hls::stream.3"** %5, align 8
  call void @_ZL108p_Z23xFDHOGReNormalizeKernelILi480ELi2ELi2ELi9ELi2160ELi3840ELi2ELi1ELi45EttEPttR6streamI7ap_uintILi576EEE_1PttRN3hls6streamI7ap_uintILi576EEEE(i16* %243, i16 zeroext %245, %"class.hls::stream.3"* %246)
  br label %252

; <label>:247                                     ; preds = %239
  %248 = getelementptr inbounds [36 x i16]* %norm_block_2, i32 0, i32 0
  %249 = getelementptr inbounds [1 x i16]* %fx_rnf_sq_2, i32 0, i64 0
  %250 = load i16* %249, align 2
  %251 = load %"class.hls::stream.3"** %5, align 8
  call void @_ZL108p_Z23xFDHOGReNormalizeKernelILi480ELi2ELi2ELi9ELi2160ELi3840ELi2ELi1ELi45EttEPttR6streamI7ap_uintILi576EEE_1PttRN3hls6streamI7ap_uintILi576EEEE(i16* %248, i16 zeroext %250, %"class.hls::stream.3"* %251)
  br label %252

; <label>:252                                     ; preds = %247, %242
  ret void
}

declare void @_ZN7ap_uintILi26EEC1Ev(%class.ap_uint.13*)

define internal void @_ZL111p_Z22xFDHOGnormalizeKernel1IP7ap_uintILi48EE7ap_uintILi26EEEP7ap_uintILi48EEP7ap_uintILi48EEtR7ap_uintILi26EE_1P7ap_uintILi48EES1_tRS_ILi26EE(%class.ap_uint.11* %ssv_1, %class.ap_uint.11* %ssv_2, i16 zeroext %bj, %class.ap_uint.13* %tmp_nf_sq24) uwtable {
  %1 = alloca %class.ap_uint.11*, align 8
  %2 = alloca %class.ap_uint.11*, align 8
  %3 = alloca i16, align 2
  %4 = alloca %class.ap_uint.13*, align 8
  %tmp_nf_1 = alloca %class.ap_uint.23, align 1
  %tmp_nf_2 = alloca %class.ap_uint.23, align 1
  %5 = alloca %class.ap_int, align 1
  %6 = alloca %class.ap_uint.11, align 1
  %7 = alloca %class.ap_uint.11, align 1
  %8 = alloca i48
  %9 = alloca i48
  %10 = alloca { i64, i32 }
  %11 = alloca %class.ap_int, align 1
  %12 = alloca %class.ap_uint.11, align 1
  %13 = alloca %class.ap_uint.11, align 1
  %14 = alloca i48
  %15 = alloca i48
  %16 = alloca { i64, i32 }
  %tmp_nf_sum = alloca %class.ap_ufixed.24, align 1
  %17 = alloca %class.ap_ufixed.24, align 1
  %18 = alloca %class.ap_int.25, align 1
  %19 = alloca %class.ap_uint.23, align 1
  %20 = alloca %class.ap_uint.23, align 1
  %21 = alloca i56
  %22 = alloca i56
  %23 = alloca { i64, i40 }
  %24 = alloca %class.ap_uint.20, align 1
  %25 = alloca %class.ap_uint.20, align 1
  %26 = alloca %class.ap_ufixed.24, align 1
  %27 = alloca i56
  %28 = alloca i24
  %29 = alloca i24
  store %class.ap_uint.11* %ssv_1, %class.ap_uint.11** %1, align 8
  store %class.ap_uint.11* %ssv_2, %class.ap_uint.11** %2, align 8
  store i16 %bj, i16* %3, align 2
  store %class.ap_uint.13* %tmp_nf_sq24, %class.ap_uint.13** %4, align 8
  call void @_ZN7ap_uintILi51EEC1Ev(%class.ap_uint.23* %tmp_nf_1)
  call void @_ZN7ap_uintILi51EEC1Ev(%class.ap_uint.23* %tmp_nf_2)
  %30 = load i16* %3, align 2
  %31 = zext i16 %30 to i64
  %32 = load %class.ap_uint.11** %1, align 8
  %33 = getelementptr inbounds %class.ap_uint.11* %32, i64 %31
  %34 = bitcast %class.ap_uint.11* %6 to i8*
  %35 = bitcast %class.ap_uint.11* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 6, i32 1, i1 false)
  %36 = load i16* %3, align 2
  %37 = zext i16 %36 to i64
  %38 = load %class.ap_uint.11** %2, align 8
  %39 = getelementptr inbounds %class.ap_uint.11* %38, i64 %37
  %40 = bitcast %class.ap_uint.11* %7 to i8*
  %41 = bitcast %class.ap_uint.11* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 6, i32 1, i1 false)
  %42 = getelementptr %class.ap_uint.11* %6, i32 0, i32 0
  %43 = bitcast i48* %8 to [6 x i8]*
  %44 = load [6 x i8]* %42
  store [6 x i8] %44, [6 x i8]* %43, align 1
  %45 = load i48* %8
  %46 = getelementptr %class.ap_uint.11* %7, i32 0, i32 0
  %47 = bitcast i48* %9 to [6 x i8]*
  %48 = load [6 x i8]* %46
  store [6 x i8] %48, [6 x i8]* %47, align 1
  %49 = load i48* %9
  %50 = call { i64, i32 } @_ZplILi48ELi48EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i48 %45, i48 %49)
  %51 = getelementptr %class.ap_int* %5, i32 0, i32 0
  store { i64, i32 } %50, { i64, i32 }* %10
  %52 = bitcast { i64, i32 }* %10 to [12 x i8]*
  %53 = load [12 x i8]* %52, align 1
  store [12 x i8] %53, [12 x i8]* %51
  %54 = call %class.ap_uint.23* @_ZN7ap_uintILi51EEaSILi96EEERS0_RK6ap_intIXT_EE(%class.ap_uint.23* %tmp_nf_1, %class.ap_int* %5)
  %55 = load i16* %3, align 2
  %56 = zext i16 %55 to i32
  %57 = add nsw i32 %56, 1
  %58 = sext i32 %57 to i64
  %59 = load %class.ap_uint.11** %1, align 8
  %60 = getelementptr inbounds %class.ap_uint.11* %59, i64 %58
  %61 = bitcast %class.ap_uint.11* %12 to i8*
  %62 = bitcast %class.ap_uint.11* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %62, i64 6, i32 1, i1 false)
  %63 = load i16* %3, align 2
  %64 = zext i16 %63 to i32
  %65 = add nsw i32 %64, 1
  %66 = sext i32 %65 to i64
  %67 = load %class.ap_uint.11** %2, align 8
  %68 = getelementptr inbounds %class.ap_uint.11* %67, i64 %66
  %69 = bitcast %class.ap_uint.11* %13 to i8*
  %70 = bitcast %class.ap_uint.11* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 6, i32 1, i1 false)
  %71 = getelementptr %class.ap_uint.11* %12, i32 0, i32 0
  %72 = bitcast i48* %14 to [6 x i8]*
  %73 = load [6 x i8]* %71
  store [6 x i8] %73, [6 x i8]* %72, align 1
  %74 = load i48* %14
  %75 = getelementptr %class.ap_uint.11* %13, i32 0, i32 0
  %76 = bitcast i48* %15 to [6 x i8]*
  %77 = load [6 x i8]* %75
  store [6 x i8] %77, [6 x i8]* %76, align 1
  %78 = load i48* %15
  %79 = call { i64, i32 } @_ZplILi48ELi48EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i48 %74, i48 %78)
  %80 = getelementptr %class.ap_int* %11, i32 0, i32 0
  store { i64, i32 } %79, { i64, i32 }* %16
  %81 = bitcast { i64, i32 }* %16 to [12 x i8]*
  %82 = load [12 x i8]* %81, align 1
  store [12 x i8] %82, [12 x i8]* %80
  %83 = call %class.ap_uint.23* @_ZN7ap_uintILi51EEaSILi96EEERS0_RK6ap_intIXT_EE(%class.ap_uint.23* %tmp_nf_2, %class.ap_int* %11)
  call void @_ZN9ap_ufixedILi50ELi50EL9ap_q_mode5EL9ap_o_mode0ELi0EEC1Ev(%class.ap_ufixed.24* %tmp_nf_sum)
  %84 = bitcast %class.ap_uint.23* %19 to i8*
  %85 = bitcast %class.ap_uint.23* %tmp_nf_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 7, i32 1, i1 false)
  %86 = bitcast %class.ap_uint.23* %20 to i8*
  %87 = bitcast %class.ap_uint.23* %tmp_nf_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 7, i32 1, i1 false)
  %88 = getelementptr %class.ap_uint.23* %19, i32 0, i32 0
  %89 = bitcast i56* %21 to [7 x i8]*
  %90 = load [7 x i8]* %88
  store [7 x i8] %90, [7 x i8]* %89, align 1
  %91 = load i56* %21
  %92 = getelementptr %class.ap_uint.23* %20, i32 0, i32 0
  %93 = bitcast i56* %22 to [7 x i8]*
  %94 = load [7 x i8]* %92
  store [7 x i8] %94, [7 x i8]* %93, align 1
  %95 = load i56* %22
  %96 = call { i64, i40 } @_ZplILi51ELi51EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i56 %91, i56 %95)
  %97 = getelementptr %class.ap_int.25* %18, i32 0, i32 0
  store { i64, i40 } %96, { i64, i40 }* %23
  %98 = bitcast { i64, i40 }* %23 to [13 x i8]*
  %99 = load [13 x i8]* %98, align 1
  store [13 x i8] %99, [13 x i8]* %97
  call void @_ZN9ap_ufixedILi50ELi50EL9ap_q_mode5EL9ap_o_mode0ELi0EEC1ILi102EEERK6ap_intIXT_EE(%class.ap_ufixed.24* %17, %class.ap_int.25* %18)
  %100 = call %class.ap_ufixed.24* @_ZN9ap_ufixedILi50ELi50EL9ap_q_mode5EL9ap_o_mode0ELi0EEaSERKS2_(%class.ap_ufixed.24* %tmp_nf_sum, %class.ap_ufixed.24* %17)
  %101 = load %class.ap_uint.13** %4, align 8
  %102 = bitcast %class.ap_ufixed.24* %26 to i8*
  %103 = bitcast %class.ap_ufixed.24* %tmp_nf_sum to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %102, i8* %103, i64 7, i32 1, i1 false)
  %104 = getelementptr %class.ap_ufixed.24* %26, i32 0, i32 0
  %105 = bitcast i56* %27 to [7 x i8]*
  %106 = load [7 x i8]* %104
  store [7 x i8] %106, [7 x i8]* %105, align 1
  %107 = load i56* %27
  %108 = call i24 @_ZL74p_Z9xFSqrtHOGILi24ELi50ELi50ELi5ELi0EE9ap_ufixedILi50ELi50ELi5ELi0ELi0EE_19ap_ufixedILi50ELi50EL9ap_q_mode5EL9ap_o_mode0ELi0EE(i56 %107)
  %109 = getelementptr %class.ap_uint.20* %25, i32 0, i32 0
  store i24 %108, i24* %28
  %110 = bitcast i24* %28 to [3 x i8]*
  %111 = load [3 x i8]* %110, align 1
  store [3 x i8] %111, [3 x i8]* %109
  %112 = call i24 @_ZplILi24EE7ap_uintIXT_EERKS1_i(%class.ap_uint.20* %25, i32 921)
  %113 = getelementptr %class.ap_uint.20* %24, i32 0, i32 0
  store i24 %112, i24* %29
  %114 = bitcast i24* %29 to [3 x i8]*
  %115 = load [3 x i8]* %114, align 1
  store [3 x i8] %115, [3 x i8]* %113
  %116 = call %class.ap_uint.13* @_ZN7ap_uintILi26EEaSILi24EEERS0_RKS_IXT_EE(%class.ap_uint.13* %101, %class.ap_uint.20* %24)
  ret void
}

define internal void @_ZL68p_Z24xFDHOGnormalizeKernelInvI7ap_uintILi26EEjE7ap_uintILi26EERjRc_17ap_uintILi26EERjRc(i32 %tmp_nf_sq24.coerce, i32* %nf, i8* %n) uwtable {
  %tmp_nf_sq24 = alloca %class.ap_uint.13, align 4
  %1 = alloca i32*, align 8
  %2 = alloca i8*, align 8
  %m = alloca i32, align 4
  %3 = alloca %class.ap_uint.20, align 1
  %4 = alloca i24
  %5 = getelementptr %class.ap_uint.13* %tmp_nf_sq24, i32 0, i32 0
  %6 = bitcast [4 x i8]* %5 to i32*
  store i32 %tmp_nf_sq24.coerce, i32* %6, align 1
  store i32* %nf, i32** %1, align 8
  store i8* %n, i8** %2, align 8
  store i32 16, i32* %m, align 4
  call void @_ZN7ap_uintILi24EEC1ILi26EEERKS_IXT_EE(%class.ap_uint.20* %3, %class.ap_uint.13* %tmp_nf_sq24)
  %7 = load i32* %m, align 4
  %8 = load i8** %2, align 8
  %9 = getelementptr %class.ap_uint.20* %3, i32 0, i32 0
  %10 = bitcast i24* %4 to [3 x i8]*
  %11 = load [3 x i8]* %9
  store [3 x i8] %11, [3 x i8]* %10, align 1
  %12 = load i24* %4
  %13 = call i32 @_ZL11xFInverse247ap_uintILi24EEiPc(i24 %12, i32 %7, i8* %8)
  %14 = load i32** %1, align 8
  store i32 %13, i32* %14, align 4
  ret void
}

define internal void @_ZL112p_Z22xFDHOGnormalizeKernel2ILi480ELi2ELi2E7ap_uintILi25EELi9EttjEPA9_7ap_uintILi25EEPA9_7ap_uintILi25EEjPtRttc_1PA9_7ap_uintILi25EES2_jPtRttc([9 x %class.ap_uint.10]* %HA_1, [9 x %class.ap_uint.10]* %HA_2, i32 %nf, i16* %norm_block, i16* %fx_rnf_sq, i16 zeroext %bj, i8 signext %n) uwtable {
  %1 = alloca [9 x %class.ap_uint.10]*, align 8
  %2 = alloca [9 x %class.ap_uint.10]*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i16*, align 8
  %5 = alloca i16*, align 8
  %6 = alloca i16, align 2
  %7 = alloca i8, align 1
  %tmp_clip_1 = alloca i32, align 4
  %tmp_clip_2 = alloca i32, align 4
  %offset_1 = alloca [2 x i8], align 1
  %offset_2 = alloca [2 x i8], align 1
  %fx_clip_val = alloca i16, align 2
  %i = alloca %class.ap_uint.9, align 1
  %j = alloca %class.ap_uint.9, align 1
  %rnf_sum = alloca %class.ap_uint.15, align 1
  %8 = alloca %class.ap_uint.9, align 1
  %9 = alloca %class.ap_uint.9, align 1
  %10 = alloca %class.ap_uint.10, align 1
  %11 = alloca %class.ap_uint.9, align 1
  %12 = alloca %class.ap_uint.10, align 1
  %13 = alloca %class.ap_uint.10, align 1
  %14 = alloca %class.ap_uint.9, align 1
  %15 = alloca %class.ap_uint.10, align 1
  %16 = alloca %class.ap_uint.9, align 1
  %17 = alloca %class.ap_uint.9, align 1
  %18 = alloca %class.ap_uint.9, align 1
  %19 = alloca %class.ap_uint.9, align 1
  %20 = alloca %class.ap_uint.9, align 1
  %21 = alloca %class.ap_uint.9, align 1
  %22 = alloca %class.ap_uint.9, align 1
  %23 = alloca %class.ap_uint.9, align 1
  %fx_rnf_sum = alloca %class.ap_ufixed, align 1
  %fx_rnf_sq_2 = alloca %class.ap_uint.16, align 1
  %24 = alloca %class.ap_ufixed, align 1
  %25 = alloca i40
  %26 = alloca i24
  %27 = alloca %class.ap_uint.16, align 1
  %28 = alloca i24
  %29 = alloca %class.ap_uint.16, align 1
  %30 = alloca i24
  store [9 x %class.ap_uint.10]* %HA_1, [9 x %class.ap_uint.10]** %1, align 8
  store [9 x %class.ap_uint.10]* %HA_2, [9 x %class.ap_uint.10]** %2, align 8
  store i32 %nf, i32* %3, align 4
  store i16* %norm_block, i16** %4, align 8
  store i16* %fx_rnf_sq, i16** %5, align 8
  store i16 %bj, i16* %6, align 2
  store i8 %n, i8* %7, align 1
  %31 = getelementptr inbounds [2 x i8]* %offset_1, i32 0, i64 0
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds [2 x i8]* %offset_1, i32 0, i64 1
  store i8 18, i8* %32, align 1
  %33 = getelementptr inbounds [2 x i8]* %offset_2, i32 0, i64 0
  store i8 9, i8* %33, align 1
  %34 = getelementptr inbounds [2 x i8]* %offset_2, i32 0, i64 1
  store i8 27, i8* %34, align 1
  store i16 13108, i16* %fx_clip_val, align 2
  call void @_ZN7ap_uintILi16EEC1Ev(%class.ap_uint.9* %i)
  call void @_ZN7ap_uintILi16EEC1Ev(%class.ap_uint.9* %j)
  call void @_ZN7ap_uintILi33EEC1Ei(%class.ap_uint.15* %rnf_sum, i32 0)
  br label %35

; <label>:35                                      ; preds = %0
  %36 = call %class.ap_uint.9* @_ZN7ap_uintILi16EEaSEi(%class.ap_uint.9* %j, i32 0)
  br label %37

; <label>:37                                      ; preds = %194, %35
  %38 = bitcast %class.ap_uint.9* %8 to i8*
  %39 = bitcast %class.ap_uint.9* %j to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 2, i32 1, i1 false)
  %40 = getelementptr %class.ap_uint.9* %8, i32 0, i32 0
  %41 = bitcast [2 x i8]* %40 to i16*
  %42 = load i16* %41, align 1
  %43 = call zeroext i1 @_ZltILi16EEb7ap_uintIXT_EEi(i16 %42, i32 2)
  br i1 %43, label %44, label %198

; <label>:44                                      ; preds = %37
  br label %45

; <label>:45                                      ; preds = %44
  %46 = call %class.ap_uint.9* @_ZN7ap_uintILi16EEaSEi(%class.ap_uint.9* %i, i32 0)
  br label %47

; <label>:47                                      ; preds = %189, %45
  %48 = bitcast %class.ap_uint.9* %9 to i8*
  %49 = bitcast %class.ap_uint.9* %i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 2, i32 1, i1 false)
  %50 = getelementptr %class.ap_uint.9* %9, i32 0, i32 0
  %51 = bitcast [2 x i8]* %50 to i16*
  %52 = load i16* %51, align 1
  %53 = call zeroext i1 @_ZltILi16EEb7ap_uintIXT_EEi(i16 %52, i32 9)
  br i1 %53, label %54, label %193

; <label>:54                                      ; preds = %47
  %55 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %i)
  %56 = load i16* %6, align 2
  %57 = call i16 @_ZplILi16EE7ap_uintIXT_EEtRKS1_(i16 zeroext %56, %class.ap_uint.9* %j)
  %58 = getelementptr %class.ap_uint.9* %11, i32 0, i32 0
  %59 = bitcast [2 x i8]* %58 to i16*
  store i16 %57, i16* %59, align 1
  %60 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %11)
  %61 = load [9 x %class.ap_uint.10]** %1, align 8
  %62 = getelementptr inbounds [9 x %class.ap_uint.10]* %61, i64 %60
  %63 = getelementptr inbounds [9 x %class.ap_uint.10]* %62, i32 0, i64 %55
  %64 = load i32* %3, align 4
  %65 = call i32 @_ZmlILi25EE7ap_uintIXT_EERKS1_j(%class.ap_uint.10* %63, i32 %64)
  %66 = getelementptr %class.ap_uint.10* %10, i32 0, i32 0
  %67 = bitcast [4 x i8]* %66 to i32*
  store i32 %65, i32* %67, align 1
  %68 = load i8* %7, align 1
  %69 = sext i8 %68 to i32
  %70 = sub nsw i32 %69, 8
  %71 = getelementptr %class.ap_uint.10* %10, i32 0, i32 0
  %72 = bitcast [4 x i8]* %71 to i32*
  %73 = load i32* %72, align 1
  %74 = call i32 @_ZrsILi25EE7ap_uintIXT_EES1_i(i32 %73, i32 %70)
  %75 = getelementptr %class.ap_uint.10* %12, i32 0, i32 0
  %76 = bitcast [4 x i8]* %75 to i32*
  store i32 %74, i32* %76, align 1
  %77 = call i64 @_ZNK7ap_uintILi25EEcvmEv(%class.ap_uint.10* %12)
  %78 = trunc i64 %77 to i32
  store i32 %78, i32* %tmp_clip_1, align 4
  %79 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %i)
  %80 = load i16* %6, align 2
  %81 = call i16 @_ZplILi16EE7ap_uintIXT_EEtRKS1_(i16 zeroext %80, %class.ap_uint.9* %j)
  %82 = getelementptr %class.ap_uint.9* %14, i32 0, i32 0
  %83 = bitcast [2 x i8]* %82 to i16*
  store i16 %81, i16* %83, align 1
  %84 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %14)
  %85 = load [9 x %class.ap_uint.10]** %2, align 8
  %86 = getelementptr inbounds [9 x %class.ap_uint.10]* %85, i64 %84
  %87 = getelementptr inbounds [9 x %class.ap_uint.10]* %86, i32 0, i64 %79
  %88 = load i32* %3, align 4
  %89 = call i32 @_ZmlILi25EE7ap_uintIXT_EERKS1_j(%class.ap_uint.10* %87, i32 %88)
  %90 = getelementptr %class.ap_uint.10* %13, i32 0, i32 0
  %91 = bitcast [4 x i8]* %90 to i32*
  store i32 %89, i32* %91, align 1
  %92 = load i8* %7, align 1
  %93 = sext i8 %92 to i32
  %94 = sub nsw i32 %93, 8
  %95 = getelementptr %class.ap_uint.10* %13, i32 0, i32 0
  %96 = bitcast [4 x i8]* %95 to i32*
  %97 = load i32* %96, align 1
  %98 = call i32 @_ZrsILi25EE7ap_uintIXT_EES1_i(i32 %97, i32 %94)
  %99 = getelementptr %class.ap_uint.10* %15, i32 0, i32 0
  %100 = bitcast [4 x i8]* %99 to i32*
  store i32 %98, i32* %100, align 1
  %101 = call i64 @_ZNK7ap_uintILi25EEcvmEv(%class.ap_uint.10* %15)
  %102 = trunc i64 %101 to i32
  store i32 %102, i32* %tmp_clip_2, align 4
  %103 = load i32* %tmp_clip_1, align 4
  %104 = load i16* %fx_clip_val, align 2
  %105 = zext i16 %104 to i32
  %106 = icmp ugt i32 %103, %105
  br i1 %106, label %107, label %110

; <label>:107                                     ; preds = %54
  %108 = load i16* %fx_clip_val, align 2
  %109 = zext i16 %108 to i32
  store i32 %109, i32* %tmp_clip_1, align 4
  br label %110

; <label>:110                                     ; preds = %107, %54
  %111 = load i32* %tmp_clip_2, align 4
  %112 = load i16* %fx_clip_val, align 2
  %113 = zext i16 %112 to i32
  %114 = icmp ugt i32 %111, %113
  br i1 %114, label %115, label %118

; <label>:115                                     ; preds = %110
  %116 = load i16* %fx_clip_val, align 2
  %117 = zext i16 %116 to i32
  store i32 %117, i32* %tmp_clip_2, align 4
  br label %118

; <label>:118                                     ; preds = %115, %110
  %119 = load i32* %tmp_clip_1, align 4
  %120 = trunc i32 %119 to i16
  %121 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %j)
  %122 = getelementptr inbounds [2 x i8]* %offset_1, i32 0, i64 %121
  %123 = load i8* %122, align 1
  %124 = call i16 @_ZplILi16EE7ap_uintIXT_EEhRKS1_(i8 zeroext %123, %class.ap_uint.9* %i)
  %125 = getelementptr %class.ap_uint.9* %16, i32 0, i32 0
  %126 = bitcast [2 x i8]* %125 to i16*
  store i16 %124, i16* %126, align 1
  %127 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %16)
  %128 = load i16** %4, align 8
  %129 = getelementptr inbounds i16* %128, i64 %127
  store i16 %120, i16* %129, align 2
  %130 = load i32* %tmp_clip_2, align 4
  %131 = trunc i32 %130 to i16
  %132 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %j)
  %133 = getelementptr inbounds [2 x i8]* %offset_2, i32 0, i64 %132
  %134 = load i8* %133, align 1
  %135 = call i16 @_ZplILi16EE7ap_uintIXT_EEhRKS1_(i8 zeroext %134, %class.ap_uint.9* %i)
  %136 = getelementptr %class.ap_uint.9* %17, i32 0, i32 0
  %137 = bitcast [2 x i8]* %136 to i16*
  store i16 %135, i16* %137, align 1
  %138 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %17)
  %139 = load i16** %4, align 8
  %140 = getelementptr inbounds i16* %139, i64 %138
  store i16 %131, i16* %140, align 2
  %141 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %j)
  %142 = getelementptr inbounds [2 x i8]* %offset_1, i32 0, i64 %141
  %143 = load i8* %142, align 1
  %144 = call i16 @_ZplILi16EE7ap_uintIXT_EEhRKS1_(i8 zeroext %143, %class.ap_uint.9* %i)
  %145 = getelementptr %class.ap_uint.9* %18, i32 0, i32 0
  %146 = bitcast [2 x i8]* %145 to i16*
  store i16 %144, i16* %146, align 1
  %147 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %18)
  %148 = load i16** %4, align 8
  %149 = getelementptr inbounds i16* %148, i64 %147
  %150 = load i16* %149, align 2
  %151 = zext i16 %150 to i32
  %152 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %j)
  %153 = getelementptr inbounds [2 x i8]* %offset_1, i32 0, i64 %152
  %154 = load i8* %153, align 1
  %155 = call i16 @_ZplILi16EE7ap_uintIXT_EEhRKS1_(i8 zeroext %154, %class.ap_uint.9* %i)
  %156 = getelementptr %class.ap_uint.9* %19, i32 0, i32 0
  %157 = bitcast [2 x i8]* %156 to i16*
  store i16 %155, i16* %157, align 1
  %158 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %19)
  %159 = load i16** %4, align 8
  %160 = getelementptr inbounds i16* %159, i64 %158
  %161 = load i16* %160, align 2
  %162 = zext i16 %161 to i32
  %163 = mul nsw i32 %151, %162
  %164 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %j)
  %165 = getelementptr inbounds [2 x i8]* %offset_2, i32 0, i64 %164
  %166 = load i8* %165, align 1
  %167 = call i16 @_ZplILi16EE7ap_uintIXT_EEhRKS1_(i8 zeroext %166, %class.ap_uint.9* %i)
  %168 = getelementptr %class.ap_uint.9* %20, i32 0, i32 0
  %169 = bitcast [2 x i8]* %168 to i16*
  store i16 %167, i16* %169, align 1
  %170 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %20)
  %171 = load i16** %4, align 8
  %172 = getelementptr inbounds i16* %171, i64 %170
  %173 = load i16* %172, align 2
  %174 = zext i16 %173 to i32
  %175 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %j)
  %176 = getelementptr inbounds [2 x i8]* %offset_2, i32 0, i64 %175
  %177 = load i8* %176, align 1
  %178 = call i16 @_ZplILi16EE7ap_uintIXT_EEhRKS1_(i8 zeroext %177, %class.ap_uint.9* %i)
  %179 = getelementptr %class.ap_uint.9* %21, i32 0, i32 0
  %180 = bitcast [2 x i8]* %179 to i16*
  store i16 %178, i16* %180, align 1
  %181 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %21)
  %182 = load i16** %4, align 8
  %183 = getelementptr inbounds i16* %182, i64 %181
  %184 = load i16* %183, align 2
  %185 = zext i16 %184 to i32
  %186 = mul nsw i32 %174, %185
  %187 = add nsw i32 %163, %186
  %188 = call %class.ap_uint.15* @_ZpLILi33EER7ap_uintIXT_EES2_i(%class.ap_uint.15* %rnf_sum, i32 %187)
  br label %189

; <label>:189                                     ; preds = %118
  %190 = call i16 @_ZN7ap_uintILi16EEppEi(%class.ap_uint.9* %i, i32 0)
  %191 = getelementptr %class.ap_uint.9* %22, i32 0, i32 0
  %192 = bitcast [2 x i8]* %191 to i16*
  store i16 %190, i16* %192, align 1
  br label %47

; <label>:193                                     ; preds = %47
  br label %194

; <label>:194                                     ; preds = %193
  %195 = call i16 @_ZN7ap_uintILi16EEppEi(%class.ap_uint.9* %j, i32 0)
  %196 = getelementptr %class.ap_uint.9* %23, i32 0, i32 0
  %197 = bitcast [2 x i8]* %196 to i16*
  store i16 %195, i16* %197, align 1
  br label %37

; <label>:198                                     ; preds = %37
  call void @_ZN9ap_ufixedILi33ELi33EL9ap_q_mode5EL9ap_o_mode0ELi0EEC1ILi33EEERK7ap_uintIXT_EE(%class.ap_ufixed* %fx_rnf_sum, %class.ap_uint.15* %rnf_sum)
  %199 = bitcast %class.ap_ufixed* %24 to i8*
  %200 = bitcast %class.ap_ufixed* %fx_rnf_sum to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %199, i8* %200, i64 5, i32 1, i1 false)
  %201 = getelementptr %class.ap_ufixed* %24, i32 0, i32 0
  %202 = bitcast i40* %25 to [5 x i8]*
  %203 = load [5 x i8]* %201
  store [5 x i8] %203, [5 x i8]* %202, align 1
  %204 = load i40* %25
  %205 = call i24 @_ZL74p_Z9xFSqrtHOGILi17ELi33ELi33ELi5ELi0EE9ap_ufixedILi33ELi33ELi5ELi0ELi0EE_19ap_ufixedILi33ELi33EL9ap_q_mode5EL9ap_o_mode0ELi0EE(i40 %204)
  %206 = getelementptr %class.ap_uint.16* %fx_rnf_sq_2, i32 0, i32 0
  store i24 %205, i24* %26
  %207 = bitcast i24* %26 to [3 x i8]*
  %208 = load [3 x i8]* %207, align 1
  store [3 x i8] %208, [3 x i8]* %206
  %209 = bitcast %class.ap_uint.16* %27 to i8*
  %210 = bitcast %class.ap_uint.16* %fx_rnf_sq_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %209, i8* %210, i64 3, i32 1, i1 false)
  %211 = getelementptr %class.ap_uint.16* %27, i32 0, i32 0
  %212 = bitcast i24* %28 to [3 x i8]*
  %213 = load [3 x i8]* %211
  store [3 x i8] %213, [3 x i8]* %212, align 1
  %214 = load i24* %28
  %215 = call i24 @_ZrsILi17EE7ap_uintIXT_EES1_i(i24 %214, i32 1)
  %216 = getelementptr %class.ap_uint.16* %29, i32 0, i32 0
  store i24 %215, i24* %30
  %217 = bitcast i24* %30 to [3 x i8]*
  %218 = load [3 x i8]* %217, align 1
  store [3 x i8] %218, [3 x i8]* %216
  %219 = call i64 @_ZNK7ap_uintILi17EEcvmEv(%class.ap_uint.16* %29)
  %220 = trunc i64 %219 to i16
  %221 = load i16** %5, align 8
  store i16 %220, i16* %221, align 2
  ret void
}

define internal void @_ZL108p_Z23xFDHOGReNormalizeKernelILi480ELi2ELi2ELi9ELi2160ELi3840ELi2ELi1ELi45EttEPttR6streamI7ap_uintILi576EEE_1PttRN3hls6streamI7ap_uintILi576EEEE(i16* %norm_block, i16 zeroext %fx_rnf_sq, %"class.hls::stream.3"* %_block_strm) uwtable {
  %1 = alloca i16*, align 8
  %2 = alloca i16, align 2
  %3 = alloca %"class.hls::stream.3"*, align 8
  %n_rnf = alloca i8, align 1
  %rnf = alloca i32, align 4
  %block_data = alloca %class.ap_uint.4, align 1
  %step = alloca i8, align 1
  %offset = alloca %class.ap_uint.14, align 1
  %_s_k = alloca i32, align 4
  %_l_k = alloca i8, align 1
  %tmp_block_data = alloca %class.ap_uint.1, align 1
  %4 = alloca %class.ap_uint.1, align 1
  %5 = alloca %class.ap_uint.14, align 1
  store i16* %norm_block, i16** %1, align 8
  store i16 %fx_rnf_sq, i16* %2, align 2
  store %"class.hls::stream.3"* %_block_strm, %"class.hls::stream.3"** %3, align 8
  %6 = load i16* %2, align 2
  %7 = call i32 @_ZL20p_ZN2xf7InverseEtiPctiPc(i16 zeroext %6, i32 1, i8* %n_rnf)
  store i32 %7, i32* %rnf, align 4
  call void @_ZN7ap_uintILi576EEC1Ev(%class.ap_uint.4* %block_data)
  store i8 16, i8* %step, align 1
  call void @_ZN7ap_uintILi10EEC1Ei(%class.ap_uint.14* %offset, i32 0)
  store i32 0, i32* %_s_k, align 4
  store i8 0, i8* %_l_k, align 1
  br label %8

; <label>:8                                       ; preds = %0
  store i32 0, i32* %_s_k, align 4
  br label %9

; <label>:9                                       ; preds = %43, %8
  %10 = load i32* %_s_k, align 4
  %11 = icmp sle i32 %10, 35
  br i1 %11, label %12, label %46

; <label>:12                                      ; preds = %9
  %13 = load i32* %_s_k, align 4
  %14 = sext i32 %13 to i64
  %15 = load i16** %1, align 8
  %16 = getelementptr inbounds i16* %15, i64 %14
  %17 = load i16* %16, align 2
  %18 = zext i16 %17 to i32
  %19 = load i32* %rnf, align 4
  %20 = mul i32 %18, %19
  %21 = load i8* %n_rnf, align 1
  %22 = sext i8 %21 to i32
  %23 = lshr i32 %20, %22
  call void @_ZN7ap_uintILi32EEC1Ej(%class.ap_uint.1* %tmp_block_data, i32 %23)
  %24 = bitcast %class.ap_uint.1* %4 to i8*
  %25 = bitcast %class.ap_uint.1* %tmp_block_data to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 4, i32 1, i1 false)
  %26 = getelementptr %class.ap_uint.1* %4, i32 0, i32 0
  %27 = bitcast [4 x i8]* %26 to i32*
  %28 = load i32* %27, align 1
  %29 = call zeroext i1 @_ZgtILi32EEb7ap_uintIXT_EEi(i32 %28, i32 65535)
  br i1 %29, label %30, label %32

; <label>:30                                      ; preds = %12
  %31 = call %class.ap_uint.1* @_ZN7ap_uintILi32EEaSEi(%class.ap_uint.1* %tmp_block_data, i32 65535)
  br label %32

; <label>:32                                      ; preds = %30, %12
  %33 = call i64 @_ZNK7ap_uintILi32EEcvmEv(%class.ap_uint.1* %tmp_block_data)
  %34 = load i8* %step, align 1
  %35 = zext i8 %34 to i32
  %36 = sub nsw i32 %35, 1
  %37 = call i16 @_ZplILi10EE7ap_uintIXT_EERKS1_i(%class.ap_uint.14* %offset, i32 %36)
  %38 = getelementptr %class.ap_uint.14* %5, i32 0, i32 0
  %39 = bitcast [2 x i8]* %38 to i16*
  store i16 %37, i16* %39, align 1
  %40 = call i64* @_ZN7ap_uintILi576EE5rangeILi10ELi10EEERmRKS_IXT_EERKS_IXT0_EE(%class.ap_uint.4* %block_data, %class.ap_uint.14* %5, %class.ap_uint.14* %offset)
  store i64 %33, i64* %40
  %41 = load i8* %step, align 1
  %42 = call %class.ap_uint.14* @_ZpLILi10EER7ap_uintIXT_EES2_h(%class.ap_uint.14* %offset, i8 zeroext %41)
  br label %43

; <label>:43                                      ; preds = %32
  %44 = load i32* %_s_k, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %_s_k, align 4
  br label %9

; <label>:46                                      ; preds = %9
  %47 = load %"class.hls::stream.3"** %3, align 8
  call void @_ZN3hls6streamI7ap_uintILi576EEE5writeERKS2_(%"class.hls::stream.3"* %47, %class.ap_uint.4* %block_data)
  ret void
}

define internal i32 @_ZL20p_ZN2xf7InverseEtiPctiPc(i16 zeroext %x, i32 %M, i8* %N) nounwind uwtable {
  %1 = alloca i32, align 4
  %2 = alloca i16, align 2
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %val = alloca i32, align 4
  %index = alloca i32, align 4
  %B_L = alloca i32, align 4
  %tmp = alloca i32, align 4
  %pos = alloca i32, align 4
  %block = alloca i32, align 4
  %shift = alloca i32, align 4
  %x1 = alloca i16, align 2
  %x2 = alloca i16, align 2
  %x3 = alloca i16, align 2
  %x4 = alloca i16, align 2
  %tmpx = alloca i16, align 2
  store i16 %x, i16* %2, align 2
  store i32 %M, i32* %3, align 4
  store i8* %N, i8** %4, align 8
  %5 = load i32* %3, align 4
  %6 = icmp sle i32 %5, 16
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  br label %10

; <label>:8                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([79 x i8]* @.str7, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str8, i32 0, i32 0), i32 234, i8* getelementptr inbounds ([63 x i8]* @__PRETTY_FUNCTION__._ZL20p_ZN2xf7InverseEtiPctiPc, i32 0, i32 0)) noreturn nounwind
  unreachable
                                                  ; No predecessors!
  br label %10

; <label>:10                                      ; preds = %9, %7
  store i32 0, i32* %val, align 4
  store i32 17, i32* %B_L, align 4
  store i32 4, i32* %tmp, align 4
  store i32 0, i32* %block, align 4
  store i32 0, i32* %pos, align 4
  store i32 0, i32* %shift, align 4
  %11 = load i16* %2, align 2
  %12 = zext i16 %11 to i32
  %13 = ashr i32 %12, 12
  %14 = and i32 %13, 15
  %15 = trunc i32 %14 to i16
  store i16 %15, i16* %x1, align 2
  %16 = load i16* %2, align 2
  %17 = zext i16 %16 to i32
  %18 = ashr i32 %17, 8
  %19 = and i32 %18, 15
  %20 = trunc i32 %19 to i16
  store i16 %20, i16* %x2, align 2
  %21 = load i16* %2, align 2
  %22 = zext i16 %21 to i32
  %23 = ashr i32 %22, 4
  %24 = and i32 %23, 15
  %25 = trunc i32 %24 to i16
  store i16 %25, i16* %x3, align 2
  %26 = load i16* %2, align 2
  %27 = zext i16 %26 to i32
  %28 = and i32 %27, 15
  %29 = trunc i32 %28 to i16
  store i16 %29, i16* %x4, align 2
  store i16 0, i16* %tmpx, align 2
  %30 = load i16* %2, align 2
  %31 = zext i16 %30 to i32
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %36

; <label>:33                                      ; preds = %10
  %34 = load i16* getelementptr inbounds ([2049 x i16]* @_ZN2xf12division_lutE, i32 0, i64 0), align 2
  %35 = zext i16 %34 to i32
  store i32 %35, i32* %1
  br label %174

; <label>:36                                      ; preds = %10
  %37 = load i16* %x1, align 2
  %38 = zext i16 %37 to i32
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %62

; <label>:40                                      ; preds = %36
  %41 = load i16* %x1, align 2
  store i16 %41, i16* %tmpx, align 2
  store i32 0, i32* %block, align 4
  store i32 0, i32* %tmp, align 4
  br label %42

; <label>:42                                      ; preds = %58, %40
  %43 = load i32* %tmp, align 4
  %44 = icmp slt i32 %43, 4
  br i1 %44, label %45, label %61

; <label>:45                                      ; preds = %42
  %46 = load i16* %x1, align 2
  %47 = zext i16 %46 to i32
  %48 = load i32* %tmp, align 4
  %49 = sub nsw i32 3, %48
  %50 = ashr i32 %47, %49
  %51 = trunc i32 %50 to i16
  store i16 %51, i16* %tmpx, align 2
  %52 = load i16* %tmpx, align 2
  %53 = icmp ne i16 %52, 0
  br i1 %53, label %54, label %57

; <label>:54                                      ; preds = %45
  %55 = load i32* %tmp, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %pos, align 4
  br label %61

; <label>:57                                      ; preds = %45
  br label %58

; <label>:58                                      ; preds = %57
  %59 = load i32* %tmp, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %tmp, align 4
  br label %42

; <label>:61                                      ; preds = %54, %42
  br label %138

; <label>:62                                      ; preds = %36
  %63 = load i16* %x2, align 2
  %64 = zext i16 %63 to i32
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %66, label %88

; <label>:66                                      ; preds = %62
  store i32 1, i32* %block, align 4
  %67 = load i16* %x2, align 2
  store i16 %67, i16* %tmpx, align 2
  store i32 0, i32* %tmp, align 4
  br label %68

; <label>:68                                      ; preds = %84, %66
  %69 = load i32* %tmp, align 4
  %70 = icmp slt i32 %69, 4
  br i1 %70, label %71, label %87

; <label>:71                                      ; preds = %68
  %72 = load i16* %x2, align 2
  %73 = zext i16 %72 to i32
  %74 = load i32* %tmp, align 4
  %75 = sub nsw i32 3, %74
  %76 = ashr i32 %73, %75
  %77 = trunc i32 %76 to i16
  store i16 %77, i16* %tmpx, align 2
  %78 = load i16* %tmpx, align 2
  %79 = icmp ne i16 %78, 0
  br i1 %79, label %80, label %83

; <label>:80                                      ; preds = %71
  %81 = load i32* %tmp, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %pos, align 4
  br label %87

; <label>:83                                      ; preds = %71
  br label %84

; <label>:84                                      ; preds = %83
  %85 = load i32* %tmp, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %tmp, align 4
  br label %68

; <label>:87                                      ; preds = %80, %68
  br label %137

; <label>:88                                      ; preds = %62
  %89 = load i16* %x3, align 2
  %90 = zext i16 %89 to i32
  %91 = icmp sgt i32 %90, 0
  br i1 %91, label %92, label %114

; <label>:92                                      ; preds = %88
  store i32 2, i32* %block, align 4
  %93 = load i16* %x3, align 2
  store i16 %93, i16* %tmpx, align 2
  store i32 0, i32* %tmp, align 4
  br label %94

; <label>:94                                      ; preds = %110, %92
  %95 = load i32* %tmp, align 4
  %96 = icmp slt i32 %95, 4
  br i1 %96, label %97, label %113

; <label>:97                                      ; preds = %94
  %98 = load i16* %x3, align 2
  %99 = zext i16 %98 to i32
  %100 = load i32* %tmp, align 4
  %101 = sub nsw i32 3, %100
  %102 = ashr i32 %99, %101
  %103 = trunc i32 %102 to i16
  store i16 %103, i16* %tmpx, align 2
  %104 = load i16* %tmpx, align 2
  %105 = icmp ne i16 %104, 0
  br i1 %105, label %106, label %109

; <label>:106                                     ; preds = %97
  %107 = load i32* %tmp, align 4
  %108 = add nsw i32 %107, 1
  store i32 %108, i32* %pos, align 4
  br label %113

; <label>:109                                     ; preds = %97
  br label %110

; <label>:110                                     ; preds = %109
  %111 = load i32* %tmp, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %tmp, align 4
  br label %94

; <label>:113                                     ; preds = %106, %94
  br label %136

; <label>:114                                     ; preds = %88
  store i32 3, i32* %block, align 4
  %115 = load i16* %x4, align 2
  store i16 %115, i16* %tmpx, align 2
  store i32 0, i32* %tmp, align 4
  br label %116

; <label>:116                                     ; preds = %132, %114
  %117 = load i32* %tmp, align 4
  %118 = icmp slt i32 %117, 4
  br i1 %118, label %119, label %135

; <label>:119                                     ; preds = %116
  %120 = load i16* %x4, align 2
  %121 = zext i16 %120 to i32
  %122 = load i32* %tmp, align 4
  %123 = sub nsw i32 3, %122
  %124 = ashr i32 %121, %123
  %125 = trunc i32 %124 to i16
  store i16 %125, i16* %tmpx, align 2
  %126 = load i16* %tmpx, align 2
  %127 = icmp ne i16 %126, 0
  br i1 %127, label %128, label %131

; <label>:128                                     ; preds = %119
  %129 = load i32* %tmp, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %pos, align 4
  br label %135

; <label>:131                                     ; preds = %119
  br label %132

; <label>:132                                     ; preds = %131
  %133 = load i32* %tmp, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %tmp, align 4
  br label %116

; <label>:135                                     ; preds = %128, %116
  br label %136

; <label>:136                                     ; preds = %135, %113
  br label %137

; <label>:137                                     ; preds = %136, %87
  br label %138

; <label>:138                                     ; preds = %137, %61
  br label %139

; <label>:139                                     ; preds = %138
  %140 = load i32* %block, align 4
  %141 = mul nsw i32 4, %140
  %142 = load i32* %pos, align 4
  %143 = add nsw i32 %141, %142
  store i32 %143, i32* %B_L, align 4
  store i32 4, i32* %shift, align 4
  %144 = load i32* %B_L, align 4
  %145 = icmp sge i32 %144, 1
  br i1 %145, label %146, label %155

; <label>:146                                     ; preds = %139
  %147 = load i16* %2, align 2
  %148 = zext i16 %147 to i32
  %149 = load i32* %B_L, align 4
  %150 = sub nsw i32 %149, 1
  %151 = shl i32 %148, %150
  %152 = and i32 %151, 32767
  %153 = load i32* %shift, align 4
  %154 = ashr i32 %152, %153
  store i32 %154, i32* %index, align 4
  br label %161

; <label>:155                                     ; preds = %139
  %156 = load i16* %2, align 2
  %157 = zext i16 %156 to i32
  %158 = and i32 %157, 32767
  %159 = load i32* %shift, align 4
  %160 = ashr i32 %158, %159
  store i32 %160, i32* %index, align 4
  br label %161

; <label>:161                                     ; preds = %155, %146
  %162 = load i32* %index, align 4
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds [2049 x i16]* @_ZN2xf12division_lutE, i32 0, i64 %163
  %165 = load i16* %164, align 2
  %166 = zext i16 %165 to i32
  store i32 %166, i32* %val, align 4
  %167 = load i32* %3, align 4
  %168 = add nsw i32 %167, 16
  %169 = load i32* %B_L, align 4
  %170 = sub nsw i32 %168, %169
  %171 = trunc i32 %170 to i8
  %172 = load i8** %4, align 8
  store i8 %171, i8* %172, align 1
  %173 = load i32* %val, align 4
  store i32 %173, i32* %1
  br label %174

; <label>:174                                     ; preds = %161, %33
  %175 = load i32* %1
  ret i32 %175
}

declare void @_ZN7ap_uintILi10EEC1Ei(%class.ap_uint.14*, i32)

declare void @_ZN7ap_uintILi32EEC1Ej(%class.ap_uint.1*, i32)

declare zeroext i1 @_ZgtILi32EEb7ap_uintIXT_EEi(i32, i32)

declare %class.ap_uint.1* @_ZN7ap_uintILi32EEaSEi(%class.ap_uint.1*, i32)

declare i64* @_ZN7ap_uintILi576EE5rangeILi10ELi10EEERmRKS_IXT_EERKS_IXT0_EE(%class.ap_uint.4*, %class.ap_uint.14*, %class.ap_uint.14*)

declare i16 @_ZplILi10EE7ap_uintIXT_EERKS1_i(%class.ap_uint.14*, i32)

declare %class.ap_uint.14* @_ZpLILi10EER7ap_uintIXT_EES2_h(%class.ap_uint.14*, i8 zeroext)

declare void @_ZN3hls6streamI7ap_uintILi576EEE5writeERKS2_(%"class.hls::stream.3"*, %class.ap_uint.4*)

declare void @_ZN7ap_uintILi16EEC1Ev(%class.ap_uint.9*)

declare void @_ZN7ap_uintILi33EEC1Ei(%class.ap_uint.15*, i32)

declare %class.ap_uint.9* @_ZN7ap_uintILi16EEaSEi(%class.ap_uint.9*, i32)

declare zeroext i1 @_ZltILi16EEb7ap_uintIXT_EEi(i16, i32)

declare i32 @_ZrsILi25EE7ap_uintIXT_EES1_i(i32, i32)

declare i32 @_ZmlILi25EE7ap_uintIXT_EERKS1_j(%class.ap_uint.10*, i32)

declare i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9*)

declare i16 @_ZplILi16EE7ap_uintIXT_EEtRKS1_(i16 zeroext, %class.ap_uint.9*)

declare i64 @_ZNK7ap_uintILi25EEcvmEv(%class.ap_uint.10*)

declare i16 @_ZplILi16EE7ap_uintIXT_EEhRKS1_(i8 zeroext, %class.ap_uint.9*)

declare %class.ap_uint.15* @_ZpLILi33EER7ap_uintIXT_EES2_i(%class.ap_uint.15*, i32)

declare i16 @_ZN7ap_uintILi16EEppEi(%class.ap_uint.9*, i32)

declare void @_ZN9ap_ufixedILi33ELi33EL9ap_q_mode5EL9ap_o_mode0ELi0EEC1ILi33EEERK7ap_uintIXT_EE(%class.ap_ufixed*, %class.ap_uint.15*)

define internal i24 @_ZL74p_Z9xFSqrtHOGILi17ELi33ELi33ELi5ELi0EE9ap_ufixedILi33ELi33ELi5ELi0ELi0EE_19ap_ufixedILi33ELi33EL9ap_q_mode5EL9ap_o_mode0ELi0EE(i40 %x.coerce) uwtable {
  %1 = alloca %class.ap_uint.16, align 1
  %x = alloca %class.ap_ufixed, align 8
  %2 = alloca i40
  %factor = alloca %class.ap_ufixed.17, align 1
  %offset = alloca i8, align 1
  %3 = alloca %struct.af_bit_ref, align 1
  %result = alloca %class.ap_ufixed.18, align 1
  %x2 = alloca %class.ap_ufixed.19, align 1
  %_s_i = alloca i32, align 4
  %_l_i = alloca i8, align 1
  %t = alloca %class.ap_ufixed.19, align 1
  %4 = alloca %class.ap_fixed, align 1
  %5 = alloca %class.ap_ufixed.18, align 1
  %6 = alloca %class.ap_ufixed.18, align 1
  %7 = alloca i40
  %8 = alloca i40
  %9 = alloca %class.ap_ufixed.17, align 1
  %10 = alloca i40
  %11 = alloca i40
  %12 = alloca { i64, i8 }
  %thisfactor = alloca %class.ap_ufixed.17, align 1
  %13 = alloca %class.ap_ufixed.19, align 1
  %14 = alloca %class.ap_ufixed.19, align 1
  %15 = alloca i40
  %16 = alloca i40
  %17 = alloca %class.ap_ufixed.19, align 1
  %18 = alloca i40
  %19 = alloca %class.ap_ufixed.19, align 1
  %20 = alloca i40
  %21 = alloca %class.ap_ufixed.18, align 1
  %22 = alloca %class.ap_fixed, align 1
  %23 = alloca %class.ap_ufixed.18, align 1
  %24 = alloca %class.ap_ufixed.17, align 1
  %25 = alloca i40
  %26 = alloca i40
  %27 = alloca { i64, i8 }
  %28 = alloca %class.ap_ufixed.18, align 1
  %29 = alloca %class.ap_ufixed.18, align 1
  %30 = alloca i40
  %31 = alloca i40
  %32 = alloca i24
  %33 = getelementptr %class.ap_ufixed* %x, i32 0, i32 0
  store i40 %x.coerce, i40* %2
  %34 = bitcast i40* %2 to [5 x i8]*
  %35 = load [5 x i8]* %34, align 1
  store [5 x i8] %35, [5 x i8]* %33
  call void @_ZN9ap_ufixedILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1Ei(%class.ap_ufixed.17* %factor, i32 0)
  store i8 0, i8* %offset, align 1
  %36 = load i8* %offset, align 1
  %37 = trunc i8 %36 to i1
  %38 = zext i1 %37 to i32
  %39 = sub nsw i32 33, %38
  call void @_ZN9ap_ufixedILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0EEixEj(%struct.af_bit_ref* sret %3, %class.ap_ufixed.17* %factor, i32 %39)
  %40 = call %struct.af_bit_ref* @_ZN10af_bit_refILi34ELi33ELb0EL9ap_q_mode5EL9ap_o_mode3ELi0EEaSEb(%struct.af_bit_ref* %3, i1 zeroext true)
  call void @_ZN9ap_ufixedILi35ELi34EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1Ei(%class.ap_ufixed.18* %result, i32 0)
  call void @_ZN9ap_ufixedILi36ELi35EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi33ELi33ELS0_5ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_ufixed.19* %x2, %class.ap_ufixed* %x)
  %41 = load i8* %offset, align 1
  %42 = trunc i8 %41 to i1
  %43 = zext i1 %42 to i32
  %44 = sub nsw i32 34, %43
  %45 = trunc i32 %44 to i8
  %46 = zext i8 %45 to i32
  store i32 %46, i32* %_s_i, align 4
  %47 = load i8* %offset, align 1
  %48 = trunc i8 %47 to i1
  %49 = zext i1 %48 to i32
  %50 = sub nsw i32 34, %49
  %51 = trunc i32 %50 to i8
  store i8 %51, i8* %_l_i, align 1
  %52 = load i8* %offset, align 1
  %53 = trunc i8 %52 to i1
  %54 = zext i1 %53 to i32
  %55 = sub nsw i32 34, %54
  %56 = trunc i32 %55 to i8
  %57 = zext i8 %56 to i32
  store i32 %57, i32* %_s_i, align 4
  br label %58

; <label>:58                                      ; preds = %131, %0
  %59 = load i32* %_s_i, align 4
  %60 = icmp sge i32 %59, 17
  br i1 %60, label %61, label %134

; <label>:61                                      ; preds = %58
  %62 = bitcast %class.ap_ufixed.18* %6 to i8*
  %63 = bitcast %class.ap_ufixed.18* %result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %63, i64 5, i32 1, i1 false)
  %64 = getelementptr %class.ap_ufixed.18* %6, i32 0, i32 0
  %65 = bitcast i40* %7 to [5 x i8]*
  %66 = load [5 x i8]* %64
  store [5 x i8] %66, [5 x i8]* %65, align 1
  %67 = load i40* %7
  %68 = call i40 @_ZlsILi35ELi34EL9ap_q_mode5EL9ap_o_mode3ELi0EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES3_i(i40 %67, i32 1)
  %69 = getelementptr %class.ap_ufixed.18* %5, i32 0, i32 0
  store i40 %68, i40* %8
  %70 = bitcast i40* %8 to [5 x i8]*
  %71 = load [5 x i8]* %70, align 1
  store [5 x i8] %71, [5 x i8]* %69
  %72 = bitcast %class.ap_ufixed.17* %9 to i8*
  %73 = bitcast %class.ap_ufixed.17* %factor to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 5, i32 1, i1 false)
  %74 = getelementptr %class.ap_ufixed.18* %5, i32 0, i32 0
  %75 = bitcast i40* %10 to [5 x i8]*
  %76 = load [5 x i8]* %74
  store [5 x i8] %76, [5 x i8]* %75, align 1
  %77 = load i40* %10
  %78 = getelementptr %class.ap_ufixed.17* %9, i32 0, i32 0
  %79 = bitcast i40* %11 to [5 x i8]*
  %80 = load [5 x i8]* %78
  store [5 x i8] %80, [5 x i8]* %79, align 1
  %81 = load i40* %11
  %82 = call { i64, i8 } @_ZplILi35ELi34EL9ap_q_mode5EL9ap_o_mode3ELi0ELi34ELi33ELS0_5ELS1_3ELi0EE8ap_fixedIXplT_T4_EXT5_EXT1_EXT2_EXT3_EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_IXT4_EXT5_EXT6_EXT7_EXT8_EE(i40 %77, i40 %81)
  %83 = getelementptr %class.ap_fixed* %4, i32 0, i32 0
  store { i64, i8 } %82, { i64, i8 }* %12
  %84 = bitcast { i64, i8 }* %12 to [9 x i8]*
  %85 = load [9 x i8]* %84, align 1
  store [9 x i8] %85, [9 x i8]* %83
  call void @_ZN9ap_ufixedILi36ELi35EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi69ELi33ELS0_5ELS1_3ELi0EEERK8ap_fixedIXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_ufixed.19* %t, %class.ap_fixed* %4)
  call void @_ZN9ap_ufixedILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1Ei(%class.ap_ufixed.17* %thisfactor, i32 0)
  %86 = bitcast %class.ap_ufixed.19* %13 to i8*
  %87 = bitcast %class.ap_ufixed.19* %x2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 5, i32 1, i1 false)
  %88 = bitcast %class.ap_ufixed.19* %14 to i8*
  %89 = bitcast %class.ap_ufixed.19* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 5, i32 1, i1 false)
  %90 = getelementptr %class.ap_ufixed.19* %13, i32 0, i32 0
  %91 = bitcast i40* %15 to [5 x i8]*
  %92 = load [5 x i8]* %90
  store [5 x i8] %92, [5 x i8]* %91, align 1
  %93 = load i40* %15
  %94 = getelementptr %class.ap_ufixed.19* %14, i32 0, i32 0
  %95 = bitcast i40* %16 to [5 x i8]*
  %96 = load [5 x i8]* %94
  store [5 x i8] %96, [5 x i8]* %95, align 1
  %97 = load i40* %16
  %98 = call zeroext i1 @_ZgeILi36ELi35EL9ap_q_mode5EL9ap_o_mode3ELi0ELi36ELi35ELS0_5ELS1_3ELi0EEb9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES2_IXT4_EXT5_EXT6_EXT7_EXT8_EE(i40 %93, i40 %97)
  br i1 %98, label %99, label %111

; <label>:99                                      ; preds = %61
  %100 = bitcast %class.ap_ufixed.19* %17 to i8*
  %101 = bitcast %class.ap_ufixed.19* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 5, i32 1, i1 false)
  %102 = getelementptr %class.ap_ufixed.19* %17, i32 0, i32 0
  %103 = bitcast i40* %18 to [5 x i8]*
  %104 = load [5 x i8]* %102
  store [5 x i8] %104, [5 x i8]* %103, align 1
  %105 = load i40* %18
  %106 = call i40 @_ZmIILi36ELi35EL9ap_q_mode5EL9ap_o_mode3ELi0ELi36ELi35ELS0_5ELS1_3ELi0EE9ap_ufixedIXT_EXT5_EXT1_EXT2_EXT3_EERS2_IXT_EXT0_EXT1_EXT2_EXT3_EES2_IXT4_EXT5_EXT6_EXT7_EXT8_EE(%class.ap_ufixed.19* %x2, i40 %105)
  %107 = getelementptr %class.ap_ufixed.19* %19, i32 0, i32 0
  store i40 %106, i40* %20
  %108 = bitcast i40* %20 to [5 x i8]*
  %109 = load [5 x i8]* %108, align 1
  store [5 x i8] %109, [5 x i8]* %107
  %110 = call %class.ap_ufixed.17* @_ZN9ap_ufixedILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0EEaSERKS2_(%class.ap_ufixed.17* %thisfactor, %class.ap_ufixed.17* %factor)
  br label %111

; <label>:111                                     ; preds = %99, %61
  %112 = bitcast %class.ap_ufixed.18* %23 to i8*
  %113 = bitcast %class.ap_ufixed.18* %result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %112, i8* %113, i64 5, i32 1, i1 false)
  %114 = bitcast %class.ap_ufixed.17* %24 to i8*
  %115 = bitcast %class.ap_ufixed.17* %thisfactor to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 5, i32 1, i1 false)
  %116 = getelementptr %class.ap_ufixed.18* %23, i32 0, i32 0
  %117 = bitcast i40* %25 to [5 x i8]*
  %118 = load [5 x i8]* %116
  store [5 x i8] %118, [5 x i8]* %117, align 1
  %119 = load i40* %25
  %120 = getelementptr %class.ap_ufixed.17* %24, i32 0, i32 0
  %121 = bitcast i40* %26 to [5 x i8]*
  %122 = load [5 x i8]* %120
  store [5 x i8] %122, [5 x i8]* %121, align 1
  %123 = load i40* %26
  %124 = call { i64, i8 } @_ZplILi35ELi34EL9ap_q_mode5EL9ap_o_mode3ELi0ELi34ELi33ELS0_5ELS1_3ELi0EE8ap_fixedIXplT_T4_EXT5_EXT1_EXT2_EXT3_EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_IXT4_EXT5_EXT6_EXT7_EXT8_EE(i40 %119, i40 %123)
  %125 = getelementptr %class.ap_fixed* %22, i32 0, i32 0
  store { i64, i8 } %124, { i64, i8 }* %27
  %126 = bitcast { i64, i8 }* %27 to [9 x i8]*
  %127 = load [9 x i8]* %126, align 1
  store [9 x i8] %127, [9 x i8]* %125
  call void @_ZN9ap_ufixedILi35ELi34EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi69ELi33ELS0_5ELS1_3ELi0EEERK8ap_fixedIXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_ufixed.18* %21, %class.ap_fixed* %22)
  %128 = call %class.ap_ufixed.18* @_ZN9ap_ufixedILi35ELi34EL9ap_q_mode5EL9ap_o_mode3ELi0EEaSERKS2_(%class.ap_ufixed.18* %result, %class.ap_ufixed.18* %21)
  %129 = call %class.ap_ufixed.17* @_ZrSILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0EER9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_i(%class.ap_ufixed.17* %factor, i32 1)
  %130 = call %class.ap_ufixed.19* @_ZlSILi36ELi35EL9ap_q_mode5EL9ap_o_mode3ELi0EER9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_i(%class.ap_ufixed.19* %x2, i32 1)
  br label %131

; <label>:131                                     ; preds = %111
  %132 = load i32* %_s_i, align 4
  %133 = add nsw i32 %132, -1
  store i32 %133, i32* %_s_i, align 4
  br label %58

; <label>:134                                     ; preds = %58
  %135 = bitcast %class.ap_ufixed.18* %29 to i8*
  %136 = bitcast %class.ap_ufixed.18* %result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %135, i8* %136, i64 5, i32 1, i1 false)
  %137 = getelementptr %class.ap_ufixed.18* %29, i32 0, i32 0
  %138 = bitcast i40* %30 to [5 x i8]*
  %139 = load [5 x i8]* %137
  store [5 x i8] %139, [5 x i8]* %138, align 1
  %140 = load i40* %30
  %141 = call i40 @_ZrsILi35ELi34EL9ap_q_mode5EL9ap_o_mode3ELi0EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES3_i(i40 %140, i32 16)
  %142 = getelementptr %class.ap_ufixed.18* %28, i32 0, i32 0
  store i40 %141, i40* %31
  %143 = bitcast i40* %31 to [5 x i8]*
  %144 = load [5 x i8]* %143, align 1
  store [5 x i8] %144, [5 x i8]* %142
  call void @_ZN7ap_uintILi17EEC1ILi35ELi34EL9ap_q_mode5EL9ap_o_mode3ELi0EEERK9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_uint.16* %1, %class.ap_ufixed.18* %28)
  %145 = getelementptr %class.ap_uint.16* %1, i32 0, i32 0
  %146 = bitcast i24* %32 to [3 x i8]*
  %147 = load [3 x i8]* %145
  store [3 x i8] %147, [3 x i8]* %146, align 1
  %148 = load i24* %32
  ret i24 %148
}

declare i24 @_ZrsILi17EE7ap_uintIXT_EES1_i(i24, i32)

declare i64 @_ZNK7ap_uintILi17EEcvmEv(%class.ap_uint.16*)

declare void @_ZN9ap_ufixedILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1Ei(%class.ap_ufixed.17*, i32)

declare void @_ZN9ap_ufixedILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0EEixEj(%struct.af_bit_ref* sret, %class.ap_ufixed.17*, i32)

declare %struct.af_bit_ref* @_ZN10af_bit_refILi34ELi33ELb0EL9ap_q_mode5EL9ap_o_mode3ELi0EEaSEb(%struct.af_bit_ref*, i1 zeroext)

declare void @_ZN9ap_ufixedILi35ELi34EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1Ei(%class.ap_ufixed.18*, i32)

declare void @_ZN9ap_ufixedILi36ELi35EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi33ELi33ELS0_5ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_ufixed.19*, %class.ap_ufixed*)

declare void @_ZN9ap_ufixedILi36ELi35EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi69ELi33ELS0_5ELS1_3ELi0EEERK8ap_fixedIXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_ufixed.19*, %class.ap_fixed*)

declare { i64, i8 } @_ZplILi35ELi34EL9ap_q_mode5EL9ap_o_mode3ELi0ELi34ELi33ELS0_5ELS1_3ELi0EE8ap_fixedIXplT_T4_EXT5_EXT1_EXT2_EXT3_EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_IXT4_EXT5_EXT6_EXT7_EXT8_EE(i40, i40)

declare i40 @_ZlsILi35ELi34EL9ap_q_mode5EL9ap_o_mode3ELi0EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES3_i(i40, i32)

declare zeroext i1 @_ZgeILi36ELi35EL9ap_q_mode5EL9ap_o_mode3ELi0ELi36ELi35ELS0_5ELS1_3ELi0EEb9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES2_IXT4_EXT5_EXT6_EXT7_EXT8_EE(i40, i40)

declare i40 @_ZmIILi36ELi35EL9ap_q_mode5EL9ap_o_mode3ELi0ELi36ELi35ELS0_5ELS1_3ELi0EE9ap_ufixedIXT_EXT5_EXT1_EXT2_EXT3_EERS2_IXT_EXT0_EXT1_EXT2_EXT3_EES2_IXT4_EXT5_EXT6_EXT7_EXT8_EE(%class.ap_ufixed.19*, i40)

declare %class.ap_ufixed.17* @_ZN9ap_ufixedILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0EEaSERKS2_(%class.ap_ufixed.17*, %class.ap_ufixed.17*)

declare %class.ap_ufixed.18* @_ZN9ap_ufixedILi35ELi34EL9ap_q_mode5EL9ap_o_mode3ELi0EEaSERKS2_(%class.ap_ufixed.18*, %class.ap_ufixed.18*)

declare void @_ZN9ap_ufixedILi35ELi34EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi69ELi33ELS0_5ELS1_3ELi0EEERK8ap_fixedIXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_ufixed.18*, %class.ap_fixed*)

declare %class.ap_ufixed.17* @_ZrSILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0EER9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_i(%class.ap_ufixed.17*, i32)

declare %class.ap_ufixed.19* @_ZlSILi36ELi35EL9ap_q_mode5EL9ap_o_mode3ELi0EER9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_i(%class.ap_ufixed.19*, i32)

declare void @_ZN7ap_uintILi17EEC1ILi35ELi34EL9ap_q_mode5EL9ap_o_mode3ELi0EEERK9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_uint.16*, %class.ap_ufixed.18*)

declare i40 @_ZrsILi35ELi34EL9ap_q_mode5EL9ap_o_mode3ELi0EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES3_i(i40, i32)

define internal i32 @_ZL11xFInverse247ap_uintILi24EEiPc(i24 %in_val.coerce, i32 %m, i8* %n) uwtable {
  %in_val = alloca %class.ap_uint.20, align 4
  %1 = alloca i24
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %out_val = alloca i32, align 4
  %s = alloca i8, align 1
  %4 = alloca %class.ap_uint.20, align 1
  %5 = alloca i24
  %6 = alloca %class.ap_uint.20, align 1
  %7 = alloca i24
  %8 = getelementptr %class.ap_uint.20* %in_val, i32 0, i32 0
  store i24 %in_val.coerce, i24* %1
  %9 = bitcast i24* %1 to [3 x i8]*
  %10 = load [3 x i8]* %9, align 1
  store [3 x i8] %10, [3 x i8]* %8
  store i32 %m, i32* %2, align 4
  store i8* %n, i8** %3, align 8
  %11 = bitcast %class.ap_uint.20* %4 to i8*
  %12 = bitcast %class.ap_uint.20* %in_val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 3, i32 1, i1 false)
  %13 = getelementptr %class.ap_uint.20* %4, i32 0, i32 0
  %14 = bitcast i24* %5 to [3 x i8]*
  %15 = load [3 x i8]* %13
  store [3 x i8] %15, [3 x i8]* %14, align 1
  %16 = load i24* %5
  %17 = call signext i8 @_ZL18xFIdentifySignBits7ap_uintILi24EE(i24 %16)
  store i8 %17, i8* %s, align 1
  %18 = bitcast %class.ap_uint.20* %6 to i8*
  %19 = bitcast %class.ap_uint.20* %in_val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 3, i32 1, i1 false)
  %20 = load i32* %2, align 4
  %21 = load i8* %s, align 1
  %22 = load i8** %3, align 8
  %23 = getelementptr %class.ap_uint.20* %6, i32 0, i32 0
  %24 = bitcast i24* %7 to [3 x i8]*
  %25 = load [3 x i8]* %23
  store [3 x i8] %25, [3 x i8]* %24, align 1
  %26 = load i24* %7
  %27 = call i32 @_ZL17xFInverse24Kernel7ap_uintILi24EEicPc(i24 %26, i32 %20, i8 signext %21, i8* %22)
  store i32 %27, i32* %out_val, align 4
  %28 = load i32* %out_val, align 4
  ret i32 %28
}

declare void @_ZN7ap_uintILi24EEC1ILi26EEERKS_IXT_EE(%class.ap_uint.20*, %class.ap_uint.13*)

define internal signext i8 @_ZL18xFIdentifySignBits7ap_uintILi24EE(i24 %in_val.coerce) uwtable {
  %in_val = alloca %class.ap_uint.20, align 4
  %1 = alloca i24
  %flag = alloca %class.ap_uint.21, align 1
  %counter = alloca i8, align 1
  %sign_bit = alloca %class.ap_uint.21, align 1
  %i = alloca %class.ap_uint.22, align 1
  %2 = alloca %class.ap_uint.22, align 1
  %3 = alloca %class.ap_uint.21, align 1
  %bit_val = alloca i8, align 1
  %4 = alloca %class.ap_uint.21, align 1
  %5 = alloca %class.ap_uint.22, align 1
  %6 = getelementptr %class.ap_uint.20* %in_val, i32 0, i32 0
  store i24 %in_val.coerce, i24* %1
  %7 = bitcast i24* %1 to [3 x i8]*
  %8 = load [3 x i8]* %7, align 1
  store [3 x i8] %8, [3 x i8]* %6
  call void @_ZN7ap_uintILi1EEC1Ei(%class.ap_uint.21* %flag, i32 0)
  store i8 0, i8* %counter, align 1
  %9 = call i64* @_ZN7ap_uintILi24EE5rangeEii(%class.ap_uint.20* %in_val, i32 23, i32 23)
  %10 = load i64* %9
  call void @_ZN7ap_uintILi1EEC1Em(%class.ap_uint.21* %sign_bit, i64 %10)
  br label %11

; <label>:11                                      ; preds = %0
  call void @_ZN7ap_uintILi5EEC1Ei(%class.ap_uint.22* %i, i32 0)
  br label %12

; <label>:12                                      ; preds = %53, %11
  %13 = bitcast %class.ap_uint.22* %2 to i8*
  %14 = bitcast %class.ap_uint.22* %i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 1, i32 1, i1 false)
  %15 = getelementptr %class.ap_uint.22* %2, i32 0, i32 0
  %16 = bitcast [1 x i8]* %15 to i8*
  %17 = load i8* %16, align 1
  %18 = call zeroext i1 @_ZltILi5EEb7ap_uintIXT_EEi(i8 %17, i32 24)
  br i1 %18, label %19, label %57

; <label>:19                                      ; preds = %12
  %20 = bitcast %class.ap_uint.21* %3 to i8*
  %21 = bitcast %class.ap_uint.21* %flag to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 1, i32 1, i1 false)
  %22 = getelementptr %class.ap_uint.21* %3, i32 0, i32 0
  %23 = bitcast [1 x i8]* %22 to i8*
  %24 = load i8* %23, align 1
  %25 = call zeroext i1 @_ZeqILi1EEb7ap_uintIXT_EEi(i8 %24, i32 0)
  br i1 %25, label %26, label %52

; <label>:26                                      ; preds = %19
  %27 = load i8* %counter, align 1
  %28 = sext i8 %27 to i32
  %29 = sub nsw i32 23, %28
  %30 = load i8* %counter, align 1
  %31 = sext i8 %30 to i32
  %32 = sub nsw i32 23, %31
  %33 = call i64* @_ZN7ap_uintILi24EE5rangeEii(%class.ap_uint.20* %in_val, i32 %29, i32 %32)
  %34 = load i64* %33
  %35 = icmp ne i64 %34, 0
  %36 = zext i1 %35 to i8
  store i8 %36, i8* %bit_val, align 1
  %37 = load i8* %bit_val, align 1
  %38 = trunc i8 %37 to i1
  %39 = zext i1 %38 to i32
  %40 = bitcast %class.ap_uint.21* %4 to i8*
  %41 = bitcast %class.ap_uint.21* %sign_bit to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 1, i32 1, i1 false)
  %42 = getelementptr %class.ap_uint.21* %4, i32 0, i32 0
  %43 = bitcast [1 x i8]* %42 to i8*
  %44 = load i8* %43, align 1
  %45 = call zeroext i1 @_ZeqILi1EEbi7ap_uintIXT_EE(i32 %39, i8 %44)
  br i1 %45, label %46, label %49

; <label>:46                                      ; preds = %26
  %47 = load i8* %counter, align 1
  %48 = add i8 %47, 1
  store i8 %48, i8* %counter, align 1
  br label %51

; <label>:49                                      ; preds = %26
  %50 = call %class.ap_uint.21* @_ZN7ap_uintILi1EEaSEi(%class.ap_uint.21* %flag, i32 1)
  br label %51

; <label>:51                                      ; preds = %49, %46
  br label %52

; <label>:52                                      ; preds = %51, %19
  br label %53

; <label>:53                                      ; preds = %52
  %54 = call i8 @_ZN7ap_uintILi5EEppEi(%class.ap_uint.22* %i, i32 0)
  %55 = getelementptr %class.ap_uint.22* %5, i32 0, i32 0
  %56 = bitcast [1 x i8]* %55 to i8*
  store i8 %54, i8* %56, align 1
  br label %12

; <label>:57                                      ; preds = %12
  %58 = load i8* %counter, align 1
  ret i8 %58
}

define internal i32 @_ZL17xFInverse24Kernel7ap_uintILi24EEicPc(i24 %in_val.coerce, i32 %m, i8 signext %s, i8* %n) uwtable {
  %in_val = alloca %class.ap_uint.20, align 4
  %1 = alloca i24
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  %4 = alloca i8*, align 8
  %catch_val = alloca %class.ap_uint.20, align 1
  %5 = alloca %class.ap_uint.20, align 1
  %6 = alloca i24
  %7 = alloca i24
  %m1 = alloca i32, align 4
  %in_val_shifted = alloca i16, align 2
  %n2 = alloca i8, align 1
  %out_val = alloca i32, align 4
  %_out = alloca i32, align 4
  %tmp_n = alloca i8, align 1
  %tmp_n_2 = alloca i8, align 1
  %8 = getelementptr %class.ap_uint.20* %in_val, i32 0, i32 0
  store i24 %in_val.coerce, i24* %1
  %9 = bitcast i24* %1 to [3 x i8]*
  %10 = load [3 x i8]* %9, align 1
  store [3 x i8] %10, [3 x i8]* %8
  store i32 %m, i32* %2, align 4
  store i8 %s, i8* %3, align 1
  store i8* %n, i8** %4, align 8
  %11 = bitcast %class.ap_uint.20* %5 to i8*
  %12 = bitcast %class.ap_uint.20* %in_val to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 3, i32 1, i1 false)
  %13 = load i8* %3, align 1
  %14 = getelementptr %class.ap_uint.20* %5, i32 0, i32 0
  %15 = bitcast i24* %6 to [3 x i8]*
  %16 = load [3 x i8]* %14
  store [3 x i8] %16, [3 x i8]* %15, align 1
  %17 = load i24* %6
  %18 = call i24 @_ZlsILi24EE7ap_uintIXT_EES1_c(i24 %17, i8 signext %13)
  %19 = getelementptr %class.ap_uint.20* %catch_val, i32 0, i32 0
  store i24 %18, i24* %7
  %20 = bitcast i24* %7 to [3 x i8]*
  %21 = load [3 x i8]* %20, align 1
  store [3 x i8] %21, [3 x i8]* %19
  %22 = load i32* %2, align 4
  %23 = load i8* %3, align 1
  %24 = sext i8 %23 to i32
  %25 = sub nsw i32 %22, %24
  store i32 %25, i32* %m1, align 4
  %26 = call i64* @_ZN7ap_uintILi24EE5rangeEii(%class.ap_uint.20* %catch_val, i32 23, i32 8)
  %27 = load i64* %26
  %28 = trunc i64 %27 to i16
  store i16 %28, i16* %in_val_shifted, align 2
  %29 = load i16* %in_val_shifted, align 2
  %30 = load i32* %m1, align 4
  %31 = call i32 @_ZL20p_ZN2xf7InverseEtiPctiPc(i16 zeroext %29, i32 %30, i8* %n2)
  store i32 %31, i32* %out_val, align 4
  %32 = load i32* %out_val, align 4
  store i32 %32, i32* %_out, align 4
  %33 = load i8* %n2, align 1
  %34 = load i8** %4, align 8
  store i8 %33, i8* %34, align 1
  %35 = load i8* %n2, align 1
  %36 = sext i8 %35 to i32
  %37 = load i8* %3, align 1
  %38 = sext i8 %37 to i32
  %39 = sub nsw i32 %36, %38
  %40 = trunc i32 %39 to i8
  store i8 %40, i8* %tmp_n, align 1
  %41 = load i8* %tmp_n, align 1
  %42 = sext i8 %41 to i32
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %44, label %60

; <label>:44                                      ; preds = %0
  %45 = load i8* %tmp_n, align 1
  %46 = sext i8 %45 to i32
  %47 = sub nsw i32 0, %46
  %48 = trunc i32 %47 to i8
  store i8 %48, i8* %tmp_n_2, align 1
  store i8 0, i8* %tmp_n, align 1
  %49 = load i32* %out_val, align 4
  %50 = load i8* %tmp_n_2, align 1
  %51 = sext i8 %50 to i32
  %52 = shl i32 %49, %51
  store i32 %52, i32* %_out, align 4
  %53 = load i8* %n2, align 1
  %54 = sext i8 %53 to i32
  %55 = load i8* %tmp_n_2, align 1
  %56 = sext i8 %55 to i32
  %57 = add nsw i32 %54, %56
  %58 = trunc i32 %57 to i8
  %59 = load i8** %4, align 8
  store i8 %58, i8* %59, align 1
  br label %60

; <label>:60                                      ; preds = %44, %0
  %61 = load i32* %_out, align 4
  ret i32 %61
}

declare i24 @_ZlsILi24EE7ap_uintIXT_EES1_c(i24, i8 signext)

declare i64* @_ZN7ap_uintILi24EE5rangeEii(%class.ap_uint.20*, i32, i32)

declare void @_ZN7ap_uintILi1EEC1Ei(%class.ap_uint.21*, i32)

declare void @_ZN7ap_uintILi1EEC1Em(%class.ap_uint.21*, i64)

declare void @_ZN7ap_uintILi5EEC1Ei(%class.ap_uint.22*, i32)

declare zeroext i1 @_ZltILi5EEb7ap_uintIXT_EEi(i8, i32)

declare zeroext i1 @_ZeqILi1EEb7ap_uintIXT_EEi(i8, i32)

declare zeroext i1 @_ZeqILi1EEbi7ap_uintIXT_EE(i32, i8)

declare %class.ap_uint.21* @_ZN7ap_uintILi1EEaSEi(%class.ap_uint.21*, i32)

declare i8 @_ZN7ap_uintILi5EEppEi(%class.ap_uint.22*, i32)

declare void @_ZN7ap_uintILi51EEC1Ev(%class.ap_uint.23*)

declare %class.ap_uint.23* @_ZN7ap_uintILi51EEaSILi96EEERS0_RK6ap_intIXT_EE(%class.ap_uint.23*, %class.ap_int*)

declare { i64, i32 } @_ZplILi48ELi48EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i48, i48)

declare void @_ZN9ap_ufixedILi50ELi50EL9ap_q_mode5EL9ap_o_mode0ELi0EEC1Ev(%class.ap_ufixed.24*)

declare %class.ap_ufixed.24* @_ZN9ap_ufixedILi50ELi50EL9ap_q_mode5EL9ap_o_mode0ELi0EEaSERKS2_(%class.ap_ufixed.24*, %class.ap_ufixed.24*)

declare void @_ZN9ap_ufixedILi50ELi50EL9ap_q_mode5EL9ap_o_mode0ELi0EEC1ILi102EEERK6ap_intIXT_EE(%class.ap_ufixed.24*, %class.ap_int.25*)

declare { i64, i40 } @_ZplILi51ELi51EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i56, i56)

declare %class.ap_uint.13* @_ZN7ap_uintILi26EEaSILi24EEERS0_RKS_IXT_EE(%class.ap_uint.13*, %class.ap_uint.20*)

declare i24 @_ZplILi24EE7ap_uintIXT_EERKS1_i(%class.ap_uint.20*, i32)

define internal i24 @_ZL74p_Z9xFSqrtHOGILi24ELi50ELi50ELi5ELi0EE9ap_ufixedILi50ELi50ELi5ELi0ELi0EE_19ap_ufixedILi50ELi50EL9ap_q_mode5EL9ap_o_mode0ELi0EE(i56 %x.coerce) uwtable {
  %1 = alloca %class.ap_uint.20, align 1
  %x = alloca %class.ap_ufixed.24, align 8
  %2 = alloca i56
  %factor = alloca %class.ap_ufixed.26, align 1
  %offset = alloca i8, align 1
  %3 = alloca %struct.af_bit_ref.27, align 1
  %result = alloca %class.ap_ufixed.29, align 1
  %x2 = alloca %class.ap_ufixed.30, align 1
  %_s_i = alloca i32, align 4
  %_l_i = alloca i8, align 1
  %t = alloca %class.ap_ufixed.30, align 1
  %4 = alloca %class.ap_fixed.31, align 1
  %5 = alloca %class.ap_ufixed.29, align 1
  %6 = alloca %class.ap_ufixed.29, align 1
  %7 = alloca i56
  %8 = alloca i56
  %9 = alloca %class.ap_ufixed.26, align 1
  %10 = alloca i56
  %11 = alloca i56
  %12 = alloca { i64, i40 }
  %thisfactor = alloca %class.ap_ufixed.26, align 1
  %13 = alloca %class.ap_ufixed.30, align 1
  %14 = alloca %class.ap_ufixed.30, align 1
  %15 = alloca i56
  %16 = alloca i56
  %17 = alloca %class.ap_ufixed.30, align 1
  %18 = alloca i56
  %19 = alloca %class.ap_ufixed.30, align 1
  %20 = alloca i56
  %21 = alloca %class.ap_ufixed.29, align 1
  %22 = alloca %class.ap_fixed.31, align 1
  %23 = alloca %class.ap_ufixed.29, align 1
  %24 = alloca %class.ap_ufixed.26, align 1
  %25 = alloca i56
  %26 = alloca i56
  %27 = alloca { i64, i40 }
  %28 = alloca %class.ap_ufixed.29, align 1
  %29 = alloca %class.ap_ufixed.29, align 1
  %30 = alloca i56
  %31 = alloca i56
  %32 = alloca i24
  %33 = getelementptr %class.ap_ufixed.24* %x, i32 0, i32 0
  store i56 %x.coerce, i56* %2
  %34 = bitcast i56* %2 to [7 x i8]*
  %35 = load [7 x i8]* %34, align 1
  store [7 x i8] %35, [7 x i8]* %33
  call void @_ZN9ap_ufixedILi51ELi50EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1Ei(%class.ap_ufixed.26* %factor, i32 0)
  store i8 1, i8* %offset, align 1
  %36 = load i8* %offset, align 1
  %37 = trunc i8 %36 to i1
  %38 = zext i1 %37 to i32
  %39 = sub nsw i32 50, %38
  call void @_ZN9ap_ufixedILi51ELi50EL9ap_q_mode5EL9ap_o_mode3ELi0EEixEj(%struct.af_bit_ref.27* sret %3, %class.ap_ufixed.26* %factor, i32 %39)
  %40 = call %struct.af_bit_ref.27* @_ZN10af_bit_refILi51ELi50ELb0EL9ap_q_mode5EL9ap_o_mode3ELi0EEaSEb(%struct.af_bit_ref.27* %3, i1 zeroext true)
  call void @_ZN9ap_ufixedILi52ELi51EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1Ei(%class.ap_ufixed.29* %result, i32 0)
  call void @_ZN9ap_ufixedILi53ELi52EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi50ELi50ELS0_5ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_ufixed.30* %x2, %class.ap_ufixed.24* %x)
  %41 = load i8* %offset, align 1
  %42 = trunc i8 %41 to i1
  %43 = zext i1 %42 to i32
  %44 = sub nsw i32 51, %43
  %45 = trunc i32 %44 to i8
  %46 = zext i8 %45 to i32
  store i32 %46, i32* %_s_i, align 4
  %47 = load i8* %offset, align 1
  %48 = trunc i8 %47 to i1
  %49 = zext i1 %48 to i32
  %50 = sub nsw i32 51, %49
  %51 = trunc i32 %50 to i8
  store i8 %51, i8* %_l_i, align 1
  %52 = load i8* %offset, align 1
  %53 = trunc i8 %52 to i1
  %54 = zext i1 %53 to i32
  %55 = sub nsw i32 51, %54
  %56 = trunc i32 %55 to i8
  %57 = zext i8 %56 to i32
  store i32 %57, i32* %_s_i, align 4
  br label %58

; <label>:58                                      ; preds = %131, %0
  %59 = load i32* %_s_i, align 4
  %60 = icmp sge i32 %59, 25
  br i1 %60, label %61, label %134

; <label>:61                                      ; preds = %58
  %62 = bitcast %class.ap_ufixed.29* %6 to i8*
  %63 = bitcast %class.ap_ufixed.29* %result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %63, i64 7, i32 1, i1 false)
  %64 = getelementptr %class.ap_ufixed.29* %6, i32 0, i32 0
  %65 = bitcast i56* %7 to [7 x i8]*
  %66 = load [7 x i8]* %64
  store [7 x i8] %66, [7 x i8]* %65, align 1
  %67 = load i56* %7
  %68 = call i56 @_ZlsILi52ELi51EL9ap_q_mode5EL9ap_o_mode3ELi0EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES3_i(i56 %67, i32 1)
  %69 = getelementptr %class.ap_ufixed.29* %5, i32 0, i32 0
  store i56 %68, i56* %8
  %70 = bitcast i56* %8 to [7 x i8]*
  %71 = load [7 x i8]* %70, align 1
  store [7 x i8] %71, [7 x i8]* %69
  %72 = bitcast %class.ap_ufixed.26* %9 to i8*
  %73 = bitcast %class.ap_ufixed.26* %factor to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 7, i32 1, i1 false)
  %74 = getelementptr %class.ap_ufixed.29* %5, i32 0, i32 0
  %75 = bitcast i56* %10 to [7 x i8]*
  %76 = load [7 x i8]* %74
  store [7 x i8] %76, [7 x i8]* %75, align 1
  %77 = load i56* %10
  %78 = getelementptr %class.ap_ufixed.26* %9, i32 0, i32 0
  %79 = bitcast i56* %11 to [7 x i8]*
  %80 = load [7 x i8]* %78
  store [7 x i8] %80, [7 x i8]* %79, align 1
  %81 = load i56* %11
  %82 = call { i64, i40 } @_ZplILi52ELi51EL9ap_q_mode5EL9ap_o_mode3ELi0ELi51ELi50ELS0_5ELS1_3ELi0EE8ap_fixedIXplT_T4_EXT5_EXT1_EXT2_EXT3_EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_IXT4_EXT5_EXT6_EXT7_EXT8_EE(i56 %77, i56 %81)
  %83 = getelementptr %class.ap_fixed.31* %4, i32 0, i32 0
  store { i64, i40 } %82, { i64, i40 }* %12
  %84 = bitcast { i64, i40 }* %12 to [13 x i8]*
  %85 = load [13 x i8]* %84, align 1
  store [13 x i8] %85, [13 x i8]* %83
  call void @_ZN9ap_ufixedILi53ELi52EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi103ELi50ELS0_5ELS1_3ELi0EEERK8ap_fixedIXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_ufixed.30* %t, %class.ap_fixed.31* %4)
  call void @_ZN9ap_ufixedILi51ELi50EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1Ei(%class.ap_ufixed.26* %thisfactor, i32 0)
  %86 = bitcast %class.ap_ufixed.30* %13 to i8*
  %87 = bitcast %class.ap_ufixed.30* %x2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 7, i32 1, i1 false)
  %88 = bitcast %class.ap_ufixed.30* %14 to i8*
  %89 = bitcast %class.ap_ufixed.30* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 7, i32 1, i1 false)
  %90 = getelementptr %class.ap_ufixed.30* %13, i32 0, i32 0
  %91 = bitcast i56* %15 to [7 x i8]*
  %92 = load [7 x i8]* %90
  store [7 x i8] %92, [7 x i8]* %91, align 1
  %93 = load i56* %15
  %94 = getelementptr %class.ap_ufixed.30* %14, i32 0, i32 0
  %95 = bitcast i56* %16 to [7 x i8]*
  %96 = load [7 x i8]* %94
  store [7 x i8] %96, [7 x i8]* %95, align 1
  %97 = load i56* %16
  %98 = call zeroext i1 @_ZgeILi53ELi52EL9ap_q_mode5EL9ap_o_mode3ELi0ELi53ELi52ELS0_5ELS1_3ELi0EEb9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES2_IXT4_EXT5_EXT6_EXT7_EXT8_EE(i56 %93, i56 %97)
  br i1 %98, label %99, label %111

; <label>:99                                      ; preds = %61
  %100 = bitcast %class.ap_ufixed.30* %17 to i8*
  %101 = bitcast %class.ap_ufixed.30* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 7, i32 1, i1 false)
  %102 = getelementptr %class.ap_ufixed.30* %17, i32 0, i32 0
  %103 = bitcast i56* %18 to [7 x i8]*
  %104 = load [7 x i8]* %102
  store [7 x i8] %104, [7 x i8]* %103, align 1
  %105 = load i56* %18
  %106 = call i56 @_ZmIILi53ELi52EL9ap_q_mode5EL9ap_o_mode3ELi0ELi53ELi52ELS0_5ELS1_3ELi0EE9ap_ufixedIXT_EXT5_EXT1_EXT2_EXT3_EERS2_IXT_EXT0_EXT1_EXT2_EXT3_EES2_IXT4_EXT5_EXT6_EXT7_EXT8_EE(%class.ap_ufixed.30* %x2, i56 %105)
  %107 = getelementptr %class.ap_ufixed.30* %19, i32 0, i32 0
  store i56 %106, i56* %20
  %108 = bitcast i56* %20 to [7 x i8]*
  %109 = load [7 x i8]* %108, align 1
  store [7 x i8] %109, [7 x i8]* %107
  %110 = call %class.ap_ufixed.26* @_ZN9ap_ufixedILi51ELi50EL9ap_q_mode5EL9ap_o_mode3ELi0EEaSERKS2_(%class.ap_ufixed.26* %thisfactor, %class.ap_ufixed.26* %factor)
  br label %111

; <label>:111                                     ; preds = %99, %61
  %112 = bitcast %class.ap_ufixed.29* %23 to i8*
  %113 = bitcast %class.ap_ufixed.29* %result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %112, i8* %113, i64 7, i32 1, i1 false)
  %114 = bitcast %class.ap_ufixed.26* %24 to i8*
  %115 = bitcast %class.ap_ufixed.26* %thisfactor to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 7, i32 1, i1 false)
  %116 = getelementptr %class.ap_ufixed.29* %23, i32 0, i32 0
  %117 = bitcast i56* %25 to [7 x i8]*
  %118 = load [7 x i8]* %116
  store [7 x i8] %118, [7 x i8]* %117, align 1
  %119 = load i56* %25
  %120 = getelementptr %class.ap_ufixed.26* %24, i32 0, i32 0
  %121 = bitcast i56* %26 to [7 x i8]*
  %122 = load [7 x i8]* %120
  store [7 x i8] %122, [7 x i8]* %121, align 1
  %123 = load i56* %26
  %124 = call { i64, i40 } @_ZplILi52ELi51EL9ap_q_mode5EL9ap_o_mode3ELi0ELi51ELi50ELS0_5ELS1_3ELi0EE8ap_fixedIXplT_T4_EXT5_EXT1_EXT2_EXT3_EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_IXT4_EXT5_EXT6_EXT7_EXT8_EE(i56 %119, i56 %123)
  %125 = getelementptr %class.ap_fixed.31* %22, i32 0, i32 0
  store { i64, i40 } %124, { i64, i40 }* %27
  %126 = bitcast { i64, i40 }* %27 to [13 x i8]*
  %127 = load [13 x i8]* %126, align 1
  store [13 x i8] %127, [13 x i8]* %125
  call void @_ZN9ap_ufixedILi52ELi51EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi103ELi50ELS0_5ELS1_3ELi0EEERK8ap_fixedIXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_ufixed.29* %21, %class.ap_fixed.31* %22)
  %128 = call %class.ap_ufixed.29* @_ZN9ap_ufixedILi52ELi51EL9ap_q_mode5EL9ap_o_mode3ELi0EEaSERKS2_(%class.ap_ufixed.29* %result, %class.ap_ufixed.29* %21)
  %129 = call %class.ap_ufixed.26* @_ZrSILi51ELi50EL9ap_q_mode5EL9ap_o_mode3ELi0EER9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_i(%class.ap_ufixed.26* %factor, i32 1)
  %130 = call %class.ap_ufixed.30* @_ZlSILi53ELi52EL9ap_q_mode5EL9ap_o_mode3ELi0EER9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_i(%class.ap_ufixed.30* %x2, i32 1)
  br label %131

; <label>:131                                     ; preds = %111
  %132 = load i32* %_s_i, align 4
  %133 = add nsw i32 %132, -1
  store i32 %133, i32* %_s_i, align 4
  br label %58

; <label>:134                                     ; preds = %58
  %135 = bitcast %class.ap_ufixed.29* %29 to i8*
  %136 = bitcast %class.ap_ufixed.29* %result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %135, i8* %136, i64 7, i32 1, i1 false)
  %137 = getelementptr %class.ap_ufixed.29* %29, i32 0, i32 0
  %138 = bitcast i56* %30 to [7 x i8]*
  %139 = load [7 x i8]* %137
  store [7 x i8] %139, [7 x i8]* %138, align 1
  %140 = load i56* %30
  %141 = call i56 @_ZrsILi52ELi51EL9ap_q_mode5EL9ap_o_mode3ELi0EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES3_i(i56 %140, i32 24)
  %142 = getelementptr %class.ap_ufixed.29* %28, i32 0, i32 0
  store i56 %141, i56* %31
  %143 = bitcast i56* %31 to [7 x i8]*
  %144 = load [7 x i8]* %143, align 1
  store [7 x i8] %144, [7 x i8]* %142
  call void @_ZN7ap_uintILi24EEC1ILi52ELi51EL9ap_q_mode5EL9ap_o_mode3ELi0EEERK9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_uint.20* %1, %class.ap_ufixed.29* %28)
  %145 = getelementptr %class.ap_uint.20* %1, i32 0, i32 0
  %146 = bitcast i24* %32 to [3 x i8]*
  %147 = load [3 x i8]* %145
  store [3 x i8] %147, [3 x i8]* %146, align 1
  %148 = load i24* %32
  ret i24 %148
}

declare void @_ZN9ap_ufixedILi51ELi50EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1Ei(%class.ap_ufixed.26*, i32)

declare void @_ZN9ap_ufixedILi51ELi50EL9ap_q_mode5EL9ap_o_mode3ELi0EEixEj(%struct.af_bit_ref.27* sret, %class.ap_ufixed.26*, i32)

declare %struct.af_bit_ref.27* @_ZN10af_bit_refILi51ELi50ELb0EL9ap_q_mode5EL9ap_o_mode3ELi0EEaSEb(%struct.af_bit_ref.27*, i1 zeroext)

declare void @_ZN9ap_ufixedILi52ELi51EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1Ei(%class.ap_ufixed.29*, i32)

declare void @_ZN9ap_ufixedILi53ELi52EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi50ELi50ELS0_5ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_ufixed.30*, %class.ap_ufixed.24*)

declare void @_ZN9ap_ufixedILi53ELi52EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi103ELi50ELS0_5ELS1_3ELi0EEERK8ap_fixedIXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_ufixed.30*, %class.ap_fixed.31*)

declare { i64, i40 } @_ZplILi52ELi51EL9ap_q_mode5EL9ap_o_mode3ELi0ELi51ELi50ELS0_5ELS1_3ELi0EE8ap_fixedIXplT_T4_EXT5_EXT1_EXT2_EXT3_EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_IXT4_EXT5_EXT6_EXT7_EXT8_EE(i56, i56)

declare i56 @_ZlsILi52ELi51EL9ap_q_mode5EL9ap_o_mode3ELi0EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES3_i(i56, i32)

declare zeroext i1 @_ZgeILi53ELi52EL9ap_q_mode5EL9ap_o_mode3ELi0ELi53ELi52ELS0_5ELS1_3ELi0EEb9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES2_IXT4_EXT5_EXT6_EXT7_EXT8_EE(i56, i56)

declare i56 @_ZmIILi53ELi52EL9ap_q_mode5EL9ap_o_mode3ELi0ELi53ELi52ELS0_5ELS1_3ELi0EE9ap_ufixedIXT_EXT5_EXT1_EXT2_EXT3_EERS2_IXT_EXT0_EXT1_EXT2_EXT3_EES2_IXT4_EXT5_EXT6_EXT7_EXT8_EE(%class.ap_ufixed.30*, i56)

declare %class.ap_ufixed.26* @_ZN9ap_ufixedILi51ELi50EL9ap_q_mode5EL9ap_o_mode3ELi0EEaSERKS2_(%class.ap_ufixed.26*, %class.ap_ufixed.26*)

declare %class.ap_ufixed.29* @_ZN9ap_ufixedILi52ELi51EL9ap_q_mode5EL9ap_o_mode3ELi0EEaSERKS2_(%class.ap_ufixed.29*, %class.ap_ufixed.29*)

declare void @_ZN9ap_ufixedILi52ELi51EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi103ELi50ELS0_5ELS1_3ELi0EEERK8ap_fixedIXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_ufixed.29*, %class.ap_fixed.31*)

declare %class.ap_ufixed.26* @_ZrSILi51ELi50EL9ap_q_mode5EL9ap_o_mode3ELi0EER9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_i(%class.ap_ufixed.26*, i32)

declare %class.ap_ufixed.30* @_ZlSILi53ELi52EL9ap_q_mode5EL9ap_o_mode3ELi0EER9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_i(%class.ap_ufixed.30*, i32)

declare void @_ZN7ap_uintILi24EEC1ILi52ELi51EL9ap_q_mode5EL9ap_o_mode3ELi0EEERK9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_uint.20*, %class.ap_ufixed.29*)

declare i56 @_ZrsILi52ELi51EL9ap_q_mode5EL9ap_o_mode3ELi0EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES3_i(i56, i32)

define internal void @_ZL206p_Z19xFDHOGcomputeHistNOILi2160ELi3840ELi2ELi1ELi5ELi8ELi8ELi480ELi3840ELi8ELi20E7ap_uintILi25EELi9E7ap_uintILi48EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEEPA9_7ap_uintILi25EEP7ap_uintILi48EEPtt_1RN3hls6streamI7ap_uintILi16EEEES4_PA9_S1_ILi25EEPS1_ILi48EEPtt(%"class.hls::stream.8"* %_phase_strm, %"class.hls::stream.8"* %_mag_strm, [9 x %class.ap_uint.10]* %HA, %class.ap_uint.11* %ssv, i16* %bin_center, i16 zeroext %nohc) uwtable {
  %1 = alloca %"class.hls::stream.8"*, align 8
  %2 = alloca %"class.hls::stream.8"*, align 8
  %3 = alloca [9 x %class.ap_uint.10]*, align 8
  %4 = alloca %class.ap_uint.11*, align 8
  %5 = alloca i16*, align 8
  %6 = alloca i16, align 2
  %phase_data = alloca %class.ap_uint.9, align 1
  %mag_data = alloca %class.ap_uint.9, align 1
  %p = alloca %class.ap_uint.9, align 1
  %m = alloca %class.ap_uint.9, align 1
  %proc_loop = alloca i16, align 2
  %frac = alloca i16, align 2
  %step = alloca i8, align 1
  %bin_idx = alloca i8, align 1
  %i = alloca %class.ap_uint.9, align 1
  %j = alloca %class.ap_uint.9, align 1
  %r = alloca %class.ap_uint.9, align 1
  %k = alloca %class.ap_uint.0, align 1
  %bin = alloca [9 x %class.ap_uint.10], align 16
  %7 = alloca %class.ap_uint.9, align 1
  %8 = alloca %class.ap_uint.9, align 1
  %9 = alloca %class.ap_uint.9, align 1
  %10 = alloca %class.ap_uint.9, align 1
  %11 = alloca %class.ap_uint.9, align 1
  %12 = alloca %class.ap_uint.9, align 1
  %13 = alloca %class.ap_uint.0, align 1
  %14 = alloca %class.ap_uint.0, align 1
  %15 = alloca %class.ap_uint.9, align 1
  %16 = alloca %class.ap_uint.9, align 1
  %17 = alloca %class.ap_uint.9, align 1
  %18 = alloca %class.ap_uint.9, align 1
  %19 = alloca %class.ap_uint.9, align 1
  %20 = alloca %class.ap_uint.9, align 1
  %21 = alloca %class.ap_uint.9, align 1
  %22 = alloca %class.ap_uint.9, align 1
  %23 = alloca %class.ap_uint.0, align 1
  %24 = alloca %class.ap_uint.10, align 1
  %25 = alloca %class.ap_uint.0, align 1
  %tmp = alloca %class.ap_uint.11, align 1
  %26 = alloca %class.ap_uint.0, align 1
  %27 = alloca %class.ap_int.32, align 1
  %28 = alloca %class.ap_uint.10, align 1
  %29 = alloca %class.ap_uint.10, align 1
  %30 = alloca i56
  %31 = alloca i56
  %32 = alloca %class.ap_uint.0, align 1
  %33 = alloca %class.ap_uint.9, align 1
  %34 = alloca %class.ap_uint.9, align 1
  store %"class.hls::stream.8"* %_phase_strm, %"class.hls::stream.8"** %1, align 8
  store %"class.hls::stream.8"* %_mag_strm, %"class.hls::stream.8"** %2, align 8
  store [9 x %class.ap_uint.10]* %HA, [9 x %class.ap_uint.10]** %3, align 8
  store %class.ap_uint.11* %ssv, %class.ap_uint.11** %4, align 8
  store i16* %bin_center, i16** %5, align 8
  store i16 %nohc, i16* %6, align 2
  call void @_ZN7ap_uintILi16EEC1Ev(%class.ap_uint.9* %phase_data)
  call void @_ZN7ap_uintILi16EEC1Ev(%class.ap_uint.9* %mag_data)
  call void @_ZN7ap_uintILi16EEC1Ev(%class.ap_uint.9* %p)
  call void @_ZN7ap_uintILi16EEC1Ev(%class.ap_uint.9* %m)
  store i16 16, i16* %proc_loop, align 2
  store i8 16, i8* %step, align 1
  store i8 0, i8* %bin_idx, align 1
  call void @_ZN7ap_uintILi16EEC1Ev(%class.ap_uint.9* %i)
  call void @_ZN7ap_uintILi16EEC1Ev(%class.ap_uint.9* %j)
  call void @_ZN7ap_uintILi16EEC1Ev(%class.ap_uint.9* %r)
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %k)
  %35 = getelementptr inbounds [9 x %class.ap_uint.10]* %bin, i32 0, i32 0
  %36 = getelementptr inbounds %class.ap_uint.10* %35, i64 9
  br label %37

; <label>:37                                      ; preds = %37, %0
  %38 = phi %class.ap_uint.10* [ %35, %0 ], [ %39, %37 ]
  call void @_ZN7ap_uintILi25EEC1Ev(%class.ap_uint.10* %38)
  %39 = getelementptr inbounds %class.ap_uint.10* %38, i64 1
  %40 = icmp eq %class.ap_uint.10* %39, %36
  br i1 %40, label %41, label %37

; <label>:41                                      ; preds = %37
  br label %42

; <label>:42                                      ; preds = %41
  %43 = call %class.ap_uint.9* @_ZN7ap_uintILi16EEaSEi(%class.ap_uint.9* %i, i32 0)
  br label %44

; <label>:44                                      ; preds = %74, %42
  %45 = bitcast %class.ap_uint.9* %7 to i8*
  %46 = bitcast %class.ap_uint.9* %i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %45, i8* %46, i64 2, i32 1, i1 false)
  %47 = load i16* %6, align 2
  %48 = getelementptr %class.ap_uint.9* %7, i32 0, i32 0
  %49 = bitcast [2 x i8]* %48 to i16*
  %50 = load i16* %49, align 1
  %51 = call zeroext i1 @_ZltILi16EEb7ap_uintIXT_EEt(i16 %50, i16 zeroext %47)
  br i1 %51, label %52, label %78

; <label>:52                                      ; preds = %44
  br label %53

; <label>:53                                      ; preds = %52
  %54 = call %class.ap_uint.9* @_ZN7ap_uintILi16EEaSEi(%class.ap_uint.9* %j, i32 0)
  br label %55

; <label>:55                                      ; preds = %69, %53
  %56 = bitcast %class.ap_uint.9* %8 to i8*
  %57 = bitcast %class.ap_uint.9* %j to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 2, i32 1, i1 false)
  %58 = getelementptr %class.ap_uint.9* %8, i32 0, i32 0
  %59 = bitcast [2 x i8]* %58 to i16*
  %60 = load i16* %59, align 1
  %61 = call zeroext i1 @_ZltILi16EEb7ap_uintIXT_EEi(i16 %60, i32 9)
  br i1 %61, label %62, label %73

; <label>:62                                      ; preds = %55
  %63 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %j)
  %64 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %i)
  %65 = load [9 x %class.ap_uint.10]** %3, align 8
  %66 = getelementptr inbounds [9 x %class.ap_uint.10]* %65, i64 %64
  %67 = getelementptr inbounds [9 x %class.ap_uint.10]* %66, i32 0, i64 %63
  %68 = call %class.ap_uint.10* @_ZN7ap_uintILi25EEaSEi(%class.ap_uint.10* %67, i32 0)
  br label %69

; <label>:69                                      ; preds = %62
  %70 = call i16 @_ZN7ap_uintILi16EEppEi(%class.ap_uint.9* %j, i32 0)
  %71 = getelementptr %class.ap_uint.9* %9, i32 0, i32 0
  %72 = bitcast [2 x i8]* %71 to i16*
  store i16 %70, i16* %72, align 1
  br label %55

; <label>:73                                      ; preds = %55
  br label %74

; <label>:74                                      ; preds = %73
  %75 = call i16 @_ZN7ap_uintILi16EEppEi(%class.ap_uint.9* %i, i32 0)
  %76 = getelementptr %class.ap_uint.9* %10, i32 0, i32 0
  %77 = bitcast [2 x i8]* %76 to i16*
  store i16 %75, i16* %77, align 1
  br label %44

; <label>:78                                      ; preds = %44
  br label %79

; <label>:79                                      ; preds = %78
  %80 = call %class.ap_uint.9* @_ZN7ap_uintILi16EEaSEi(%class.ap_uint.9* %i, i32 0)
  br label %81

; <label>:81                                      ; preds = %260, %79
  %82 = bitcast %class.ap_uint.9* %11 to i8*
  %83 = bitcast %class.ap_uint.9* %i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %83, i64 2, i32 1, i1 false)
  %84 = getelementptr %class.ap_uint.9* %11, i32 0, i32 0
  %85 = bitcast [2 x i8]* %84 to i16*
  %86 = load i16* %85, align 1
  %87 = call zeroext i1 @_ZltILi16EEb7ap_uintIXT_EEi(i16 %86, i32 8)
  br i1 %87, label %88, label %264

; <label>:88                                      ; preds = %81
  br label %89

; <label>:89                                      ; preds = %88
  %90 = call %class.ap_uint.9* @_ZN7ap_uintILi16EEaSEi(%class.ap_uint.9* %r, i32 0)
  br label %91

; <label>:91                                      ; preds = %255, %89
  %92 = bitcast %class.ap_uint.9* %12 to i8*
  %93 = bitcast %class.ap_uint.9* %r to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %92, i8* %93, i64 2, i32 1, i1 false)
  %94 = load i16* %6, align 2
  %95 = getelementptr %class.ap_uint.9* %12, i32 0, i32 0
  %96 = bitcast [2 x i8]* %95 to i16*
  %97 = load i16* %96, align 1
  %98 = call zeroext i1 @_ZltILi16EEb7ap_uintIXT_EEt(i16 %97, i16 zeroext %94)
  br i1 %98, label %99, label %259

; <label>:99                                      ; preds = %91
  br label %100

; <label>:100                                     ; preds = %99
  %101 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %k, i32 0)
  br label %102

; <label>:102                                     ; preds = %113, %100
  %103 = bitcast %class.ap_uint.0* %13 to i8*
  %104 = bitcast %class.ap_uint.0* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %104, i64 1, i32 1, i1 false)
  %105 = getelementptr %class.ap_uint.0* %13, i32 0, i32 0
  %106 = bitcast [1 x i8]* %105 to i8*
  %107 = load i8* %106, align 1
  %108 = call zeroext i1 @_ZltILi8EEb7ap_uintIXT_EEi(i8 %107, i32 9)
  br i1 %108, label %109, label %117

; <label>:109                                     ; preds = %102
  %110 = call i64 @_ZNK7ap_uintILi8EEcvmEv(%class.ap_uint.0* %k)
  %111 = getelementptr inbounds [9 x %class.ap_uint.10]* %bin, i32 0, i64 %110
  %112 = call %class.ap_uint.10* @_ZN7ap_uintILi25EEaSEi(%class.ap_uint.10* %111, i32 0)
  br label %113

; <label>:113                                     ; preds = %109
  %114 = call i8 @_ZN7ap_uintILi8EEppEi(%class.ap_uint.0* %k, i32 0)
  %115 = getelementptr %class.ap_uint.0* %14, i32 0, i32 0
  %116 = bitcast [1 x i8]* %115 to i8*
  store i8 %114, i8* %116, align 1
  br label %102

; <label>:117                                     ; preds = %102
  br label %118

; <label>:118                                     ; preds = %117
  %119 = call %class.ap_uint.9* @_ZN7ap_uintILi16EEaSEi(%class.ap_uint.9* %j, i32 0)
  br label %120

; <label>:120                                     ; preds = %174, %118
  %121 = bitcast %class.ap_uint.9* %15 to i8*
  %122 = bitcast %class.ap_uint.9* %j to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %121, i8* %122, i64 2, i32 1, i1 false)
  %123 = getelementptr %class.ap_uint.9* %15, i32 0, i32 0
  %124 = bitcast [2 x i8]* %123 to i16*
  %125 = load i16* %124, align 1
  %126 = call zeroext i1 @_ZltILi16EEb7ap_uintIXT_EEi(i16 %125, i32 8)
  br i1 %126, label %127, label %178

; <label>:127                                     ; preds = %120
  %128 = load %"class.hls::stream.8"** %1, align 8
  %129 = call i16 @_ZN3hls6streamI7ap_uintILi16EEE4readEv(%"class.hls::stream.8"* %128)
  %130 = getelementptr %class.ap_uint.9* %16, i32 0, i32 0
  %131 = bitcast [2 x i8]* %130 to i16*
  store i16 %129, i16* %131, align 1
  %132 = call %class.ap_uint.9* @_ZN7ap_uintILi16EEaSERKS0_(%class.ap_uint.9* %phase_data, %class.ap_uint.9* %16)
  %133 = load %"class.hls::stream.8"** %2, align 8
  %134 = call i16 @_ZN3hls6streamI7ap_uintILi16EEE4readEv(%"class.hls::stream.8"* %133)
  %135 = getelementptr %class.ap_uint.9* %17, i32 0, i32 0
  %136 = bitcast [2 x i8]* %135 to i16*
  store i16 %134, i16* %136, align 1
  %137 = call %class.ap_uint.9* @_ZN7ap_uintILi16EEaSERKS0_(%class.ap_uint.9* %mag_data, %class.ap_uint.9* %17)
  %138 = load i8* %step, align 1
  %139 = zext i8 %138 to i32
  %140 = sub nsw i32 %139, 1
  %141 = call i64* @_ZN7ap_uintILi16EE5rangeEii(%class.ap_uint.9* %phase_data, i32 %140, i32 0)
  %142 = load i64* %141
  %143 = call %class.ap_uint.9* @_ZN7ap_uintILi16EEaSEm(%class.ap_uint.9* %p, i64 %142)
  %144 = load i8* %step, align 1
  %145 = zext i8 %144 to i32
  %146 = sub nsw i32 %145, 1
  %147 = call i64* @_ZN7ap_uintILi16EE5rangeEii(%class.ap_uint.9* %mag_data, i32 %146, i32 0)
  %148 = load i64* %147
  %149 = call %class.ap_uint.9* @_ZN7ap_uintILi16EEaSEm(%class.ap_uint.9* %m, i64 %148)
  %150 = bitcast %class.ap_uint.9* %18 to i8*
  %151 = bitcast %class.ap_uint.9* %p to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %150, i8* %151, i64 2, i32 1, i1 false)
  %152 = getelementptr %class.ap_uint.9* %18, i32 0, i32 0
  %153 = bitcast [2 x i8]* %152 to i16*
  %154 = load i16* %153, align 1
  %155 = call zeroext i1 @_ZgtILi16EEb7ap_uintIXT_EEi(i16 %154, i32 23040)
  br i1 %155, label %156, label %161

; <label>:156                                     ; preds = %127
  %157 = call i16 @_ZmiILi16EE7ap_uintIXT_EERKS1_i(%class.ap_uint.9* %p, i32 23040)
  %158 = getelementptr %class.ap_uint.9* %19, i32 0, i32 0
  %159 = bitcast [2 x i8]* %158 to i16*
  store i16 %157, i16* %159, align 1
  %160 = call %class.ap_uint.9* @_ZN7ap_uintILi16EEaSERKS0_(%class.ap_uint.9* %p, %class.ap_uint.9* %19)
  br label %161

; <label>:161                                     ; preds = %156, %127
  %162 = bitcast %class.ap_uint.9* %20 to i8*
  %163 = bitcast %class.ap_uint.9* %p to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %162, i8* %163, i64 2, i32 1, i1 false)
  %164 = bitcast %class.ap_uint.9* %21 to i8*
  %165 = bitcast %class.ap_uint.9* %m to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %164, i8* %165, i64 2, i32 1, i1 false)
  %166 = load i16** %5, align 8
  %167 = getelementptr inbounds [9 x %class.ap_uint.10]* %bin, i32 0, i32 0
  %168 = getelementptr %class.ap_uint.9* %20, i32 0, i32 0
  %169 = bitcast [2 x i8]* %168 to i16*
  %170 = load i16* %169, align 1
  %171 = getelementptr %class.ap_uint.9* %21, i32 0, i32 0
  %172 = bitcast [2 x i8]* %171 to i16*
  %173 = load i16* %172, align 1
  call void @_ZL103p_Z16xFDHOGbilinearNOILi2E7ap_uintILi25EELi9ELi2560EE7ap_uintILi16EE7ap_uintILi16EEPtP7ap_uintILi25EE_17ap_uintILi16EES0_PtPS_ILi25EE(i16 %170, i16 %173, i16* %166, %class.ap_uint.10* %167)
  br label %174

; <label>:174                                     ; preds = %161
  %175 = call i16 @_ZN7ap_uintILi16EEppEi(%class.ap_uint.9* %j, i32 0)
  %176 = getelementptr %class.ap_uint.9* %22, i32 0, i32 0
  %177 = bitcast [2 x i8]* %176 to i16*
  store i16 %175, i16* %177, align 1
  br label %120

; <label>:178                                     ; preds = %120
  br label %179

; <label>:179                                     ; preds = %178
  %180 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %k, i32 0)
  br label %181

; <label>:181                                     ; preds = %202, %179
  %182 = bitcast %class.ap_uint.0* %23 to i8*
  %183 = bitcast %class.ap_uint.0* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %182, i8* %183, i64 1, i32 1, i1 false)
  %184 = getelementptr %class.ap_uint.0* %23, i32 0, i32 0
  %185 = bitcast [1 x i8]* %184 to i8*
  %186 = load i8* %185, align 1
  %187 = call zeroext i1 @_ZltILi8EEb7ap_uintIXT_EEi(i8 %186, i32 9)
  br i1 %187, label %188, label %206

; <label>:188                                     ; preds = %181
  %189 = call i64 @_ZNK7ap_uintILi8EEcvmEv(%class.ap_uint.0* %k)
  %190 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %r)
  %191 = load [9 x %class.ap_uint.10]** %3, align 8
  %192 = getelementptr inbounds [9 x %class.ap_uint.10]* %191, i64 %190
  %193 = getelementptr inbounds [9 x %class.ap_uint.10]* %192, i32 0, i64 %189
  %194 = call i64 @_ZNK7ap_uintILi8EEcvmEv(%class.ap_uint.0* %k)
  %195 = getelementptr inbounds [9 x %class.ap_uint.10]* %bin, i32 0, i64 %194
  %196 = bitcast %class.ap_uint.10* %24 to i8*
  %197 = bitcast %class.ap_uint.10* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %196, i8* %197, i64 4, i32 1, i1 false)
  %198 = getelementptr %class.ap_uint.10* %24, i32 0, i32 0
  %199 = bitcast [4 x i8]* %198 to i32*
  %200 = load i32* %199, align 1
  %201 = call %class.ap_uint.10* @_ZpLILi25ELi25EER7ap_uintIXT_EES2_S0_IXT0_EE(%class.ap_uint.10* %193, i32 %200)
  br label %202

; <label>:202                                     ; preds = %188
  %203 = call i8 @_ZN7ap_uintILi8EEppEi(%class.ap_uint.0* %k, i32 0)
  %204 = getelementptr %class.ap_uint.0* %25, i32 0, i32 0
  %205 = bitcast [1 x i8]* %204 to i8*
  store i8 %203, i8* %205, align 1
  br label %181

; <label>:206                                     ; preds = %181
  call void @_ZN7ap_uintILi48EEC1Ei(%class.ap_uint.11* %tmp, i32 0)
  br label %207

; <label>:207                                     ; preds = %206
  %208 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %k, i32 0)
  br label %209

; <label>:209                                     ; preds = %246, %207
  %210 = bitcast %class.ap_uint.0* %26 to i8*
  %211 = bitcast %class.ap_uint.0* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %210, i8* %211, i64 1, i32 1, i1 false)
  %212 = getelementptr %class.ap_uint.0* %26, i32 0, i32 0
  %213 = bitcast [1 x i8]* %212 to i8*
  %214 = load i8* %213, align 1
  %215 = call zeroext i1 @_ZltILi8EEb7ap_uintIXT_EEi(i8 %214, i32 9)
  br i1 %215, label %216, label %250

; <label>:216                                     ; preds = %209
  %217 = call i64 @_ZNK7ap_uintILi8EEcvmEv(%class.ap_uint.0* %k)
  %218 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %r)
  %219 = load [9 x %class.ap_uint.10]** %3, align 8
  %220 = getelementptr inbounds [9 x %class.ap_uint.10]* %219, i64 %218
  %221 = getelementptr inbounds [9 x %class.ap_uint.10]* %220, i32 0, i64 %217
  %222 = bitcast %class.ap_uint.10* %28 to i8*
  %223 = bitcast %class.ap_uint.10* %221 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %222, i8* %223, i64 4, i32 1, i1 false)
  %224 = call i64 @_ZNK7ap_uintILi8EEcvmEv(%class.ap_uint.0* %k)
  %225 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %r)
  %226 = load [9 x %class.ap_uint.10]** %3, align 8
  %227 = getelementptr inbounds [9 x %class.ap_uint.10]* %226, i64 %225
  %228 = getelementptr inbounds [9 x %class.ap_uint.10]* %227, i32 0, i64 %224
  %229 = bitcast %class.ap_uint.10* %29 to i8*
  %230 = bitcast %class.ap_uint.10* %228 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %229, i8* %230, i64 4, i32 1, i1 false)
  %231 = getelementptr %class.ap_uint.10* %28, i32 0, i32 0
  %232 = bitcast [4 x i8]* %231 to i32*
  %233 = load i32* %232, align 1
  %234 = getelementptr %class.ap_uint.10* %29, i32 0, i32 0
  %235 = bitcast [4 x i8]* %234 to i32*
  %236 = load i32* %235, align 1
  %237 = call i56 @_ZmlILi25ELi25EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i32 %233, i32 %236)
  %238 = getelementptr %class.ap_int.32* %27, i32 0, i32 0
  store i56 %237, i56* %30
  %239 = bitcast i56* %30 to [7 x i8]*
  %240 = load [7 x i8]* %239, align 1
  store [7 x i8] %240, [7 x i8]* %238
  %241 = getelementptr %class.ap_int.32* %27, i32 0, i32 0
  %242 = bitcast i56* %31 to [7 x i8]*
  %243 = load [7 x i8]* %241
  store [7 x i8] %243, [7 x i8]* %242, align 1
  %244 = load i56* %31
  %245 = call %class.ap_uint.11* @_ZpLILi48ELi50EER7ap_uintIXT_EES2_6ap_intIXT0_EE(%class.ap_uint.11* %tmp, i56 %244)
  br label %246

; <label>:246                                     ; preds = %216
  %247 = call i8 @_ZN7ap_uintILi8EEppEi(%class.ap_uint.0* %k, i32 0)
  %248 = getelementptr %class.ap_uint.0* %32, i32 0, i32 0
  %249 = bitcast [1 x i8]* %248 to i8*
  store i8 %247, i8* %249, align 1
  br label %209

; <label>:250                                     ; preds = %209
  %251 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %r)
  %252 = load %class.ap_uint.11** %4, align 8
  %253 = getelementptr inbounds %class.ap_uint.11* %252, i64 %251
  %254 = call %class.ap_uint.11* @_ZN7ap_uintILi48EEaSERKS0_(%class.ap_uint.11* %253, %class.ap_uint.11* %tmp)
  br label %255

; <label>:255                                     ; preds = %250
  %256 = call i16 @_ZN7ap_uintILi16EEppEi(%class.ap_uint.9* %r, i32 0)
  %257 = getelementptr %class.ap_uint.9* %33, i32 0, i32 0
  %258 = bitcast [2 x i8]* %257 to i16*
  store i16 %256, i16* %258, align 1
  br label %91

; <label>:259                                     ; preds = %91
  br label %260

; <label>:260                                     ; preds = %259
  %261 = call i16 @_ZN7ap_uintILi16EEppEi(%class.ap_uint.9* %i, i32 0)
  %262 = getelementptr %class.ap_uint.9* %34, i32 0, i32 0
  %263 = bitcast [2 x i8]* %262 to i16*
  store i16 %261, i16* %263, align 1
  br label %81

; <label>:264                                     ; preds = %81
  ret void
}

declare zeroext i1 @_ZltILi16EEb7ap_uintIXT_EEt(i16, i16 zeroext)

declare %class.ap_uint.10* @_ZN7ap_uintILi25EEaSEi(%class.ap_uint.10*, i32)

declare i64 @_ZNK7ap_uintILi8EEcvmEv(%class.ap_uint.0*)

declare %class.ap_uint.9* @_ZN7ap_uintILi16EEaSERKS0_(%class.ap_uint.9*, %class.ap_uint.9*)

declare i16 @_ZN3hls6streamI7ap_uintILi16EEE4readEv(%"class.hls::stream.8"*)

declare %class.ap_uint.9* @_ZN7ap_uintILi16EEaSEm(%class.ap_uint.9*, i64)

declare i64* @_ZN7ap_uintILi16EE5rangeEii(%class.ap_uint.9*, i32, i32)

declare zeroext i1 @_ZgtILi16EEb7ap_uintIXT_EEi(i16, i32)

declare i16 @_ZmiILi16EE7ap_uintIXT_EERKS1_i(%class.ap_uint.9*, i32)

define internal void @_ZL103p_Z16xFDHOGbilinearNOILi2E7ap_uintILi25EELi9ELi2560EE7ap_uintILi16EE7ap_uintILi16EEPtP7ap_uintILi25EE_17ap_uintILi16EES0_PtPS_ILi25EE(i16 %p.coerce, i16 %m.coerce, i16* %bin_center, %class.ap_uint.10* %bin) uwtable {
  %p = alloca %class.ap_uint.9, align 2
  %m = alloca %class.ap_uint.9, align 2
  %1 = alloca i16*, align 8
  %2 = alloca %class.ap_uint.10*, align 8
  %tmp_bin_idx = alloca i32, align 4
  %3 = alloca %class.ap_uint.9, align 1
  %bin_idx = alloca i8, align 1
  %index_1 = alloca i8, align 1
  %index_2 = alloca i8, align 1
  %mag_factor = alloca i32, align 4
  %4 = alloca %class.ap_uint.9, align 1
  %frac = alloca i16, align 2
  %5 = alloca %class.ap_uint.9, align 1
  %6 = alloca %class.ap_uint.9, align 1
  %7 = alloca %class.ap_uint.9, align 1
  %8 = alloca %class.ap_uint.9, align 1
  %9 = alloca %class.ap_uint.9, align 1
  %part_1 = alloca %class.ap_uint.10, align 1
  %10 = alloca %class.ap_int.33, align 1
  %11 = alloca %class.ap_int.33, align 1
  %12 = alloca %class.ap_uint.34, align 1
  %13 = alloca %class.ap_uint.34, align 1
  %14 = alloca i40
  %15 = alloca i40
  %16 = alloca { i64, i16 }
  %17 = alloca { i64, i16 }
  %18 = alloca { i64, i16 }
  %m_shifted = alloca i32, align 4
  %part_2 = alloca %class.ap_uint.10, align 1
  %19 = alloca %class.ap_uint.10, align 1
  %20 = alloca %class.ap_uint.10, align 1
  %21 = getelementptr %class.ap_uint.9* %p, i32 0, i32 0
  %22 = bitcast [2 x i8]* %21 to i16*
  store i16 %p.coerce, i16* %22, align 1
  %23 = getelementptr %class.ap_uint.9* %m, i32 0, i32 0
  %24 = bitcast [2 x i8]* %23 to i16*
  store i16 %m.coerce, i16* %24, align 1
  store i16* %bin_center, i16** %1, align 8
  store %class.ap_uint.10* %bin, %class.ap_uint.10** %2, align 8
  %25 = call i16 @_ZmlILi16EE7ap_uintIXT_EERKS1_i(%class.ap_uint.9* %p, i32 3276)
  %26 = getelementptr %class.ap_uint.9* %3, i32 0, i32 0
  %27 = bitcast [2 x i8]* %26 to i16*
  store i16 %25, i16* %27, align 1
  %28 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %3)
  %29 = trunc i64 %28 to i32
  store i32 %29, i32* %tmp_bin_idx, align 4
  %30 = load i32* %tmp_bin_idx, align 4
  %31 = lshr i32 %30, 23
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %bin_idx, align 1
  %33 = call i16 @_ZmlILi16EE7ap_uintIXT_EERKS1_i(%class.ap_uint.9* %m, i32 3276)
  %34 = getelementptr %class.ap_uint.9* %4, i32 0, i32 0
  %35 = bitcast [2 x i8]* %34 to i16*
  store i16 %33, i16* %35, align 1
  %36 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %4)
  %37 = trunc i64 %36 to i32
  store i32 %37, i32* %mag_factor, align 4
  store i16 0, i16* %frac, align 2
  %38 = bitcast %class.ap_uint.9* %5 to i8*
  %39 = bitcast %class.ap_uint.9* %p to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 2, i32 1, i1 false)
  %40 = load i8* %bin_idx, align 1
  %41 = zext i8 %40 to i64
  %42 = load i16** %1, align 8
  %43 = getelementptr inbounds i16* %42, i64 %41
  %44 = load i16* %43, align 2
  %45 = getelementptr %class.ap_uint.9* %5, i32 0, i32 0
  %46 = bitcast [2 x i8]* %45 to i16*
  %47 = load i16* %46, align 1
  %48 = call zeroext i1 @_ZltILi16EEb7ap_uintIXT_EEt(i16 %47, i16 zeroext %44)
  br i1 %48, label %49, label %86

; <label>:49                                      ; preds = %0
  %50 = load i8* %bin_idx, align 1
  %51 = zext i8 %50 to i32
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %67

; <label>:53                                      ; preds = %49
  %54 = load i8* %bin_idx, align 1
  %55 = zext i8 %54 to i64
  %56 = load i16** %1, align 8
  %57 = getelementptr inbounds i16* %56, i64 %55
  %58 = load i16* %57, align 2
  %59 = zext i16 %58 to i32
  %60 = sub nsw i32 %59, 2560
  %61 = call i16 @_ZmiILi16EE7ap_uintIXT_EERKS1_i(%class.ap_uint.9* %p, i32 %60)
  %62 = getelementptr %class.ap_uint.9* %6, i32 0, i32 0
  %63 = bitcast [2 x i8]* %62 to i16*
  store i16 %61, i16* %63, align 1
  %64 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %6)
  %65 = trunc i64 %64 to i16
  store i16 %65, i16* %frac, align 2
  %66 = load i8* %bin_idx, align 1
  store i8 %66, i8* %index_1, align 1
  store i8 8, i8* %index_2, align 1
  br label %85

; <label>:67                                      ; preds = %49
  %68 = load i8* %bin_idx, align 1
  %69 = zext i8 %68 to i32
  %70 = sub nsw i32 %69, 1
  %71 = sext i32 %70 to i64
  %72 = load i16** %1, align 8
  %73 = getelementptr inbounds i16* %72, i64 %71
  %74 = load i16* %73, align 2
  %75 = call i16 @_ZmiILi16EE7ap_uintIXT_EERKS1_t(%class.ap_uint.9* %p, i16 zeroext %74)
  %76 = getelementptr %class.ap_uint.9* %7, i32 0, i32 0
  %77 = bitcast [2 x i8]* %76 to i16*
  store i16 %75, i16* %77, align 1
  %78 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %7)
  %79 = trunc i64 %78 to i16
  store i16 %79, i16* %frac, align 2
  %80 = load i8* %bin_idx, align 1
  store i8 %80, i8* %index_1, align 1
  %81 = load i8* %bin_idx, align 1
  %82 = zext i8 %81 to i32
  %83 = sub nsw i32 %82, 1
  %84 = trunc i32 %83 to i8
  store i8 %84, i8* %index_2, align 1
  br label %85

; <label>:85                                      ; preds = %67, %53
  br label %123

; <label>:86                                      ; preds = %0
  %87 = load i8* %bin_idx, align 1
  %88 = zext i8 %87 to i32
  %89 = icmp eq i32 %88, 8
  br i1 %89, label %90, label %104

; <label>:90                                      ; preds = %86
  %91 = load i8* %bin_idx, align 1
  %92 = zext i8 %91 to i64
  %93 = load i16** %1, align 8
  %94 = getelementptr inbounds i16* %93, i64 %92
  %95 = load i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = add nsw i32 %96, 2560
  %98 = call i16 @_ZmiILi16EE7ap_uintIXT_EEiRKS1_(i32 %97, %class.ap_uint.9* %p)
  %99 = getelementptr %class.ap_uint.9* %8, i32 0, i32 0
  %100 = bitcast [2 x i8]* %99 to i16*
  store i16 %98, i16* %100, align 1
  %101 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %8)
  %102 = trunc i64 %101 to i16
  store i16 %102, i16* %frac, align 2
  %103 = load i8* %bin_idx, align 1
  store i8 %103, i8* %index_1, align 1
  store i8 0, i8* %index_2, align 1
  br label %122

; <label>:104                                     ; preds = %86
  %105 = load i8* %bin_idx, align 1
  %106 = zext i8 %105 to i32
  %107 = add nsw i32 %106, 1
  %108 = sext i32 %107 to i64
  %109 = load i16** %1, align 8
  %110 = getelementptr inbounds i16* %109, i64 %108
  %111 = load i16* %110, align 2
  %112 = call i16 @_ZmiILi16EE7ap_uintIXT_EEtRKS1_(i16 zeroext %111, %class.ap_uint.9* %p)
  %113 = getelementptr %class.ap_uint.9* %9, i32 0, i32 0
  %114 = bitcast [2 x i8]* %113 to i16*
  store i16 %112, i16* %114, align 1
  %115 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %9)
  %116 = trunc i64 %115 to i16
  store i16 %116, i16* %frac, align 2
  %117 = load i8* %bin_idx, align 1
  store i8 %117, i8* %index_1, align 1
  %118 = load i8* %bin_idx, align 1
  %119 = zext i8 %118 to i32
  %120 = add nsw i32 %119, 1
  %121 = trunc i32 %120 to i8
  store i8 %121, i8* %index_2, align 1
  br label %122

; <label>:122                                     ; preds = %104, %90
  br label %123

; <label>:123                                     ; preds = %122, %85
  %124 = load i16* %frac, align 2
  call void @_ZN7ap_uintILi40EEC1Et(%class.ap_uint.34* %12, i16 zeroext %124)
  %125 = load i32* %mag_factor, align 4
  call void @_ZN7ap_uintILi40EEC1Ej(%class.ap_uint.34* %13, i32 %125)
  %126 = getelementptr %class.ap_uint.34* %12, i32 0, i32 0
  %127 = bitcast i40* %14 to [5 x i8]*
  %128 = load [5 x i8]* %126
  store [5 x i8] %128, [5 x i8]* %127, align 1
  %129 = load i40* %14
  %130 = getelementptr %class.ap_uint.34* %13, i32 0, i32 0
  %131 = bitcast i40* %15 to [5 x i8]*
  %132 = load [5 x i8]* %130
  store [5 x i8] %132, [5 x i8]* %131, align 1
  %133 = load i40* %15
  %134 = call { i64, i16 } @_ZmlILi40ELi40EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i40 %129, i40 %133)
  %135 = getelementptr %class.ap_int.33* %11, i32 0, i32 0
  store { i64, i16 } %134, { i64, i16 }* %16
  %136 = bitcast { i64, i16 }* %16 to [10 x i8]*
  %137 = load [10 x i8]* %136, align 1
  store [10 x i8] %137, [10 x i8]* %135
  %138 = bitcast { i64, i16 }* %17 to i8*
  %139 = bitcast %class.ap_int.33* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %138, i8* %139, i64 10, i32 0, i1 false)
  %140 = getelementptr { i64, i16 }* %17, i32 0, i32 0
  %141 = load i64* %140, align 1
  %142 = getelementptr { i64, i16 }* %17, i32 0, i32 1
  %143 = load i16* %142, align 1
  %144 = call { i64, i16 } @_ZrsILi80EE6ap_intIXT_EES1_i(i64 %141, i16 %143, i32 22)
  %145 = getelementptr %class.ap_int.33* %10, i32 0, i32 0
  store { i64, i16 } %144, { i64, i16 }* %18
  %146 = bitcast { i64, i16 }* %18 to [10 x i8]*
  %147 = load [10 x i8]* %146, align 1
  store [10 x i8] %147, [10 x i8]* %145
  call void @_ZN7ap_uintILi25EEC1ILi80EEERK6ap_intIXT_EE(%class.ap_uint.10* %part_1, %class.ap_int.33* %10)
  %148 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %m)
  %149 = trunc i64 %148 to i32
  %150 = shl i32 %149, 1
  store i32 %150, i32* %m_shifted, align 4
  %151 = load i32* %m_shifted, align 4
  %152 = call i32 @_ZmiILi25EE7ap_uintIXT_EEjRKS1_(i32 %151, %class.ap_uint.10* %part_1)
  %153 = getelementptr %class.ap_uint.10* %part_2, i32 0, i32 0
  %154 = bitcast [4 x i8]* %153 to i32*
  store i32 %152, i32* %154, align 1
  %155 = load i8* %index_1, align 1
  %156 = zext i8 %155 to i64
  %157 = load %class.ap_uint.10** %2, align 8
  %158 = getelementptr inbounds %class.ap_uint.10* %157, i64 %156
  %159 = bitcast %class.ap_uint.10* %19 to i8*
  %160 = bitcast %class.ap_uint.10* %part_1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %159, i8* %160, i64 4, i32 1, i1 false)
  %161 = getelementptr %class.ap_uint.10* %19, i32 0, i32 0
  %162 = bitcast [4 x i8]* %161 to i32*
  %163 = load i32* %162, align 1
  %164 = call %class.ap_uint.10* @_ZpLILi25ELi25EER7ap_uintIXT_EES2_S0_IXT0_EE(%class.ap_uint.10* %158, i32 %163)
  %165 = load i8* %index_2, align 1
  %166 = zext i8 %165 to i64
  %167 = load %class.ap_uint.10** %2, align 8
  %168 = getelementptr inbounds %class.ap_uint.10* %167, i64 %166
  %169 = bitcast %class.ap_uint.10* %20 to i8*
  %170 = bitcast %class.ap_uint.10* %part_2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %169, i8* %170, i64 4, i32 1, i1 false)
  %171 = getelementptr %class.ap_uint.10* %20, i32 0, i32 0
  %172 = bitcast [4 x i8]* %171 to i32*
  %173 = load i32* %172, align 1
  %174 = call %class.ap_uint.10* @_ZpLILi25ELi25EER7ap_uintIXT_EES2_S0_IXT0_EE(%class.ap_uint.10* %168, i32 %173)
  ret void
}

declare %class.ap_uint.10* @_ZpLILi25ELi25EER7ap_uintIXT_EES2_S0_IXT0_EE(%class.ap_uint.10*, i32)

declare void @_ZN7ap_uintILi48EEC1Ei(%class.ap_uint.11*, i32)

declare %class.ap_uint.11* @_ZpLILi48ELi50EER7ap_uintIXT_EES2_6ap_intIXT0_EE(%class.ap_uint.11*, i56)

declare i56 @_ZmlILi25ELi25EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i32, i32)

declare %class.ap_uint.11* @_ZN7ap_uintILi48EEaSERKS0_(%class.ap_uint.11*, %class.ap_uint.11*)

declare i16 @_ZmlILi16EE7ap_uintIXT_EERKS1_i(%class.ap_uint.9*, i32)

declare i16 @_ZmiILi16EE7ap_uintIXT_EERKS1_t(%class.ap_uint.9*, i16 zeroext)

declare i16 @_ZmiILi16EE7ap_uintIXT_EEiRKS1_(i32, %class.ap_uint.9*)

declare i16 @_ZmiILi16EE7ap_uintIXT_EEtRKS1_(i16 zeroext, %class.ap_uint.9*)

declare void @_ZN7ap_uintILi25EEC1ILi80EEERK6ap_intIXT_EE(%class.ap_uint.10*, %class.ap_int.33*)

declare { i64, i16 } @_ZrsILi80EE6ap_intIXT_EES1_i(i64, i16, i32)

declare { i64, i16 } @_ZmlILi40ELi40EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i40, i40)

declare void @_ZN7ap_uintILi40EEC1Et(%class.ap_uint.34*, i16 zeroext)

declare void @_ZN7ap_uintILi40EEC1Ej(%class.ap_uint.34*, i32)

declare i32 @_ZmiILi25EE7ap_uintIXT_EEjRKS1_(i32, %class.ap_uint.10*)

define internal void @_ZL176p_Z25xFHOGPhaseMagnitudeKernelILi2160ELi3840ELi13ELi2ELi1ELi2ELi5ELi3840EER6streamI7ap_uintILi9EEER6streamI7ap_uintILi9EEER6streamI7ap_uintILi16EEER6streamI7ap_uintILi16EEEtt_1RN3hls6streamI7ap_uintILi9EEEES4_RNS0_IS1_ILi16EEEES7_tt(%"class.hls::stream.6"* %_gradx_stream, %"class.hls::stream.6"* %_grady_stream, %"class.hls::stream.8"* %_phase_stream, %"class.hls::stream.8"* %_mag_stream, i16 zeroext %height, i16 zeroext %width) uwtable {
  %1 = alloca %"class.hls::stream.6"*, align 8
  %2 = alloca %"class.hls::stream.6"*, align 8
  %3 = alloca %"class.hls::stream.8"*, align 8
  %4 = alloca %"class.hls::stream.8"*, align 8
  %5 = alloca i16, align 2
  %6 = alloca i16, align 2
  %grad_x_packed_val = alloca %class.ap_uint.7, align 1
  %grad_y_packed_val = alloca %class.ap_uint.7, align 1
  %phase_packed_val = alloca %class.ap_uint.9, align 1
  %mag_packed_val = alloca %class.ap_uint.9, align 1
  %i = alloca i16, align 2
  %j = alloca i16, align 2
  %k = alloca i16, align 2
  %l = alloca i16, align 2
  %M1 = alloca i32, align 4
  %N1 = alloca i32, align 4
  %M2 = alloca i32, align 4
  %N2 = alloca i32, align 4
  %7 = alloca %class.ap_uint.7, align 1
  %8 = alloca %class.ap_uint.7, align 1
  %step_src = alloca i8, align 1
  %step_dst = alloca i8, align 1
  %proc_loop_src = alloca i16, align 2
  %proc_loop_dst = alloca i16, align 2
  %g_x = alloca %class.ap_int.35, align 1
  %g_y = alloca %class.ap_int.35, align 1
  %g_x_16_p = alloca i16, align 2
  %g_x_16_m = alloca i16, align 2
  %g_y_16_p = alloca i16, align 2
  %g_y_16_m = alloca i16, align 2
  %ret = alloca i16, align 2
  %result_temp = alloca i32, align 4
  %result_phase = alloca %class.ap_uint.9, align 1
  %gx_sq = alloca %class.ap_uint.16, align 1
  %gy_sq = alloca %class.ap_uint.16, align 1
  %sum_sq_grad = alloca %class.ap_uint.16, align 1
  %9 = alloca %class.ap_int.36, align 1
  %10 = alloca %class.ap_uint.16, align 1
  %11 = alloca %class.ap_uint.16, align 1
  %12 = alloca i24
  %13 = alloca i24
  %14 = alloca i40
  %tmp_mag = alloca %class.ap_ufixed.37, align 1
  %15 = alloca %class.ap_uint.38, align 1
  %16 = alloca %class.ap_uint.38, align 1
  %result_mag = alloca %class.ap_uint.9, align 1
  %17 = alloca %class.ap_ufixed.37, align 1
  store %"class.hls::stream.6"* %_gradx_stream, %"class.hls::stream.6"** %1, align 8
  store %"class.hls::stream.6"* %_grady_stream, %"class.hls::stream.6"** %2, align 8
  store %"class.hls::stream.8"* %_phase_stream, %"class.hls::stream.8"** %3, align 8
  store %"class.hls::stream.8"* %_mag_stream, %"class.hls::stream.8"** %4, align 8
  store i16 %height, i16* %5, align 2
  store i16 %width, i16* %6, align 2
  call void @_ZN7ap_uintILi9EEC1Ev(%class.ap_uint.7* %grad_x_packed_val)
  call void @_ZN7ap_uintILi9EEC1Ev(%class.ap_uint.7* %grad_y_packed_val)
  call void @_ZN7ap_uintILi16EEC1Ev(%class.ap_uint.9* %phase_packed_val)
  call void @_ZN7ap_uintILi16EEC1Ev(%class.ap_uint.9* %mag_packed_val)
  store i32 9, i32* %M1, align 4
  store i32 0, i32* %N1, align 4
  %18 = load i32* %M1, align 4
  store i32 %18, i32* %M2, align 4
  %19 = load i32* %N1, align 4
  store i32 %19, i32* %N2, align 4
  br label %20

; <label>:20                                      ; preds = %0
  store i16 0, i16* %i, align 2
  br label %21

; <label>:21                                      ; preds = %215, %20
  %22 = load i16* %i, align 2
  %23 = zext i16 %22 to i32
  %24 = load i16* %5, align 2
  %25 = zext i16 %24 to i32
  %26 = icmp slt i32 %23, %25
  br i1 %26, label %27, label %218

; <label>:27                                      ; preds = %21
  br label %28

; <label>:28                                      ; preds = %27
  store i16 0, i16* %j, align 2
  br label %29

; <label>:29                                      ; preds = %211, %28
  %30 = load i16* %j, align 2
  %31 = zext i16 %30 to i32
  %32 = load i16* %6, align 2
  %33 = zext i16 %32 to i32
  %34 = icmp slt i32 %31, %33
  br i1 %34, label %35, label %214

; <label>:35                                      ; preds = %29
  %36 = load %"class.hls::stream.6"** %1, align 8
  %37 = call i16 @_ZN3hls6streamI7ap_uintILi9EEE4readEv(%"class.hls::stream.6"* %36)
  %38 = getelementptr %class.ap_uint.7* %7, i32 0, i32 0
  %39 = bitcast [2 x i8]* %38 to i16*
  store i16 %37, i16* %39, align 1
  %40 = call %class.ap_uint.7* @_ZN7ap_uintILi9EEaSERKS0_(%class.ap_uint.7* %grad_x_packed_val, %class.ap_uint.7* %7)
  %41 = load %"class.hls::stream.6"** %2, align 8
  %42 = call i16 @_ZN3hls6streamI7ap_uintILi9EEE4readEv(%"class.hls::stream.6"* %41)
  %43 = getelementptr %class.ap_uint.7* %8, i32 0, i32 0
  %44 = bitcast [2 x i8]* %43 to i16*
  store i16 %42, i16* %44, align 1
  %45 = call %class.ap_uint.7* @_ZN7ap_uintILi9EEaSERKS0_(%class.ap_uint.7* %grad_y_packed_val, %class.ap_uint.7* %8)
  store i8 9, i8* %step_src, align 1
  store i8 16, i8* %step_dst, align 1
  store i16 9, i16* %proc_loop_src, align 2
  store i16 16, i16* %proc_loop_dst, align 2
  br label %46

; <label>:46                                      ; preds = %35
  store i16 0, i16* %k, align 2
  store i16 0, i16* %l, align 2
  br label %47

; <label>:47                                      ; preds = %195, %46
  %48 = load i16* %k, align 2
  %49 = zext i16 %48 to i32
  %50 = load i16* %proc_loop_src, align 2
  %51 = zext i16 %50 to i32
  %52 = icmp slt i32 %49, %51
  %53 = load i16* %l, align 2
  %54 = zext i16 %53 to i32
  %55 = load i16* %proc_loop_dst, align 2
  %56 = zext i16 %55 to i32
  %57 = icmp slt i32 %54, %56
  br i1 %57, label %58, label %208

; <label>:58                                      ; preds = %47
  %59 = load i16* %k, align 2
  %60 = zext i16 %59 to i32
  %61 = load i8* %step_src, align 1
  %62 = zext i8 %61 to i32
  %63 = sub nsw i32 %62, 1
  %64 = add nsw i32 %60, %63
  %65 = load i16* %k, align 2
  %66 = zext i16 %65 to i32
  %67 = call i64* @_ZN7ap_uintILi9EE5rangeEii(%class.ap_uint.7* %grad_x_packed_val, i32 %64, i32 %66)
  %68 = load i64* %67
  call void @_ZN6ap_intILi9EEC1Em(%class.ap_int.35* %g_x, i64 %68)
  %69 = load i16* %k, align 2
  %70 = zext i16 %69 to i32
  %71 = load i8* %step_src, align 1
  %72 = zext i8 %71 to i32
  %73 = sub nsw i32 %72, 1
  %74 = add nsw i32 %70, %73
  %75 = load i16* %k, align 2
  %76 = zext i16 %75 to i32
  %77 = call i64* @_ZN7ap_uintILi9EE5rangeEii(%class.ap_uint.7* %grad_y_packed_val, i32 %74, i32 %76)
  %78 = load i64* %77
  call void @_ZN6ap_intILi9EEC1Em(%class.ap_int.35* %g_y, i64 %78)
  %79 = call i64 @_ZNK6ap_intILi9EEcvlEv(%class.ap_int.35* %g_x)
  %80 = trunc i64 %79 to i16
  store i16 %80, i16* %g_x_16_m, align 2
  store i16 %80, i16* %g_x_16_p, align 2
  %81 = call i64 @_ZNK6ap_intILi9EEcvlEv(%class.ap_int.35* %g_y)
  %82 = trunc i64 %81 to i16
  store i16 %82, i16* %g_y_16_m, align 2
  store i16 %82, i16* %g_y_16_p, align 2
  store i16 0, i16* %ret, align 2
  store i32 0, i32* %result_temp, align 4
  %83 = load i16* %g_x_16_p, align 2
  %84 = load i16* %g_y_16_p, align 2
  %85 = load i32* %M1, align 4
  %86 = load i32* %N1, align 4
  %87 = load i32* %M2, align 4
  %88 = load i32* %N2, align 4
  %89 = call signext i16 @_ZL24p_ZN2xf9Atan2LUT8Essiiiissiiii(i16 signext %83, i16 signext %84, i32 %85, i32 %86, i32 %87, i32 %88)
  store i16 %89, i16* %ret, align 2
  %90 = load i16* %ret, align 2
  %91 = sext i16 %90 to i32
  %92 = icmp slt i32 %91, 0
  br i1 %92, label %101, label %93

; <label>:93                                      ; preds = %58
  %94 = load i16* %ret, align 2
  %95 = sext i16 %94 to i32
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %106

; <label>:97                                      ; preds = %93
  %98 = load i16* %g_y_16_p, align 2
  %99 = sext i16 %98 to i32
  %100 = icmp slt i32 %99, 0
  br i1 %100, label %101, label %106

; <label>:101                                     ; preds = %97, %58
  %102 = load i16* %ret, align 2
  %103 = sext i16 %102 to i32
  %104 = add nsw i32 %103, 12867
  %105 = add nsw i32 %104, 12867
  store i32 %105, i32* %result_temp, align 4
  br label %109

; <label>:106                                     ; preds = %97, %93
  %107 = load i16* %ret, align 2
  %108 = sext i16 %107 to i32
  store i32 %108, i32* %result_temp, align 4
  br label %109

; <label>:109                                     ; preds = %106, %101
  %110 = load i32* %result_temp, align 4
  %111 = mul nsw i32 58671, %110
  %112 = ashr i32 %111, 15
  call void @_ZN7ap_uintILi16EEC1Ei(%class.ap_uint.9* %result_phase, i32 %112)
  %113 = load i16* %g_x_16_m, align 2
  %114 = sext i16 %113 to i32
  %115 = icmp slt i32 %114, 0
  br i1 %115, label %116, label %121

; <label>:116                                     ; preds = %109
  %117 = load i16* %g_x_16_m, align 2
  %118 = sext i16 %117 to i32
  %119 = sub nsw i32 0, %118
  %120 = trunc i32 %119 to i16
  store i16 %120, i16* %g_x_16_m, align 2
  br label %121

; <label>:121                                     ; preds = %116, %109
  %122 = load i16* %g_y_16_m, align 2
  %123 = sext i16 %122 to i32
  %124 = icmp slt i32 %123, 0
  br i1 %124, label %125, label %130

; <label>:125                                     ; preds = %121
  %126 = load i16* %g_y_16_m, align 2
  %127 = sext i16 %126 to i32
  %128 = sub nsw i32 0, %127
  %129 = trunc i32 %128 to i16
  store i16 %129, i16* %g_y_16_m, align 2
  br label %130

; <label>:130                                     ; preds = %125, %121
  %131 = load i16* %g_x_16_m, align 2
  %132 = trunc i16 %131 to i8
  %133 = zext i8 %132 to i32
  %134 = load i16* %g_x_16_m, align 2
  %135 = trunc i16 %134 to i8
  %136 = zext i8 %135 to i32
  %137 = mul nsw i32 %133, %136
  call void @_ZN7ap_uintILi17EEC1Ei(%class.ap_uint.16* %gx_sq, i32 %137)
  %138 = load i16* %g_y_16_m, align 2
  %139 = trunc i16 %138 to i8
  %140 = zext i8 %139 to i32
  %141 = load i16* %g_y_16_m, align 2
  %142 = trunc i16 %141 to i8
  %143 = zext i8 %142 to i32
  %144 = mul nsw i32 %140, %143
  call void @_ZN7ap_uintILi17EEC1Ei(%class.ap_uint.16* %gy_sq, i32 %144)
  %145 = bitcast %class.ap_uint.16* %10 to i8*
  %146 = bitcast %class.ap_uint.16* %gx_sq to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %145, i8* %146, i64 3, i32 1, i1 false)
  %147 = bitcast %class.ap_uint.16* %11 to i8*
  %148 = bitcast %class.ap_uint.16* %gy_sq to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %147, i8* %148, i64 3, i32 1, i1 false)
  %149 = getelementptr %class.ap_uint.16* %10, i32 0, i32 0
  %150 = bitcast i24* %12 to [3 x i8]*
  %151 = load [3 x i8]* %149
  store [3 x i8] %151, [3 x i8]* %150, align 1
  %152 = load i24* %12
  %153 = getelementptr %class.ap_uint.16* %11, i32 0, i32 0
  %154 = bitcast i24* %13 to [3 x i8]*
  %155 = load [3 x i8]* %153
  store [3 x i8] %155, [3 x i8]* %154, align 1
  %156 = load i24* %13
  %157 = call i40 @_ZplILi17ELi17EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i24 %152, i24 %156)
  %158 = getelementptr %class.ap_int.36* %9, i32 0, i32 0
  store i40 %157, i40* %14
  %159 = bitcast i40* %14 to [5 x i8]*
  %160 = load [5 x i8]* %159, align 1
  store [5 x i8] %160, [5 x i8]* %158
  call void @_ZN7ap_uintILi17EEC1ILi34EEERK6ap_intIXT_EE(%class.ap_uint.16* %sum_sq_grad, %class.ap_int.36* %9)
  call void @_ZN7ap_uintILi31EEC1ILi17EEERKS_IXT_EE(%class.ap_uint.38* %16, %class.ap_uint.16* %sum_sq_grad)
  %161 = getelementptr %class.ap_uint.38* %16, i32 0, i32 0
  %162 = bitcast [4 x i8]* %161 to i32*
  %163 = load i32* %162, align 1
  %164 = call i32 @_ZlsILi31EE7ap_uintIXT_EES1_i(i32 %163, i32 14)
  %165 = getelementptr %class.ap_uint.38* %15, i32 0, i32 0
  %166 = bitcast [4 x i8]* %165 to i32*
  store i32 %164, i32* %166, align 1
  call void @_ZN9ap_ufixedILi31ELi31EL9ap_q_mode5EL9ap_o_mode0ELi0EEC1ILi31EEERK7ap_uintIXT_EE(%class.ap_ufixed.37* %tmp_mag, %class.ap_uint.38* %15)
  %167 = bitcast %class.ap_ufixed.37* %17 to i8*
  %168 = bitcast %class.ap_ufixed.37* %tmp_mag to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %167, i8* %168, i64 4, i32 1, i1 false)
  %169 = getelementptr %class.ap_ufixed.37* %17, i32 0, i32 0
  %170 = bitcast [4 x i8]* %169 to i32*
  %171 = load i32* %170, align 1
  %172 = call i16 @_ZL74p_Z9xFSqrtHOGILi16ELi31ELi31ELi5ELi0EE9ap_ufixedILi31ELi31ELi5ELi0ELi0EE_19ap_ufixedILi31ELi31EL9ap_q_mode5EL9ap_o_mode0ELi0EE(i32 %171)
  %173 = getelementptr %class.ap_uint.9* %result_mag, i32 0, i32 0
  %174 = bitcast [2 x i8]* %173 to i16*
  store i16 %172, i16* %174, align 1
  %175 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %result_phase)
  %176 = load i16* %l, align 2
  %177 = zext i16 %176 to i32
  %178 = load i8* %step_dst, align 1
  %179 = zext i8 %178 to i32
  %180 = sub nsw i32 %179, 1
  %181 = add nsw i32 %177, %180
  %182 = load i16* %l, align 2
  %183 = zext i16 %182 to i32
  %184 = call i64* @_ZN7ap_uintILi16EE5rangeEii(%class.ap_uint.9* %phase_packed_val, i32 %181, i32 %183)
  store i64 %175, i64* %184
  %185 = call i64 @_ZNK7ap_uintILi16EEcvmEv(%class.ap_uint.9* %result_mag)
  %186 = load i16* %l, align 2
  %187 = zext i16 %186 to i32
  %188 = load i8* %step_dst, align 1
  %189 = zext i8 %188 to i32
  %190 = sub nsw i32 %189, 1
  %191 = add nsw i32 %187, %190
  %192 = load i16* %l, align 2
  %193 = zext i16 %192 to i32
  %194 = call i64* @_ZN7ap_uintILi16EE5rangeEii(%class.ap_uint.9* %mag_packed_val, i32 %191, i32 %193)
  store i64 %185, i64* %194
  br label %195

; <label>:195                                     ; preds = %130
  %196 = load i8* %step_src, align 1
  %197 = zext i8 %196 to i32
  %198 = load i16* %k, align 2
  %199 = zext i16 %198 to i32
  %200 = add nsw i32 %199, %197
  %201 = trunc i32 %200 to i16
  store i16 %201, i16* %k, align 2
  %202 = load i8* %step_dst, align 1
  %203 = zext i8 %202 to i32
  %204 = load i16* %l, align 2
  %205 = zext i16 %204 to i32
  %206 = add nsw i32 %205, %203
  %207 = trunc i32 %206 to i16
  store i16 %207, i16* %l, align 2
  br label %47

; <label>:208                                     ; preds = %47
  %209 = load %"class.hls::stream.8"** %3, align 8
  call void @_ZN3hls6streamI7ap_uintILi16EEE5writeERKS2_(%"class.hls::stream.8"* %209, %class.ap_uint.9* %phase_packed_val)
  %210 = load %"class.hls::stream.8"** %4, align 8
  call void @_ZN3hls6streamI7ap_uintILi16EEE5writeERKS2_(%"class.hls::stream.8"* %210, %class.ap_uint.9* %mag_packed_val)
  br label %211

; <label>:211                                     ; preds = %208
  %212 = load i16* %j, align 2
  %213 = add i16 %212, 1
  store i16 %213, i16* %j, align 2
  br label %29

; <label>:214                                     ; preds = %29
  br label %215

; <label>:215                                     ; preds = %214
  %216 = load i16* %i, align 2
  %217 = add i16 %216, 1
  store i16 %217, i16* %i, align 2
  br label %21

; <label>:218                                     ; preds = %21
  ret void
}

declare void @_ZN7ap_uintILi9EEC1Ev(%class.ap_uint.7*)

declare %class.ap_uint.7* @_ZN7ap_uintILi9EEaSERKS0_(%class.ap_uint.7*, %class.ap_uint.7*)

declare i16 @_ZN3hls6streamI7ap_uintILi9EEE4readEv(%"class.hls::stream.6"*)

declare void @_ZN6ap_intILi9EEC1Em(%class.ap_int.35*, i64)

declare i64* @_ZN7ap_uintILi9EE5rangeEii(%class.ap_uint.7*, i32, i32)

declare i64 @_ZNK6ap_intILi9EEcvlEv(%class.ap_int.35*)

define internal signext i16 @_ZL24p_ZN2xf9Atan2LUT8Essiiiissiiii(i16 signext %xs, i16 signext %ys, i32 %M1, i32 %N1, i32 %M2, i32 %N2) uwtable {
  %1 = alloca i16, align 2
  %2 = alloca i16, align 2
  %3 = alloca i16, align 2
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %theta = alloca i16, align 2
  %s1 = alloca i8, align 1
  %s2 = alloca i8, align 1
  %s = alloca i8, align 1
  %gy_fp = alloca i16, align 2
  %gx_fp = alloca i16, align 2
  %frac_extractor = alloca i64, align 8
  %k2_fp = alloca i32, align 4
  %int_part = alloca i16, align 2
  %frac_part = alloca i32, align 4
  %frac_ind = alloca i32, align 4
  %frac_bits = alloca i32, align 4
  %MOut = alloca i8, align 1
  %NOut = alloca i8, align 1
  %ind = alloca i32, align 4
  store i16 %xs, i16* %2, align 2
  store i16 %ys, i16* %3, align 2
  store i32 %M1, i32* %4, align 4
  store i32 %N1, i32* %5, align 4
  store i32 %M2, i32* %6, align 4
  store i32 %N2, i32* %7, align 4
  %8 = load i32* %5, align 4
  %9 = load i32* %4, align 4
  %10 = sub nsw i32 9, %9
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %22

; <label>:12                                      ; preds = %0
  %13 = load i32* %7, align 4
  %14 = load i32* %6, align 4
  %15 = sub nsw i32 9, %14
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %22

; <label>:17                                      ; preds = %12
  %18 = load i32* %4, align 4
  %19 = load i32* %6, align 4
  %20 = icmp eq i32 %18, %19
  br i1 %20, label %21, label %22

; <label>:21                                      ; preds = %17
  br label %24

; <label>:22                                      ; preds = %17, %12, %0
  call void @__assert_fail(i8* getelementptr inbounds ([109 x i8]* @.str9, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str8, i32 0, i32 0), i32 535, i8* getelementptr inbounds ([65 x i8]* @__PRETTY_FUNCTION__._ZL24p_ZN2xf9Atan2LUT8Essiiiissiiii, i32 0, i32 0)) noreturn nounwind
  unreachable
                                                  ; No predecessors!
  br label %24

; <label>:24                                      ; preds = %23, %21
  %25 = load i16* %3, align 2
  %26 = sext i16 %25 to i32
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %33

; <label>:28                                      ; preds = %24
  %29 = load i16* %2, align 2
  %30 = sext i16 %29 to i32
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

; <label>:32                                      ; preds = %28
  store i16 0, i16* %1
  br label %178

; <label>:33                                      ; preds = %28, %24
  %34 = load i16* %2, align 2
  store i16 %34, i16* %gx_fp, align 2
  store i8 1, i8* %s1, align 1
  %35 = load i16* %3, align 2
  store i16 %35, i16* %gy_fp, align 2
  store i8 1, i8* %s2, align 1
  %36 = load i16* %2, align 2
  %37 = sext i16 %36 to i32
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %39, label %44

; <label>:39                                      ; preds = %33
  %40 = load i16* %2, align 2
  %41 = sext i16 %40 to i32
  %42 = sub nsw i32 0, %41
  %43 = trunc i32 %42 to i16
  store i16 %43, i16* %gx_fp, align 2
  store i8 -1, i8* %s1, align 1
  br label %44

; <label>:44                                      ; preds = %39, %33
  %45 = load i16* %3, align 2
  %46 = sext i16 %45 to i32
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %48, label %53

; <label>:48                                      ; preds = %44
  %49 = load i16* %3, align 2
  %50 = sext i16 %49 to i32
  %51 = sub nsw i32 0, %50
  %52 = trunc i32 %51 to i16
  store i16 %52, i16* %gy_fp, align 2
  store i8 -1, i8* %s2, align 1
  br label %53

; <label>:53                                      ; preds = %48, %44
  %54 = load i8* %s1, align 1
  %55 = sext i8 %54 to i32
  %56 = load i8* %s2, align 1
  %57 = sext i8 %56 to i32
  %58 = mul nsw i32 %55, %57
  %59 = trunc i32 %58 to i8
  store i8 %59, i8* %s, align 1
  %60 = load i16* %gx_fp, align 2
  %61 = trunc i16 %60 to i8
  %62 = load i16* %gy_fp, align 2
  %63 = trunc i16 %62 to i8
  %64 = call i32 @_ZL29p_ZN2xf11DivideYByX8EhhiiPcPchhiiPcS_(i8 zeroext %61, i8 zeroext %63, i32 8, i32 8, i8* %MOut, i8* %NOut)
  store i32 %64, i32* %k2_fp, align 4
  %65 = load i8* %NOut, align 1
  %66 = sext i8 %65 to i32
  %67 = shl i32 1, %66
  %68 = sub nsw i32 %67, 1
  %69 = sext i32 %68 to i64
  store i64 %69, i64* %frac_extractor, align 8
  %70 = load i32* %k2_fp, align 4
  %71 = load i8* %NOut, align 1
  %72 = sext i8 %71 to i32
  %73 = lshr i32 %70, %72
  %74 = trunc i32 %73 to i16
  store i16 %74, i16* %int_part, align 2
  %75 = load i32* %k2_fp, align 4
  %76 = zext i32 %75 to i64
  %77 = load i64* %frac_extractor, align 8
  %78 = and i64 %76, %77
  %79 = trunc i64 %78 to i32
  store i32 %79, i32* %frac_part, align 4
  %80 = load i16* %int_part, align 2
  %81 = zext i16 %80 to i32
  %82 = icmp slt i32 %81, 63
  br i1 %82, label %83, label %106

; <label>:83                                      ; preds = %53
  %84 = load i16* %int_part, align 2
  %85 = zext i16 %84 to i32
  %86 = add nsw i32 63, %85
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [126 x i32]* @_ZN2xf14base_addr_lut8E, i32 0, i64 %87
  %89 = load i32* %88, align 4
  store i32 %89, i32* %frac_bits, align 4
  %90 = load i32* %frac_part, align 4
  %91 = load i8* %NOut, align 1
  %92 = sext i8 %91 to i32
  %93 = load i32* %frac_bits, align 4
  %94 = sub i32 %92, %93
  %95 = lshr i32 %90, %94
  store i32 %95, i32* %frac_ind, align 4
  %96 = load i16* %int_part, align 2
  %97 = zext i16 %96 to i64
  %98 = getelementptr inbounds [126 x i32]* @_ZN2xf14base_addr_lut8E, i32 0, i64 %97
  %99 = load i32* %98, align 4
  %100 = load i32* %frac_ind, align 4
  %101 = add i32 %99, %100
  store i32 %101, i32* %ind, align 4
  %102 = load i32* %ind, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds [977 x i16]* @_ZN2xf12atan_lut_fp8E, i32 0, i64 %103
  %105 = load i16* %104, align 2
  store i16 %105, i16* %theta, align 2
  br label %107

; <label>:106                                     ; preds = %53
  store i16 6433, i16* %theta, align 2
  br label %107

; <label>:107                                     ; preds = %106, %83
  %108 = load i16* %gx_fp, align 2
  %109 = zext i16 %108 to i32
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

; <label>:111                                     ; preds = %107
  store i16 6433, i16* %theta, align 2
  br label %112

; <label>:112                                     ; preds = %111, %107
  %113 = load i8* %s, align 1
  %114 = sext i8 %113 to i32
  %115 = icmp slt i32 %114, 0
  br i1 %115, label %116, label %121

; <label>:116                                     ; preds = %112
  %117 = load i16* %theta, align 2
  %118 = sext i16 %117 to i32
  %119 = sub nsw i32 0, %118
  %120 = trunc i32 %119 to i16
  store i16 %120, i16* %theta, align 2
  br label %121

; <label>:121                                     ; preds = %116, %112
  %122 = load i16* %2, align 2
  %123 = sext i16 %122 to i32
  %124 = icmp sgt i32 %123, 0
  br i1 %124, label %125, label %127

; <label>:125                                     ; preds = %121
  %126 = load i16* %theta, align 2
  store i16 %126, i16* %1
  br label %178

; <label>:127                                     ; preds = %121
  %128 = load i16* %3, align 2
  %129 = sext i16 %128 to i32
  %130 = icmp sge i32 %129, 0
  br i1 %130, label %131, label %140

; <label>:131                                     ; preds = %127
  %132 = load i16* %2, align 2
  %133 = sext i16 %132 to i32
  %134 = icmp slt i32 %133, 0
  br i1 %134, label %135, label %140

; <label>:135                                     ; preds = %131
  %136 = load i16* %theta, align 2
  %137 = sext i16 %136 to i32
  %138 = add nsw i32 12867, %137
  %139 = trunc i32 %138 to i16
  store i16 %139, i16* %1
  br label %178

; <label>:140                                     ; preds = %131, %127
  %141 = load i16* %3, align 2
  %142 = sext i16 %141 to i32
  %143 = icmp slt i32 %142, 0
  br i1 %143, label %144, label %153

; <label>:144                                     ; preds = %140
  %145 = load i16* %2, align 2
  %146 = sext i16 %145 to i32
  %147 = icmp slt i32 %146, 0
  br i1 %147, label %148, label %153

; <label>:148                                     ; preds = %144
  %149 = load i16* %theta, align 2
  %150 = sext i16 %149 to i32
  %151 = sub nsw i32 %150, 12867
  %152 = trunc i32 %151 to i16
  store i16 %152, i16* %1
  br label %178

; <label>:153                                     ; preds = %144, %140
  %154 = load i16* %3, align 2
  %155 = sext i16 %154 to i32
  %156 = icmp sgt i32 %155, 0
  br i1 %156, label %157, label %162

; <label>:157                                     ; preds = %153
  %158 = load i16* %2, align 2
  %159 = sext i16 %158 to i32
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

; <label>:161                                     ; preds = %157
  store i16 6433, i16* %1
  br label %178

; <label>:162                                     ; preds = %157, %153
  %163 = load i16* %3, align 2
  %164 = sext i16 %163 to i32
  %165 = icmp slt i32 %164, 0
  br i1 %165, label %166, label %171

; <label>:166                                     ; preds = %162
  %167 = load i16* %2, align 2
  %168 = sext i16 %167 to i32
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

; <label>:170                                     ; preds = %166
  store i16 -6433, i16* %1
  br label %178

; <label>:171                                     ; preds = %166, %162
  br label %172

; <label>:172                                     ; preds = %171
  br label %173

; <label>:173                                     ; preds = %172
  br label %174

; <label>:174                                     ; preds = %173
  br label %175

; <label>:175                                     ; preds = %174
  br label %176

; <label>:176                                     ; preds = %175
  %177 = load i16* %theta, align 2
  store i16 %177, i16* %1
  br label %178

; <label>:178                                     ; preds = %176, %170, %161, %148, %135, %125, %32
  %179 = load i16* %1
  ret i16 %179
}

declare void @_ZN7ap_uintILi16EEC1Ei(%class.ap_uint.9*, i32)

declare void @_ZN7ap_uintILi17EEC1Ei(%class.ap_uint.16*, i32)

declare void @_ZN7ap_uintILi17EEC1ILi34EEERK6ap_intIXT_EE(%class.ap_uint.16*, %class.ap_int.36*)

declare i40 @_ZplILi17ELi17EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i24, i24)

declare void @_ZN9ap_ufixedILi31ELi31EL9ap_q_mode5EL9ap_o_mode0ELi0EEC1ILi31EEERK7ap_uintIXT_EE(%class.ap_ufixed.37*, %class.ap_uint.38*)

declare i32 @_ZlsILi31EE7ap_uintIXT_EES1_i(i32, i32)

declare void @_ZN7ap_uintILi31EEC1ILi17EEERKS_IXT_EE(%class.ap_uint.38*, %class.ap_uint.16*)

define internal i16 @_ZL74p_Z9xFSqrtHOGILi16ELi31ELi31ELi5ELi0EE9ap_ufixedILi31ELi31ELi5ELi0ELi0EE_19ap_ufixedILi31ELi31EL9ap_q_mode5EL9ap_o_mode0ELi0EE(i32 %x.coerce) uwtable {
  %1 = alloca %class.ap_uint.9, align 1
  %x = alloca %class.ap_ufixed.37, align 4
  %factor = alloca %class.ap_ufixed.39, align 1
  %offset = alloca i8, align 1
  %2 = alloca %struct.af_bit_ref.40, align 1
  %result = alloca %class.ap_ufixed.42, align 1
  %x2 = alloca %class.ap_ufixed.17, align 1
  %_s_i = alloca i32, align 4
  %_l_i = alloca i8, align 1
  %t = alloca %class.ap_ufixed.17, align 1
  %3 = alloca %class.ap_fixed.43, align 1
  %4 = alloca %class.ap_ufixed.42, align 1
  %5 = alloca %class.ap_ufixed.42, align 1
  %6 = alloca i40
  %7 = alloca i40
  %8 = alloca %class.ap_ufixed.39, align 1
  %9 = alloca i40
  %10 = alloca { i64, i8 }
  %thisfactor = alloca %class.ap_ufixed.39, align 1
  %11 = alloca %class.ap_ufixed.17, align 1
  %12 = alloca %class.ap_ufixed.17, align 1
  %13 = alloca i40
  %14 = alloca i40
  %15 = alloca %class.ap_ufixed.17, align 1
  %16 = alloca i40
  %17 = alloca %class.ap_ufixed.17, align 1
  %18 = alloca i40
  %19 = alloca %class.ap_ufixed.42, align 1
  %20 = alloca %class.ap_fixed.43, align 1
  %21 = alloca %class.ap_ufixed.42, align 1
  %22 = alloca %class.ap_ufixed.39, align 1
  %23 = alloca i40
  %24 = alloca { i64, i8 }
  %25 = alloca %class.ap_ufixed.42, align 1
  %26 = alloca %class.ap_ufixed.42, align 1
  %27 = alloca i40
  %28 = alloca i40
  %29 = getelementptr %class.ap_ufixed.37* %x, i32 0, i32 0
  %30 = bitcast [4 x i8]* %29 to i32*
  store i32 %x.coerce, i32* %30, align 1
  call void @_ZN9ap_ufixedILi32ELi31EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1Ei(%class.ap_ufixed.39* %factor, i32 0)
  store i8 0, i8* %offset, align 1
  %31 = load i8* %offset, align 1
  %32 = trunc i8 %31 to i1
  %33 = zext i1 %32 to i32
  %34 = sub nsw i32 31, %33
  call void @_ZN9ap_ufixedILi32ELi31EL9ap_q_mode5EL9ap_o_mode3ELi0EEixEj(%struct.af_bit_ref.40* sret %2, %class.ap_ufixed.39* %factor, i32 %34)
  %35 = call %struct.af_bit_ref.40* @_ZN10af_bit_refILi32ELi31ELb0EL9ap_q_mode5EL9ap_o_mode3ELi0EEaSEb(%struct.af_bit_ref.40* %2, i1 zeroext true)
  call void @_ZN9ap_ufixedILi33ELi32EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1Ei(%class.ap_ufixed.42* %result, i32 0)
  call void @_ZN9ap_ufixedILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi31ELi31ELS0_5ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_ufixed.17* %x2, %class.ap_ufixed.37* %x)
  %36 = load i8* %offset, align 1
  %37 = trunc i8 %36 to i1
  %38 = zext i1 %37 to i32
  %39 = sub nsw i32 32, %38
  %40 = trunc i32 %39 to i8
  %41 = zext i8 %40 to i32
  store i32 %41, i32* %_s_i, align 4
  %42 = load i8* %offset, align 1
  %43 = trunc i8 %42 to i1
  %44 = zext i1 %43 to i32
  %45 = sub nsw i32 32, %44
  %46 = trunc i32 %45 to i8
  store i8 %46, i8* %_l_i, align 1
  %47 = load i8* %offset, align 1
  %48 = trunc i8 %47 to i1
  %49 = zext i1 %48 to i32
  %50 = sub nsw i32 32, %49
  %51 = trunc i32 %50 to i8
  %52 = zext i8 %51 to i32
  store i32 %52, i32* %_s_i, align 4
  br label %53

; <label>:53                                      ; preds = %124, %0
  %54 = load i32* %_s_i, align 4
  %55 = icmp sge i32 %54, 16
  br i1 %55, label %56, label %127

; <label>:56                                      ; preds = %53
  %57 = bitcast %class.ap_ufixed.42* %5 to i8*
  %58 = bitcast %class.ap_ufixed.42* %result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 5, i32 1, i1 false)
  %59 = getelementptr %class.ap_ufixed.42* %5, i32 0, i32 0
  %60 = bitcast i40* %6 to [5 x i8]*
  %61 = load [5 x i8]* %59
  store [5 x i8] %61, [5 x i8]* %60, align 1
  %62 = load i40* %6
  %63 = call i40 @_ZlsILi33ELi32EL9ap_q_mode5EL9ap_o_mode3ELi0EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES3_i(i40 %62, i32 1)
  %64 = getelementptr %class.ap_ufixed.42* %4, i32 0, i32 0
  store i40 %63, i40* %7
  %65 = bitcast i40* %7 to [5 x i8]*
  %66 = load [5 x i8]* %65, align 1
  store [5 x i8] %66, [5 x i8]* %64
  %67 = bitcast %class.ap_ufixed.39* %8 to i8*
  %68 = bitcast %class.ap_ufixed.39* %factor to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 4, i32 1, i1 false)
  %69 = getelementptr %class.ap_ufixed.42* %4, i32 0, i32 0
  %70 = bitcast i40* %9 to [5 x i8]*
  %71 = load [5 x i8]* %69
  store [5 x i8] %71, [5 x i8]* %70, align 1
  %72 = load i40* %9
  %73 = getelementptr %class.ap_ufixed.39* %8, i32 0, i32 0
  %74 = bitcast [4 x i8]* %73 to i32*
  %75 = load i32* %74, align 1
  %76 = call { i64, i8 } @_ZplILi33ELi32EL9ap_q_mode5EL9ap_o_mode3ELi0ELi32ELi31ELS0_5ELS1_3ELi0EE8ap_fixedIXplT_T4_EXT5_EXT1_EXT2_EXT3_EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_IXT4_EXT5_EXT6_EXT7_EXT8_EE(i40 %72, i32 %75)
  %77 = getelementptr %class.ap_fixed.43* %3, i32 0, i32 0
  store { i64, i8 } %76, { i64, i8 }* %10
  %78 = bitcast { i64, i8 }* %10 to [9 x i8]*
  %79 = load [9 x i8]* %78, align 1
  store [9 x i8] %79, [9 x i8]* %77
  call void @_ZN9ap_ufixedILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi65ELi31ELS0_5ELS1_3ELi0EEERK8ap_fixedIXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_ufixed.17* %t, %class.ap_fixed.43* %3)
  call void @_ZN9ap_ufixedILi32ELi31EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1Ei(%class.ap_ufixed.39* %thisfactor, i32 0)
  %80 = bitcast %class.ap_ufixed.17* %11 to i8*
  %81 = bitcast %class.ap_ufixed.17* %x2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %81, i64 5, i32 1, i1 false)
  %82 = bitcast %class.ap_ufixed.17* %12 to i8*
  %83 = bitcast %class.ap_ufixed.17* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %83, i64 5, i32 1, i1 false)
  %84 = getelementptr %class.ap_ufixed.17* %11, i32 0, i32 0
  %85 = bitcast i40* %13 to [5 x i8]*
  %86 = load [5 x i8]* %84
  store [5 x i8] %86, [5 x i8]* %85, align 1
  %87 = load i40* %13
  %88 = getelementptr %class.ap_ufixed.17* %12, i32 0, i32 0
  %89 = bitcast i40* %14 to [5 x i8]*
  %90 = load [5 x i8]* %88
  store [5 x i8] %90, [5 x i8]* %89, align 1
  %91 = load i40* %14
  %92 = call zeroext i1 @_ZgeILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0ELi34ELi33ELS0_5ELS1_3ELi0EEb9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES2_IXT4_EXT5_EXT6_EXT7_EXT8_EE(i40 %87, i40 %91)
  br i1 %92, label %93, label %105

; <label>:93                                      ; preds = %56
  %94 = bitcast %class.ap_ufixed.17* %15 to i8*
  %95 = bitcast %class.ap_ufixed.17* %t to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %95, i64 5, i32 1, i1 false)
  %96 = getelementptr %class.ap_ufixed.17* %15, i32 0, i32 0
  %97 = bitcast i40* %16 to [5 x i8]*
  %98 = load [5 x i8]* %96
  store [5 x i8] %98, [5 x i8]* %97, align 1
  %99 = load i40* %16
  %100 = call i40 @_ZmIILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0ELi34ELi33ELS0_5ELS1_3ELi0EE9ap_ufixedIXT_EXT5_EXT1_EXT2_EXT3_EERS2_IXT_EXT0_EXT1_EXT2_EXT3_EES2_IXT4_EXT5_EXT6_EXT7_EXT8_EE(%class.ap_ufixed.17* %x2, i40 %99)
  %101 = getelementptr %class.ap_ufixed.17* %17, i32 0, i32 0
  store i40 %100, i40* %18
  %102 = bitcast i40* %18 to [5 x i8]*
  %103 = load [5 x i8]* %102, align 1
  store [5 x i8] %103, [5 x i8]* %101
  %104 = call %class.ap_ufixed.39* @_ZN9ap_ufixedILi32ELi31EL9ap_q_mode5EL9ap_o_mode3ELi0EEaSERKS2_(%class.ap_ufixed.39* %thisfactor, %class.ap_ufixed.39* %factor)
  br label %105

; <label>:105                                     ; preds = %93, %56
  %106 = bitcast %class.ap_ufixed.42* %21 to i8*
  %107 = bitcast %class.ap_ufixed.42* %result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %106, i8* %107, i64 5, i32 1, i1 false)
  %108 = bitcast %class.ap_ufixed.39* %22 to i8*
  %109 = bitcast %class.ap_ufixed.39* %thisfactor to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %108, i8* %109, i64 4, i32 1, i1 false)
  %110 = getelementptr %class.ap_ufixed.42* %21, i32 0, i32 0
  %111 = bitcast i40* %23 to [5 x i8]*
  %112 = load [5 x i8]* %110
  store [5 x i8] %112, [5 x i8]* %111, align 1
  %113 = load i40* %23
  %114 = getelementptr %class.ap_ufixed.39* %22, i32 0, i32 0
  %115 = bitcast [4 x i8]* %114 to i32*
  %116 = load i32* %115, align 1
  %117 = call { i64, i8 } @_ZplILi33ELi32EL9ap_q_mode5EL9ap_o_mode3ELi0ELi32ELi31ELS0_5ELS1_3ELi0EE8ap_fixedIXplT_T4_EXT5_EXT1_EXT2_EXT3_EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_IXT4_EXT5_EXT6_EXT7_EXT8_EE(i40 %113, i32 %116)
  %118 = getelementptr %class.ap_fixed.43* %20, i32 0, i32 0
  store { i64, i8 } %117, { i64, i8 }* %24
  %119 = bitcast { i64, i8 }* %24 to [9 x i8]*
  %120 = load [9 x i8]* %119, align 1
  store [9 x i8] %120, [9 x i8]* %118
  call void @_ZN9ap_ufixedILi33ELi32EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi65ELi31ELS0_5ELS1_3ELi0EEERK8ap_fixedIXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_ufixed.42* %19, %class.ap_fixed.43* %20)
  %121 = call %class.ap_ufixed.42* @_ZN9ap_ufixedILi33ELi32EL9ap_q_mode5EL9ap_o_mode3ELi0EEaSERKS2_(%class.ap_ufixed.42* %result, %class.ap_ufixed.42* %19)
  %122 = call %class.ap_ufixed.39* @_ZrSILi32ELi31EL9ap_q_mode5EL9ap_o_mode3ELi0EER9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_i(%class.ap_ufixed.39* %factor, i32 1)
  %123 = call %class.ap_ufixed.17* @_ZlSILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0EER9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_i(%class.ap_ufixed.17* %x2, i32 1)
  br label %124

; <label>:124                                     ; preds = %105
  %125 = load i32* %_s_i, align 4
  %126 = add nsw i32 %125, -1
  store i32 %126, i32* %_s_i, align 4
  br label %53

; <label>:127                                     ; preds = %53
  %128 = bitcast %class.ap_ufixed.42* %26 to i8*
  %129 = bitcast %class.ap_ufixed.42* %result to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* %129, i64 5, i32 1, i1 false)
  %130 = getelementptr %class.ap_ufixed.42* %26, i32 0, i32 0
  %131 = bitcast i40* %27 to [5 x i8]*
  %132 = load [5 x i8]* %130
  store [5 x i8] %132, [5 x i8]* %131, align 1
  %133 = load i40* %27
  %134 = call i40 @_ZrsILi33ELi32EL9ap_q_mode5EL9ap_o_mode3ELi0EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES3_i(i40 %133, i32 15)
  %135 = getelementptr %class.ap_ufixed.42* %25, i32 0, i32 0
  store i40 %134, i40* %28
  %136 = bitcast i40* %28 to [5 x i8]*
  %137 = load [5 x i8]* %136, align 1
  store [5 x i8] %137, [5 x i8]* %135
  call void @_ZN7ap_uintILi16EEC1ILi33ELi32EL9ap_q_mode5EL9ap_o_mode3ELi0EEERK9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_uint.9* %1, %class.ap_ufixed.42* %25)
  %138 = getelementptr %class.ap_uint.9* %1, i32 0, i32 0
  %139 = bitcast [2 x i8]* %138 to i16*
  %140 = load i16* %139, align 1
  ret i16 %140
}

declare void @_ZN3hls6streamI7ap_uintILi16EEE5writeERKS2_(%"class.hls::stream.8"*, %class.ap_uint.9*)

declare void @_ZN9ap_ufixedILi32ELi31EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1Ei(%class.ap_ufixed.39*, i32)

declare void @_ZN9ap_ufixedILi32ELi31EL9ap_q_mode5EL9ap_o_mode3ELi0EEixEj(%struct.af_bit_ref.40* sret, %class.ap_ufixed.39*, i32)

declare %struct.af_bit_ref.40* @_ZN10af_bit_refILi32ELi31ELb0EL9ap_q_mode5EL9ap_o_mode3ELi0EEaSEb(%struct.af_bit_ref.40*, i1 zeroext)

declare void @_ZN9ap_ufixedILi33ELi32EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1Ei(%class.ap_ufixed.42*, i32)

declare void @_ZN9ap_ufixedILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi31ELi31ELS0_5ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_ufixed.17*, %class.ap_ufixed.37*)

declare void @_ZN9ap_ufixedILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi65ELi31ELS0_5ELS1_3ELi0EEERK8ap_fixedIXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_ufixed.17*, %class.ap_fixed.43*)

declare { i64, i8 } @_ZplILi33ELi32EL9ap_q_mode5EL9ap_o_mode3ELi0ELi32ELi31ELS0_5ELS1_3ELi0EE8ap_fixedIXplT_T4_EXT5_EXT1_EXT2_EXT3_EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_IXT4_EXT5_EXT6_EXT7_EXT8_EE(i40, i32)

declare i40 @_ZlsILi33ELi32EL9ap_q_mode5EL9ap_o_mode3ELi0EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES3_i(i40, i32)

declare zeroext i1 @_ZgeILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0ELi34ELi33ELS0_5ELS1_3ELi0EEb9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES2_IXT4_EXT5_EXT6_EXT7_EXT8_EE(i40, i40)

declare i40 @_ZmIILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0ELi34ELi33ELS0_5ELS1_3ELi0EE9ap_ufixedIXT_EXT5_EXT1_EXT2_EXT3_EERS2_IXT_EXT0_EXT1_EXT2_EXT3_EES2_IXT4_EXT5_EXT6_EXT7_EXT8_EE(%class.ap_ufixed.17*, i40)

declare %class.ap_ufixed.39* @_ZN9ap_ufixedILi32ELi31EL9ap_q_mode5EL9ap_o_mode3ELi0EEaSERKS2_(%class.ap_ufixed.39*, %class.ap_ufixed.39*)

declare %class.ap_ufixed.42* @_ZN9ap_ufixedILi33ELi32EL9ap_q_mode5EL9ap_o_mode3ELi0EEaSERKS2_(%class.ap_ufixed.42*, %class.ap_ufixed.42*)

declare void @_ZN9ap_ufixedILi33ELi32EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi65ELi31ELS0_5ELS1_3ELi0EEERK8ap_fixedIXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_ufixed.42*, %class.ap_fixed.43*)

declare %class.ap_ufixed.39* @_ZrSILi32ELi31EL9ap_q_mode5EL9ap_o_mode3ELi0EER9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_i(%class.ap_ufixed.39*, i32)

declare %class.ap_ufixed.17* @_ZlSILi34ELi33EL9ap_q_mode5EL9ap_o_mode3ELi0EER9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES4_i(%class.ap_ufixed.17*, i32)

declare void @_ZN7ap_uintILi16EEC1ILi33ELi32EL9ap_q_mode5EL9ap_o_mode3ELi0EEERK9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EE(%class.ap_uint.9*, %class.ap_ufixed.42*)

declare i40 @_ZrsILi33ELi32EL9ap_q_mode5EL9ap_o_mode3ELi0EE9ap_ufixedIXT_EXT0_EXT1_EXT2_EXT3_EES3_i(i40, i32)

define internal i32 @_ZL29p_ZN2xf11DivideYByX8EhhiiPcPchhiiPcS_(i8 zeroext %x, i8 zeroext %y, i32 %M1, i32 %M2, i8* %out_M, i8* %out_N) uwtable {
  %1 = alloca i8, align 1
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %div_val = alloca i32, align 4
  %MOut = alloca i8, align 1
  %NOut = alloca i8, align 1
  %x_inv = alloca i16, align 2
  store i8 %x, i8* %1, align 1
  store i8 %y, i8* %2, align 1
  store i32 %M1, i32* %3, align 4
  store i32 %M2, i32* %4, align 4
  store i8* %out_M, i8** %5, align 8
  store i8* %out_N, i8** %6, align 8
  %7 = load i32* %3, align 4
  %8 = icmp eq i32 %7, 8
  br i1 %8, label %9, label %13

; <label>:9                                       ; preds = %0
  %10 = load i32* %4, align 4
  %11 = icmp eq i32 %10, 8
  br i1 %11, label %12, label %13

; <label>:12                                      ; preds = %9
  br label %15

; <label>:13                                      ; preds = %9, %0
  call void @__assert_fail(i8* getelementptr inbounds ([58 x i8]* @.str10, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str8, i32 0, i32 0), i32 420, i8* getelementptr inbounds ([99 x i8]* @__PRETTY_FUNCTION__._ZL29p_ZN2xf11DivideYByX8EhhiiPcPchhiiPcS_, i32 0, i32 0)) noreturn nounwind
  unreachable
                                                  ; No predecessors!
  br label %15

; <label>:15                                      ; preds = %14, %12
  %16 = load i8* %1, align 1
  %17 = load i32* %3, align 4
  %18 = call zeroext i16 @_ZL21p_ZN2xf8Inverse8EhiPchiPc(i8 zeroext %16, i32 %17, i8* %NOut)
  store i16 %18, i16* %x_inv, align 2
  %19 = load i8* %NOut, align 1
  %20 = sext i8 %19 to i32
  %21 = sub nsw i32 16, %20
  %22 = load i32* %4, align 4
  %23 = add nsw i32 %21, %22
  %24 = trunc i32 %23 to i8
  store i8 %24, i8* %MOut, align 1
  %25 = load i8* %NOut, align 1
  %26 = sext i8 %25 to i32
  %27 = load i32* %4, align 4
  %28 = sub nsw i32 8, %27
  %29 = add nsw i32 %26, %28
  %30 = trunc i32 %29 to i8
  store i8 %30, i8* %NOut, align 1
  %31 = load i8* %2, align 1
  %32 = zext i8 %31 to i32
  %33 = load i16* %x_inv, align 2
  %34 = zext i16 %33 to i32
  %35 = mul nsw i32 %32, %34
  store i32 %35, i32* %div_val, align 4
  %36 = load i8* %MOut, align 1
  %37 = load i8** %5, align 8
  store i8 %36, i8* %37, align 1
  %38 = load i8* %NOut, align 1
  %39 = load i8** %6, align 8
  store i8 %38, i8* %39, align 1
  %40 = load i32* %div_val, align 4
  ret i32 %40
}

define internal zeroext i16 @_ZL21p_ZN2xf8Inverse8EhiPchiPc(i8 zeroext %x, i32 %M, i8* %N) nounwind uwtable {
  %1 = alloca i16, align 2
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %val = alloca i32, align 4
  %index = alloca i32, align 4
  store i8 %x, i8* %2, align 1
  store i32 %M, i32* %3, align 4
  store i8* %N, i8** %4, align 8
  %5 = load i32* %3, align 4
  %6 = icmp eq i32 %5, 8
  br i1 %6, label %7, label %8

; <label>:7                                       ; preds = %0
  br label %10

; <label>:8                                       ; preds = %0
  call void @__assert_fail(i8* getelementptr inbounds ([40 x i8]* @.str11, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str8, i32 0, i32 0), i32 356, i8* getelementptr inbounds ([65 x i8]* @__PRETTY_FUNCTION__._ZL21p_ZN2xf8Inverse8EhiPchiPc, i32 0, i32 0)) noreturn nounwind
  unreachable
                                                  ; No predecessors!
  br label %10

; <label>:10                                      ; preds = %9, %7
  store i32 0, i32* %val, align 4
  %11 = load i8* %2, align 1
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

; <label>:14                                      ; preds = %10
  %15 = load i16* getelementptr inbounds ([256 x i16]* @_ZN2xf13division_lut8E, i32 0, i64 0), align 2
  store i16 %15, i16* %1
  br label %26

; <label>:16                                      ; preds = %10
  %17 = load i8* %2, align 1
  %18 = zext i8 %17 to i64
  %19 = getelementptr inbounds [256 x i16]* @_ZN2xf13division_lut8E, i32 0, i64 %18
  %20 = load i16* %19, align 2
  %21 = zext i16 %20 to i32
  store i32 %21, i32* %val, align 4
  %22 = load i8** %4, align 8
  store i8 15, i8* %22, align 1
  br label %23

; <label>:23                                      ; preds = %16
  %24 = load i32* %val, align 4
  %25 = trunc i32 %24 to i16
  store i16 %25, i16* %1
  br label %26

; <label>:26                                      ; preds = %23, %14
  %27 = load i16* %1
  ret i16 %27
}

define internal void @_ZL157p_Z20xFHOGgradientsKernelILi2160ELi3840ELi0ELi13ELi1ELi1ELi2ELi1ELi3840ELi1ELb0EEP6streamI7ap_uintILi8EEER6streamI7ap_uintILi9EEER6streamI7ap_uintILi9EEEtt_1PN3hls6streamI7ap_uintILi8EEEERNS0_IS1_ILi9EEEES7_tt(%"class.hls::stream.2"* %_src_strm, %"class.hls::stream.6"* %_gradx_strm, %"class.hls::stream.6"* %_grady_strm, i16 zeroext %_height, i16 zeroext %_width) uwtable {
  %1 = alloca %"class.hls::stream.2"*, align 8
  %2 = alloca %"class.hls::stream.6"*, align 8
  %3 = alloca %"class.hls::stream.6"*, align 8
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %row_ind = alloca i16, align 2
  %p = alloca %class.ap_uint.44, align 1
  %tp = alloca %class.ap_uint.12, align 1
  %mid = alloca %class.ap_uint.12, align 1
  %bottom = alloca %class.ap_uint.12, align 1
  %step = alloca i8, align 1
  %max_loop = alloca i16, align 2
  %buf_size = alloca i8, align 1
  %col = alloca i16, align 2
  %j = alloca i16, align 2
  %row = alloca i16, align 2
  %i = alloca i16, align 2
  %GradientValuesX = alloca [1 x %class.ap_int.35], align 1
  %GradientValuesY = alloca [1 x %class.ap_int.35], align 1
  %src_buf0 = alloca [1 x [3 x %class.ap_uint.0]], align 1
  %src_buf1 = alloca [1 x [3 x %class.ap_uint.0]], align 1
  %src_buf2 = alloca [1 x [3 x %class.ap_uint.0]], align 1
  %P0 = alloca %class.ap_uint.7, align 1
  %P1 = alloca %class.ap_uint.7, align 1
  %buf = alloca [1 x [3 x [3840 x %class.ap_uint.0]]], align 16
  %6 = alloca %class.ap_uint.44, align 1
  %7 = alloca %class.ap_uint.0, align 1
  %8 = alloca %class.ap_uint.44, align 1
  %9 = alloca %class.ap_uint.44, align 1
  %10 = alloca %class.ap_uint.44, align 1
  %11 = alloca %class.ap_uint.45, align 1
  %12 = alloca %class.ap_uint.12, align 1
  %13 = alloca %class.ap_uint.12, align 1
  %14 = alloca %class.ap_uint.12, align 1
  %15 = alloca %class.ap_uint.44, align 1
  %16 = alloca %class.ap_uint.44, align 1
  %17 = alloca %class.ap_uint.44, align 1
  %18 = alloca %class.ap_uint.44, align 1
  %19 = alloca %class.ap_uint.44, align 1
  %20 = alloca %class.ap_uint.44, align 1
  %21 = alloca %class.ap_uint.45, align 1
  %22 = alloca %class.ap_uint.12, align 1
  %23 = alloca %class.ap_uint.12, align 1
  %24 = alloca %class.ap_uint.12, align 1
  %25 = alloca %class.ap_uint.44, align 1
  %26 = alloca %class.ap_uint.44, align 1
  store %"class.hls::stream.2"* %_src_strm, %"class.hls::stream.2"** %1, align 8
  store %"class.hls::stream.6"* %_gradx_strm, %"class.hls::stream.6"** %2, align 8
  store %"class.hls::stream.6"* %_grady_strm, %"class.hls::stream.6"** %3, align 8
  store i16 %_height, i16* %4, align 2
  store i16 %_width, i16* %5, align 2
  call void @_ZN7ap_uintILi3EEC1Ev(%class.ap_uint.44* %p)
  call void @_ZN7ap_uintILi2EEC1Ev(%class.ap_uint.12* %tp)
  call void @_ZN7ap_uintILi2EEC1Ev(%class.ap_uint.12* %mid)
  call void @_ZN7ap_uintILi2EEC1Ev(%class.ap_uint.12* %bottom)
  store i8 9, i8* %step, align 1
  store i16 9, i16* %max_loop, align 2
  store i8 3, i8* %buf_size, align 1
  %27 = getelementptr inbounds [1 x %class.ap_int.35]* %GradientValuesX, i32 0, i32 0
  %28 = getelementptr inbounds %class.ap_int.35* %27, i64 1
  br label %29

; <label>:29                                      ; preds = %29, %0
  %30 = phi %class.ap_int.35* [ %27, %0 ], [ %31, %29 ]
  call void @_ZN6ap_intILi9EEC1Ev(%class.ap_int.35* %30)
  %31 = getelementptr inbounds %class.ap_int.35* %30, i64 1
  %32 = icmp eq %class.ap_int.35* %31, %28
  br i1 %32, label %33, label %29

; <label>:33                                      ; preds = %29
  %34 = getelementptr inbounds [1 x %class.ap_int.35]* %GradientValuesY, i32 0, i32 0
  %35 = getelementptr inbounds %class.ap_int.35* %34, i64 1
  br label %36

; <label>:36                                      ; preds = %36, %33
  %37 = phi %class.ap_int.35* [ %34, %33 ], [ %38, %36 ]
  call void @_ZN6ap_intILi9EEC1Ev(%class.ap_int.35* %37)
  %38 = getelementptr inbounds %class.ap_int.35* %37, i64 1
  %39 = icmp eq %class.ap_int.35* %38, %35
  br i1 %39, label %40, label %36

; <label>:40                                      ; preds = %36
  %41 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %class.ap_uint.0* %41, i64 3
  br label %43

; <label>:43                                      ; preds = %43, %40
  %44 = phi %class.ap_uint.0* [ %41, %40 ], [ %45, %43 ]
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %44)
  %45 = getelementptr inbounds %class.ap_uint.0* %44, i64 1
  %46 = icmp eq %class.ap_uint.0* %45, %42
  br i1 %46, label %47, label %43

; <label>:47                                      ; preds = %43
  %48 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf1, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %class.ap_uint.0* %48, i64 3
  br label %50

; <label>:50                                      ; preds = %50, %47
  %51 = phi %class.ap_uint.0* [ %48, %47 ], [ %52, %50 ]
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %51)
  %52 = getelementptr inbounds %class.ap_uint.0* %51, i64 1
  %53 = icmp eq %class.ap_uint.0* %52, %49
  br i1 %53, label %54, label %50

; <label>:54                                      ; preds = %50
  %55 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf2, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %class.ap_uint.0* %55, i64 3
  br label %57

; <label>:57                                      ; preds = %57, %54
  %58 = phi %class.ap_uint.0* [ %55, %54 ], [ %59, %57 ]
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %58)
  %59 = getelementptr inbounds %class.ap_uint.0* %58, i64 1
  %60 = icmp eq %class.ap_uint.0* %59, %56
  br i1 %60, label %61, label %57

; <label>:61                                      ; preds = %57
  call void @_ZN7ap_uintILi9EEC1Ev(%class.ap_uint.7* %P0)
  call void @_ZN7ap_uintILi9EEC1Ev(%class.ap_uint.7* %P1)
  %62 = getelementptr inbounds [1 x [3 x [3840 x %class.ap_uint.0]]]* %buf, i32 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %class.ap_uint.0* %62, i64 11520
  br label %64

; <label>:64                                      ; preds = %64, %61
  %65 = phi %class.ap_uint.0* [ %62, %61 ], [ %66, %64 ]
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %65)
  %66 = getelementptr inbounds %class.ap_uint.0* %65, i64 1
  %67 = icmp eq %class.ap_uint.0* %66, %63
  br i1 %67, label %68, label %64

; <label>:68                                      ; preds = %64
  store i16 1, i16* %row_ind, align 2
  br label %69

; <label>:69                                      ; preds = %68
  store i16 0, i16* %col, align 2
  br label %70

; <label>:70                                      ; preds = %114, %69
  %71 = load i16* %col, align 2
  %72 = zext i16 %71 to i32
  %73 = load i16* %5, align 2
  %74 = zext i16 %73 to i32
  %75 = icmp slt i32 %72, %74
  br i1 %75, label %76, label %117

; <label>:76                                      ; preds = %70
  br label %77

; <label>:77                                      ; preds = %76
  %78 = call %class.ap_uint.44* @_ZN7ap_uintILi3EEaSEi(%class.ap_uint.44* %p, i32 0)
  br label %79

; <label>:79                                      ; preds = %109, %77
  %80 = bitcast %class.ap_uint.44* %6 to i8*
  %81 = bitcast %class.ap_uint.44* %p to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %81, i64 1, i32 1, i1 false)
  %82 = getelementptr %class.ap_uint.44* %6, i32 0, i32 0
  %83 = bitcast [1 x i8]* %82 to i8*
  %84 = load i8* %83, align 1
  %85 = call zeroext i1 @_ZltILi3EEb7ap_uintIXT_EEi(i8 %84, i32 1)
  br i1 %85, label %86, label %113

; <label>:86                                      ; preds = %79
  %87 = load i16* %col, align 2
  %88 = zext i16 %87 to i64
  %89 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %90 = getelementptr inbounds [1 x [3 x [3840 x %class.ap_uint.0]]]* %buf, i32 0, i64 %89
  %91 = getelementptr inbounds [3 x [3840 x %class.ap_uint.0]]* %90, i32 0, i64 0
  %92 = getelementptr inbounds [3840 x %class.ap_uint.0]* %91, i32 0, i64 %88
  %93 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %92, i32 0)
  %94 = load i16* %col, align 2
  %95 = zext i16 %94 to i64
  %96 = load i16* %row_ind, align 2
  %97 = zext i16 %96 to i64
  %98 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %99 = getelementptr inbounds [1 x [3 x [3840 x %class.ap_uint.0]]]* %buf, i32 0, i64 %98
  %100 = getelementptr inbounds [3 x [3840 x %class.ap_uint.0]]* %99, i32 0, i64 %97
  %101 = getelementptr inbounds [3840 x %class.ap_uint.0]* %100, i32 0, i64 %95
  %102 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %103 = load %"class.hls::stream.2"** %1, align 8
  %104 = getelementptr inbounds %"class.hls::stream.2"* %103, i64 %102
  %105 = call i8 @_ZN3hls6streamI7ap_uintILi8EEE4readEv(%"class.hls::stream.2"* %104)
  %106 = getelementptr %class.ap_uint.0* %7, i32 0, i32 0
  %107 = bitcast [1 x i8]* %106 to i8*
  store i8 %105, i8* %107, align 1
  %108 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %101, %class.ap_uint.0* %7)
  br label %109

; <label>:109                                     ; preds = %86
  %110 = call i8 @_ZN7ap_uintILi3EEppEi(%class.ap_uint.44* %p, i32 0)
  %111 = getelementptr %class.ap_uint.44* %8, i32 0, i32 0
  %112 = bitcast [1 x i8]* %111 to i8*
  store i8 %110, i8* %112, align 1
  br label %79

; <label>:113                                     ; preds = %79
  br label %114

; <label>:114                                     ; preds = %113
  %115 = load i16* %col, align 2
  %116 = add i16 %115, 1
  store i16 %116, i16* %col, align 2
  br label %70

; <label>:117                                     ; preds = %70
  %118 = load i16* %row_ind, align 2
  %119 = add i16 %118, 1
  store i16 %119, i16* %row_ind, align 2
  br label %120

; <label>:120                                     ; preds = %117
  store i16 1, i16* %row, align 2
  br label %121

; <label>:121                                     ; preds = %291, %120
  %122 = load i16* %row, align 2
  %123 = zext i16 %122 to i32
  %124 = load i16* %4, align 2
  %125 = zext i16 %124 to i32
  %126 = icmp slt i32 %123, %125
  br i1 %126, label %127, label %294

; <label>:127                                     ; preds = %121
  %128 = load i16* %row_ind, align 2
  %129 = zext i16 %128 to i32
  %130 = icmp eq i32 %129, 2
  br i1 %130, label %131, label %135

; <label>:131                                     ; preds = %127
  %132 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %tp, i32 0)
  %133 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %mid, i32 1)
  %134 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %bottom, i32 2)
  br label %153

; <label>:135                                     ; preds = %127
  %136 = load i16* %row_ind, align 2
  %137 = zext i16 %136 to i32
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %143

; <label>:139                                     ; preds = %135
  %140 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %tp, i32 1)
  %141 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %mid, i32 2)
  %142 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %bottom, i32 0)
  br label %152

; <label>:143                                     ; preds = %135
  %144 = load i16* %row_ind, align 2
  %145 = zext i16 %144 to i32
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %147, label %151

; <label>:147                                     ; preds = %143
  %148 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %tp, i32 2)
  %149 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %mid, i32 0)
  %150 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %bottom, i32 1)
  br label %151

; <label>:151                                     ; preds = %147, %143
  br label %152

; <label>:152                                     ; preds = %151, %139
  br label %153

; <label>:153                                     ; preds = %152, %131
  br label %154

; <label>:154                                     ; preds = %153
  %155 = call %class.ap_uint.44* @_ZN7ap_uintILi3EEaSEi(%class.ap_uint.44* %p, i32 0)
  br label %156

; <label>:156                                     ; preds = %188, %154
  %157 = bitcast %class.ap_uint.44* %9 to i8*
  %158 = bitcast %class.ap_uint.44* %p to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %157, i8* %158, i64 1, i32 1, i1 false)
  %159 = getelementptr %class.ap_uint.44* %9, i32 0, i32 0
  %160 = bitcast [1 x i8]* %159 to i8*
  %161 = load i8* %160, align 1
  %162 = call zeroext i1 @_ZltILi3EEb7ap_uintIXT_EEi(i8 %161, i32 1)
  br i1 %162, label %163, label %192

; <label>:163                                     ; preds = %156
  %164 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %165 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf0, i32 0, i64 %164
  %166 = getelementptr inbounds [3 x %class.ap_uint.0]* %165, i32 0, i64 0
  %167 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %168 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf0, i32 0, i64 %167
  %169 = getelementptr inbounds [3 x %class.ap_uint.0]* %168, i32 0, i64 1
  %170 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %169, i32 0)
  %171 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %166, %class.ap_uint.0* %170)
  %172 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %173 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf1, i32 0, i64 %172
  %174 = getelementptr inbounds [3 x %class.ap_uint.0]* %173, i32 0, i64 0
  %175 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %176 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf1, i32 0, i64 %175
  %177 = getelementptr inbounds [3 x %class.ap_uint.0]* %176, i32 0, i64 1
  %178 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %177, i32 0)
  %179 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %174, %class.ap_uint.0* %178)
  %180 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %181 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf2, i32 0, i64 %180
  %182 = getelementptr inbounds [3 x %class.ap_uint.0]* %181, i32 0, i64 0
  %183 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %184 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf2, i32 0, i64 %183
  %185 = getelementptr inbounds [3 x %class.ap_uint.0]* %184, i32 0, i64 1
  %186 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %185, i32 0)
  %187 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %182, %class.ap_uint.0* %186)
  br label %188

; <label>:188                                     ; preds = %163
  %189 = call i8 @_ZN7ap_uintILi3EEppEi(%class.ap_uint.44* %p, i32 0)
  %190 = getelementptr %class.ap_uint.44* %10, i32 0, i32 0
  %191 = bitcast [1 x i8]* %190 to i8*
  store i8 %189, i8* %191, align 1
  br label %156

; <label>:192                                     ; preds = %156
  %193 = call %class.ap_uint.7* @_ZN7ap_uintILi9EEaSEi(%class.ap_uint.7* %P1, i32 0)
  %194 = call %class.ap_uint.7* @_ZN7ap_uintILi9EEaSERKS0_(%class.ap_uint.7* %P0, %class.ap_uint.7* %193)
  %195 = load %"class.hls::stream.2"** %1, align 8
  %196 = load %"class.hls::stream.6"** %2, align 8
  %197 = load %"class.hls::stream.6"** %3, align 8
  %198 = getelementptr inbounds [1 x [3 x [3840 x %class.ap_uint.0]]]* %buf, i32 0, i32 0
  %199 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf0, i32 0, i32 0
  %200 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf1, i32 0, i32 0
  %201 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf2, i32 0, i32 0
  %202 = getelementptr inbounds [1 x %class.ap_int.35]* %GradientValuesX, i32 0, i32 0
  %203 = getelementptr inbounds [1 x %class.ap_int.35]* %GradientValuesY, i32 0, i32 0
  %204 = load i16* %5, align 2
  %205 = load i16* %row_ind, align 2
  call void @_ZN7ap_uintILi13EEC1Et(%class.ap_uint.45* %11, i16 zeroext %205)
  %206 = bitcast %class.ap_uint.12* %12 to i8*
  %207 = bitcast %class.ap_uint.12* %tp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %206, i8* %207, i64 1, i32 1, i1 false)
  %208 = bitcast %class.ap_uint.12* %13 to i8*
  %209 = bitcast %class.ap_uint.12* %mid to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %208, i8* %209, i64 1, i32 1, i1 false)
  %210 = bitcast %class.ap_uint.12* %14 to i8*
  %211 = bitcast %class.ap_uint.12* %bottom to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %210, i8* %211, i64 1, i32 1, i1 false)
  %212 = getelementptr %class.ap_uint.45* %11, i32 0, i32 0
  %213 = bitcast [2 x i8]* %212 to i16*
  %214 = load i16* %213, align 1
  %215 = getelementptr %class.ap_uint.12* %12, i32 0, i32 0
  %216 = bitcast [1 x i8]* %215 to i8*
  %217 = load i8* %216, align 1
  %218 = getelementptr %class.ap_uint.12* %13, i32 0, i32 0
  %219 = bitcast [1 x i8]* %218 to i8*
  %220 = load i8* %219, align 1
  %221 = getelementptr %class.ap_uint.12* %14, i32 0, i32 0
  %222 = bitcast [1 x i8]* %221 to i8*
  %223 = load i8* %222, align 1
  call void @_ZL345p_Z19xFHOGcomputeColGradILi2160ELi3840ELi0ELi13ELi1ELi1ELi2ELi1ELi3840ELi1EEP6streamI7ap_uintILi8EEER6streamI7ap_uintILi9EEER6streamI7ap_uintILi9EEEPA3_A3840_7ap_uintILi8EEPA3_7ap_uintILi8EEPA3_7ap_uintILi8EEPA3_7ap_uintILi8EEP6ap_intILi9EEP6ap_intILi9EER7ap_uintILi9EER7ap_uintILi9EEt7ap_uintILi13EE7ap_uintILi2EE7ap_uintILi2EE7ap_uintILi2EEb_1PN3hls6streamI7ap_uintILi8EEEERNS0_IS1_ILi9EEEES7_PA3_A3840_S2_PA3_S2_SC_SC_P6ap_intILi9EESF_RS5_SG_tS1_ILi13EES1_ILi2EESI_SI_b(%"class.hls::stream.2"* %195, %"class.hls::stream.6"* %196, %"class.hls::stream.6"* %197, [3 x [3840 x %class.ap_uint.0]]* %198, [3 x %class.ap_uint.0]* %199, [3 x %class.ap_uint.0]* %200, [3 x %class.ap_uint.0]* %201, %class.ap_int.35* %202, %class.ap_int.35* %203, %class.ap_uint.7* %P0, %class.ap_uint.7* %P1, i16 zeroext %204, i16 %214, i8 %217, i8 %220, i8 %223, i1 zeroext true)
  %224 = load i16* %row, align 2
  %225 = icmp ne i16 %224, 0
  br i1 %225, label %226, label %283

; <label>:226                                     ; preds = %192
  br label %227

; <label>:227                                     ; preds = %226
  %228 = call %class.ap_uint.44* @_ZN7ap_uintILi3EEaSEi(%class.ap_uint.44* %p, i32 0)
  br label %229

; <label>:229                                     ; preds = %249, %227
  %230 = bitcast %class.ap_uint.44* %15 to i8*
  %231 = bitcast %class.ap_uint.44* %p to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %230, i8* %231, i64 1, i32 1, i1 false)
  %232 = getelementptr %class.ap_uint.44* %15, i32 0, i32 0
  %233 = bitcast [1 x i8]* %232 to i8*
  %234 = load i8* %233, align 1
  %235 = call zeroext i1 @_ZltILi3EEb7ap_uintIXT_EEi(i8 %234, i32 1)
  br i1 %235, label %236, label %253

; <label>:236                                     ; preds = %229
  %237 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %238 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf0, i32 0, i64 %237
  %239 = getelementptr inbounds [3 x %class.ap_uint.0]* %238, i32 0, i64 2
  %240 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %239, i32 0)
  %241 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %242 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf1, i32 0, i64 %241
  %243 = getelementptr inbounds [3 x %class.ap_uint.0]* %242, i32 0, i64 2
  %244 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %243, i32 0)
  %245 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %246 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf2, i32 0, i64 %245
  %247 = getelementptr inbounds [3 x %class.ap_uint.0]* %246, i32 0, i64 2
  %248 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %247, i32 0)
  br label %249

; <label>:249                                     ; preds = %236
  %250 = call i8 @_ZN7ap_uintILi3EEppEi(%class.ap_uint.44* %p, i32 0)
  %251 = getelementptr %class.ap_uint.44* %16, i32 0, i32 0
  %252 = bitcast [1 x i8]* %251 to i8*
  store i8 %250, i8* %252, align 1
  br label %229

; <label>:253                                     ; preds = %229
  %254 = getelementptr inbounds [1 x %class.ap_int.35]* %GradientValuesX, i32 0, i32 0
  %255 = getelementptr inbounds [1 x %class.ap_int.35]* %GradientValuesY, i32 0, i32 0
  %256 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf0, i32 0, i32 0
  %257 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf1, i32 0, i32 0
  %258 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf2, i32 0, i32 0
  call void @_ZL146p_Z20xFHOGgradientComputeILi1ELi0ELi13ELi1E7ap_uintILi8EELi3EEP6ap_intILi9EEP6ap_intILi9EEPA3_7ap_uintILi8EEPA3_7ap_uintILi8EEPA3_7ap_uintILi8EE_1P6ap_intILi9EES1_PA3_7ap_uintILi8EES5_S5_(%class.ap_int.35* %254, %class.ap_int.35* %255, [3 x %class.ap_uint.0]* %256, [3 x %class.ap_uint.0]* %257, [3 x %class.ap_uint.0]* %258)
  %259 = getelementptr inbounds [1 x %class.ap_int.35]* %GradientValuesX, i32 0, i64 0
  %260 = call i64 @_ZNK6ap_intILi9EEcvlEv(%class.ap_int.35* %259)
  %261 = load i16* %max_loop, align 2
  %262 = zext i16 %261 to i32
  %263 = sub nsw i32 %262, 1
  %264 = load i16* %max_loop, align 2
  %265 = zext i16 %264 to i32
  %266 = load i8* %step, align 1
  %267 = zext i8 %266 to i32
  %268 = sub nsw i32 %265, %267
  %269 = call i64* @_ZN7ap_uintILi9EE5rangeEii(%class.ap_uint.7* %P0, i32 %263, i32 %268)
  store i64 %260, i64* %269
  %270 = getelementptr inbounds [1 x %class.ap_int.35]* %GradientValuesY, i32 0, i64 0
  %271 = call i64 @_ZNK6ap_intILi9EEcvlEv(%class.ap_int.35* %270)
  %272 = load i16* %max_loop, align 2
  %273 = zext i16 %272 to i32
  %274 = sub nsw i32 %273, 1
  %275 = load i16* %max_loop, align 2
  %276 = zext i16 %275 to i32
  %277 = load i8* %step, align 1
  %278 = zext i8 %277 to i32
  %279 = sub nsw i32 %276, %278
  %280 = call i64* @_ZN7ap_uintILi9EE5rangeEii(%class.ap_uint.7* %P1, i32 %274, i32 %279)
  store i64 %271, i64* %280
  %281 = load %"class.hls::stream.6"** %2, align 8
  call void @_ZN3hls6streamI7ap_uintILi9EEE5writeERKS2_(%"class.hls::stream.6"* %281, %class.ap_uint.7* %P0)
  %282 = load %"class.hls::stream.6"** %3, align 8
  call void @_ZN3hls6streamI7ap_uintILi9EEE5writeERKS2_(%"class.hls::stream.6"* %282, %class.ap_uint.7* %P1)
  br label %283

; <label>:283                                     ; preds = %253, %192
  %284 = load i16* %row_ind, align 2
  %285 = add i16 %284, 1
  store i16 %285, i16* %row_ind, align 2
  %286 = load i16* %row_ind, align 2
  %287 = zext i16 %286 to i32
  %288 = icmp eq i32 %287, 3
  br i1 %288, label %289, label %290

; <label>:289                                     ; preds = %283
  store i16 0, i16* %row_ind, align 2
  br label %290

; <label>:290                                     ; preds = %289, %283
  br label %291

; <label>:291                                     ; preds = %290
  %292 = load i16* %row, align 2
  %293 = add i16 %292, 1
  store i16 %293, i16* %row, align 2
  br label %121

; <label>:294                                     ; preds = %121
  %295 = load i16* %row_ind, align 2
  %296 = zext i16 %295 to i32
  %297 = icmp eq i32 %296, 3
  br i1 %297, label %298, label %299

; <label>:298                                     ; preds = %294
  store i16 0, i16* %row_ind, align 2
  br label %299

; <label>:299                                     ; preds = %298, %294
  %300 = load i16* %row_ind, align 2
  %301 = zext i16 %300 to i32
  %302 = icmp eq i32 %301, 2
  br i1 %302, label %303, label %307

; <label>:303                                     ; preds = %299
  %304 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %tp, i32 0)
  %305 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %mid, i32 1)
  %306 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %bottom, i32 2)
  br label %325

; <label>:307                                     ; preds = %299
  %308 = load i16* %row_ind, align 2
  %309 = zext i16 %308 to i32
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %315

; <label>:311                                     ; preds = %307
  %312 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %tp, i32 1)
  %313 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %mid, i32 2)
  %314 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %bottom, i32 0)
  br label %324

; <label>:315                                     ; preds = %307
  %316 = load i16* %row_ind, align 2
  %317 = zext i16 %316 to i32
  %318 = icmp eq i32 %317, 1
  br i1 %318, label %319, label %323

; <label>:319                                     ; preds = %315
  %320 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %tp, i32 2)
  %321 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %mid, i32 0)
  %322 = call %class.ap_uint.12* @_ZN7ap_uintILi2EEaSEi(%class.ap_uint.12* %bottom, i32 1)
  br label %323

; <label>:323                                     ; preds = %319, %315
  br label %324

; <label>:324                                     ; preds = %323, %311
  br label %325

; <label>:325                                     ; preds = %324, %303
  br label %326

; <label>:326                                     ; preds = %325
  %327 = call %class.ap_uint.44* @_ZN7ap_uintILi3EEaSEi(%class.ap_uint.44* %p, i32 0)
  br label %328

; <label>:328                                     ; preds = %360, %326
  %329 = bitcast %class.ap_uint.44* %17 to i8*
  %330 = bitcast %class.ap_uint.44* %p to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %329, i8* %330, i64 1, i32 1, i1 false)
  %331 = getelementptr %class.ap_uint.44* %17, i32 0, i32 0
  %332 = bitcast [1 x i8]* %331 to i8*
  %333 = load i8* %332, align 1
  %334 = call zeroext i1 @_ZltILi3EEb7ap_uintIXT_EEi(i8 %333, i32 1)
  br i1 %334, label %335, label %364

; <label>:335                                     ; preds = %328
  %336 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %337 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf0, i32 0, i64 %336
  %338 = getelementptr inbounds [3 x %class.ap_uint.0]* %337, i32 0, i64 0
  %339 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %340 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf0, i32 0, i64 %339
  %341 = getelementptr inbounds [3 x %class.ap_uint.0]* %340, i32 0, i64 1
  %342 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %341, i32 0)
  %343 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %338, %class.ap_uint.0* %342)
  %344 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %345 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf1, i32 0, i64 %344
  %346 = getelementptr inbounds [3 x %class.ap_uint.0]* %345, i32 0, i64 0
  %347 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %348 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf1, i32 0, i64 %347
  %349 = getelementptr inbounds [3 x %class.ap_uint.0]* %348, i32 0, i64 1
  %350 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %349, i32 0)
  %351 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %346, %class.ap_uint.0* %350)
  %352 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %353 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf2, i32 0, i64 %352
  %354 = getelementptr inbounds [3 x %class.ap_uint.0]* %353, i32 0, i64 0
  %355 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %356 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf2, i32 0, i64 %355
  %357 = getelementptr inbounds [3 x %class.ap_uint.0]* %356, i32 0, i64 1
  %358 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %357, i32 0)
  %359 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %354, %class.ap_uint.0* %358)
  br label %360

; <label>:360                                     ; preds = %335
  %361 = call i8 @_ZN7ap_uintILi3EEppEi(%class.ap_uint.44* %p, i32 0)
  %362 = getelementptr %class.ap_uint.44* %18, i32 0, i32 0
  %363 = bitcast [1 x i8]* %362 to i8*
  store i8 %361, i8* %363, align 1
  br label %328

; <label>:364                                     ; preds = %328
  br label %365

; <label>:365                                     ; preds = %364
  store i16 0, i16* %col, align 2
  br label %366

; <label>:366                                     ; preds = %396, %365
  %367 = load i16* %col, align 2
  %368 = zext i16 %367 to i32
  %369 = load i16* %5, align 2
  %370 = zext i16 %369 to i32
  %371 = icmp slt i32 %368, %370
  br i1 %371, label %372, label %399

; <label>:372                                     ; preds = %366
  br label %373

; <label>:373                                     ; preds = %372
  %374 = call %class.ap_uint.44* @_ZN7ap_uintILi3EEaSEi(%class.ap_uint.44* %p, i32 0)
  br label %375

; <label>:375                                     ; preds = %391, %373
  %376 = bitcast %class.ap_uint.44* %19 to i8*
  %377 = bitcast %class.ap_uint.44* %p to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %376, i8* %377, i64 1, i32 1, i1 false)
  %378 = getelementptr %class.ap_uint.44* %19, i32 0, i32 0
  %379 = bitcast [1 x i8]* %378 to i8*
  %380 = load i8* %379, align 1
  %381 = call zeroext i1 @_ZltILi3EEb7ap_uintIXT_EEi(i8 %380, i32 1)
  br i1 %381, label %382, label %395

; <label>:382                                     ; preds = %375
  %383 = load i16* %col, align 2
  %384 = zext i16 %383 to i64
  %385 = call i64 @_ZNK7ap_uintILi2EEcvmEv(%class.ap_uint.12* %bottom)
  %386 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %387 = getelementptr inbounds [1 x [3 x [3840 x %class.ap_uint.0]]]* %buf, i32 0, i64 %386
  %388 = getelementptr inbounds [3 x [3840 x %class.ap_uint.0]]* %387, i32 0, i64 %385
  %389 = getelementptr inbounds [3840 x %class.ap_uint.0]* %388, i32 0, i64 %384
  %390 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %389, i32 0)
  br label %391

; <label>:391                                     ; preds = %382
  %392 = call i8 @_ZN7ap_uintILi3EEppEi(%class.ap_uint.44* %p, i32 0)
  %393 = getelementptr %class.ap_uint.44* %20, i32 0, i32 0
  %394 = bitcast [1 x i8]* %393 to i8*
  store i8 %392, i8* %394, align 1
  br label %375

; <label>:395                                     ; preds = %375
  br label %396

; <label>:396                                     ; preds = %395
  %397 = load i16* %col, align 2
  %398 = add i16 %397, 1
  store i16 %398, i16* %col, align 2
  br label %366

; <label>:399                                     ; preds = %366
  %400 = load %"class.hls::stream.2"** %1, align 8
  %401 = load %"class.hls::stream.6"** %2, align 8
  %402 = load %"class.hls::stream.6"** %3, align 8
  %403 = getelementptr inbounds [1 x [3 x [3840 x %class.ap_uint.0]]]* %buf, i32 0, i32 0
  %404 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf0, i32 0, i32 0
  %405 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf1, i32 0, i32 0
  %406 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf2, i32 0, i32 0
  %407 = getelementptr inbounds [1 x %class.ap_int.35]* %GradientValuesX, i32 0, i32 0
  %408 = getelementptr inbounds [1 x %class.ap_int.35]* %GradientValuesY, i32 0, i32 0
  %409 = load i16* %5, align 2
  %410 = load i16* %row_ind, align 2
  call void @_ZN7ap_uintILi13EEC1Et(%class.ap_uint.45* %21, i16 zeroext %410)
  %411 = bitcast %class.ap_uint.12* %22 to i8*
  %412 = bitcast %class.ap_uint.12* %tp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %411, i8* %412, i64 1, i32 1, i1 false)
  %413 = bitcast %class.ap_uint.12* %23 to i8*
  %414 = bitcast %class.ap_uint.12* %mid to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %413, i8* %414, i64 1, i32 1, i1 false)
  %415 = bitcast %class.ap_uint.12* %24 to i8*
  %416 = bitcast %class.ap_uint.12* %bottom to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %415, i8* %416, i64 1, i32 1, i1 false)
  %417 = getelementptr %class.ap_uint.45* %21, i32 0, i32 0
  %418 = bitcast [2 x i8]* %417 to i16*
  %419 = load i16* %418, align 1
  %420 = getelementptr %class.ap_uint.12* %22, i32 0, i32 0
  %421 = bitcast [1 x i8]* %420 to i8*
  %422 = load i8* %421, align 1
  %423 = getelementptr %class.ap_uint.12* %23, i32 0, i32 0
  %424 = bitcast [1 x i8]* %423 to i8*
  %425 = load i8* %424, align 1
  %426 = getelementptr %class.ap_uint.12* %24, i32 0, i32 0
  %427 = bitcast [1 x i8]* %426 to i8*
  %428 = load i8* %427, align 1
  call void @_ZL345p_Z19xFHOGcomputeColGradILi2160ELi3840ELi0ELi13ELi1ELi1ELi2ELi1ELi3840ELi1EEP6streamI7ap_uintILi8EEER6streamI7ap_uintILi9EEER6streamI7ap_uintILi9EEEPA3_A3840_7ap_uintILi8EEPA3_7ap_uintILi8EEPA3_7ap_uintILi8EEPA3_7ap_uintILi8EEP6ap_intILi9EEP6ap_intILi9EER7ap_uintILi9EER7ap_uintILi9EEt7ap_uintILi13EE7ap_uintILi2EE7ap_uintILi2EE7ap_uintILi2EEb_1PN3hls6streamI7ap_uintILi8EEEERNS0_IS1_ILi9EEEES7_PA3_A3840_S2_PA3_S2_SC_SC_P6ap_intILi9EESF_RS5_SG_tS1_ILi13EES1_ILi2EESI_SI_b(%"class.hls::stream.2"* %400, %"class.hls::stream.6"* %401, %"class.hls::stream.6"* %402, [3 x [3840 x %class.ap_uint.0]]* %403, [3 x %class.ap_uint.0]* %404, [3 x %class.ap_uint.0]* %405, [3 x %class.ap_uint.0]* %406, %class.ap_int.35* %407, %class.ap_int.35* %408, %class.ap_uint.7* %P0, %class.ap_uint.7* %P1, i16 zeroext %409, i16 %419, i8 %422, i8 %425, i8 %428, i1 zeroext false)
  br label %429

; <label>:429                                     ; preds = %399
  %430 = call %class.ap_uint.44* @_ZN7ap_uintILi3EEaSEi(%class.ap_uint.44* %p, i32 0)
  br label %431

; <label>:431                                     ; preds = %451, %429
  %432 = bitcast %class.ap_uint.44* %25 to i8*
  %433 = bitcast %class.ap_uint.44* %p to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %432, i8* %433, i64 1, i32 1, i1 false)
  %434 = getelementptr %class.ap_uint.44* %25, i32 0, i32 0
  %435 = bitcast [1 x i8]* %434 to i8*
  %436 = load i8* %435, align 1
  %437 = call zeroext i1 @_ZltILi3EEb7ap_uintIXT_EEi(i8 %436, i32 1)
  br i1 %437, label %438, label %455

; <label>:438                                     ; preds = %431
  %439 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %440 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf0, i32 0, i64 %439
  %441 = getelementptr inbounds [3 x %class.ap_uint.0]* %440, i32 0, i64 2
  %442 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %441, i32 0)
  %443 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %444 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf1, i32 0, i64 %443
  %445 = getelementptr inbounds [3 x %class.ap_uint.0]* %444, i32 0, i64 2
  %446 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %445, i32 0)
  %447 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %448 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf2, i32 0, i64 %447
  %449 = getelementptr inbounds [3 x %class.ap_uint.0]* %448, i32 0, i64 2
  %450 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEi(%class.ap_uint.0* %449, i32 0)
  br label %451

; <label>:451                                     ; preds = %438
  %452 = call i8 @_ZN7ap_uintILi3EEppEi(%class.ap_uint.44* %p, i32 0)
  %453 = getelementptr %class.ap_uint.44* %26, i32 0, i32 0
  %454 = bitcast [1 x i8]* %453 to i8*
  store i8 %452, i8* %454, align 1
  br label %431

; <label>:455                                     ; preds = %431
  %456 = getelementptr inbounds [1 x %class.ap_int.35]* %GradientValuesX, i32 0, i32 0
  %457 = getelementptr inbounds [1 x %class.ap_int.35]* %GradientValuesY, i32 0, i32 0
  %458 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf0, i32 0, i32 0
  %459 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf1, i32 0, i32 0
  %460 = getelementptr inbounds [1 x [3 x %class.ap_uint.0]]* %src_buf2, i32 0, i32 0
  call void @_ZL146p_Z20xFHOGgradientComputeILi1ELi0ELi13ELi1E7ap_uintILi8EELi3EEP6ap_intILi9EEP6ap_intILi9EEPA3_7ap_uintILi8EEPA3_7ap_uintILi8EEPA3_7ap_uintILi8EE_1P6ap_intILi9EES1_PA3_7ap_uintILi8EES5_S5_(%class.ap_int.35* %456, %class.ap_int.35* %457, [3 x %class.ap_uint.0]* %458, [3 x %class.ap_uint.0]* %459, [3 x %class.ap_uint.0]* %460)
  %461 = getelementptr inbounds [1 x %class.ap_int.35]* %GradientValuesX, i32 0, i64 0
  %462 = call i64 @_ZNK6ap_intILi9EEcvlEv(%class.ap_int.35* %461)
  %463 = load i16* %max_loop, align 2
  %464 = zext i16 %463 to i32
  %465 = sub nsw i32 %464, 1
  %466 = load i16* %max_loop, align 2
  %467 = zext i16 %466 to i32
  %468 = load i8* %step, align 1
  %469 = zext i8 %468 to i32
  %470 = sub nsw i32 %467, %469
  %471 = call i64* @_ZN7ap_uintILi9EE5rangeEii(%class.ap_uint.7* %P0, i32 %465, i32 %470)
  store i64 %462, i64* %471
  %472 = getelementptr inbounds [1 x %class.ap_int.35]* %GradientValuesY, i32 0, i64 0
  %473 = call i64 @_ZNK6ap_intILi9EEcvlEv(%class.ap_int.35* %472)
  %474 = load i16* %max_loop, align 2
  %475 = zext i16 %474 to i32
  %476 = sub nsw i32 %475, 1
  %477 = load i16* %max_loop, align 2
  %478 = zext i16 %477 to i32
  %479 = load i8* %step, align 1
  %480 = zext i8 %479 to i32
  %481 = sub nsw i32 %478, %480
  %482 = call i64* @_ZN7ap_uintILi9EE5rangeEii(%class.ap_uint.7* %P1, i32 %476, i32 %481)
  store i64 %473, i64* %482
  %483 = load %"class.hls::stream.6"** %2, align 8
  call void @_ZN3hls6streamI7ap_uintILi9EEE5writeERKS2_(%"class.hls::stream.6"* %483, %class.ap_uint.7* %P0)
  %484 = load %"class.hls::stream.6"** %3, align 8
  call void @_ZN3hls6streamI7ap_uintILi9EEE5writeERKS2_(%"class.hls::stream.6"* %484, %class.ap_uint.7* %P1)
  ret void
}

declare void @_ZN7ap_uintILi3EEC1Ev(%class.ap_uint.44*)

declare void @_ZN6ap_intILi9EEC1Ev(%class.ap_int.35*)

declare %class.ap_uint.44* @_ZN7ap_uintILi3EEaSEi(%class.ap_uint.44*, i32)

declare zeroext i1 @_ZltILi3EEb7ap_uintIXT_EEi(i8, i32)

declare i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44*)

declare %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0*, %class.ap_uint.0*)

declare i8 @_ZN3hls6streamI7ap_uintILi8EEE4readEv(%"class.hls::stream.2"*)

declare i8 @_ZN7ap_uintILi3EEppEi(%class.ap_uint.44*, i32)

declare %class.ap_uint.7* @_ZN7ap_uintILi9EEaSEi(%class.ap_uint.7*, i32)

define internal void @_ZL345p_Z19xFHOGcomputeColGradILi2160ELi3840ELi0ELi13ELi1ELi1ELi2ELi1ELi3840ELi1EEP6streamI7ap_uintILi8EEER6streamI7ap_uintILi9EEER6streamI7ap_uintILi9EEEPA3_A3840_7ap_uintILi8EEPA3_7ap_uintILi8EEPA3_7ap_uintILi8EEPA3_7ap_uintILi8EEP6ap_intILi9EEP6ap_intILi9EER7ap_uintILi9EER7ap_uintILi9EEt7ap_uintILi13EE7ap_uintILi2EE7ap_uintILi2EE7ap_uintILi2EEb_1PN3hls6streamI7ap_uintILi8EEEERNS0_IS1_ILi9EEEES7_PA3_A3840_S2_PA3_S2_SC_SC_P6ap_intILi9EESF_RS5_SG_tS1_ILi13EES1_ILi2EESI_SI_b(%"class.hls::stream.2"* %_src_strm, %"class.hls::stream.6"* %_gradx_strm, %"class.hls::stream.6"* %_grady_strm, [3 x [3840 x %class.ap_uint.0]]* %buf, [3 x %class.ap_uint.0]* %src_buf0, [3 x %class.ap_uint.0]* %src_buf1, [3 x %class.ap_uint.0]* %src_buf2, %class.ap_int.35* %GradientValuesX, %class.ap_int.35* %GradientValuesY, %class.ap_uint.7* %P0, %class.ap_uint.7* %P1, i16 zeroext %img_width, i16 %row_ind.coerce, i8 %tp.coerce, i8 %mid.coerce, i8 %bottom.coerce, i1 zeroext %flag) uwtable {
  %1 = alloca %"class.hls::stream.2"*, align 8
  %2 = alloca %"class.hls::stream.6"*, align 8
  %3 = alloca %"class.hls::stream.6"*, align 8
  %4 = alloca [3 x [3840 x %class.ap_uint.0]]*, align 8
  %5 = alloca [3 x %class.ap_uint.0]*, align 8
  %6 = alloca [3 x %class.ap_uint.0]*, align 8
  %7 = alloca [3 x %class.ap_uint.0]*, align 8
  %8 = alloca %class.ap_int.35*, align 8
  %9 = alloca %class.ap_int.35*, align 8
  %10 = alloca %class.ap_uint.7*, align 8
  %11 = alloca %class.ap_uint.7*, align 8
  %12 = alloca i16, align 2
  %row_ind = alloca %class.ap_uint.45, align 2
  %tp = alloca %class.ap_uint.12, align 1
  %mid = alloca %class.ap_uint.12, align 1
  %bottom = alloca %class.ap_uint.12, align 1
  %13 = alloca i8, align 1
  %step = alloca i8, align 1
  %max_loop = alloca i16, align 2
  %buf_size = alloca i8, align 1
  %col = alloca i16, align 2
  %i = alloca i16, align 2
  %j = alloca i16, align 2
  %p = alloca %class.ap_uint.44, align 1
  %14 = alloca %class.ap_uint.44, align 1
  %in_data = alloca %class.ap_uint.0, align 1
  %15 = alloca %class.ap_uint.0, align 1
  %16 = alloca %class.ap_uint.44, align 1
  %17 = alloca %class.ap_uint.44, align 1
  %18 = alloca %class.ap_uint.44, align 1
  store %"class.hls::stream.2"* %_src_strm, %"class.hls::stream.2"** %1, align 8
  store %"class.hls::stream.6"* %_gradx_strm, %"class.hls::stream.6"** %2, align 8
  store %"class.hls::stream.6"* %_grady_strm, %"class.hls::stream.6"** %3, align 8
  store [3 x [3840 x %class.ap_uint.0]]* %buf, [3 x [3840 x %class.ap_uint.0]]** %4, align 8
  store [3 x %class.ap_uint.0]* %src_buf0, [3 x %class.ap_uint.0]** %5, align 8
  store [3 x %class.ap_uint.0]* %src_buf1, [3 x %class.ap_uint.0]** %6, align 8
  store [3 x %class.ap_uint.0]* %src_buf2, [3 x %class.ap_uint.0]** %7, align 8
  store %class.ap_int.35* %GradientValuesX, %class.ap_int.35** %8, align 8
  store %class.ap_int.35* %GradientValuesY, %class.ap_int.35** %9, align 8
  store %class.ap_uint.7* %P0, %class.ap_uint.7** %10, align 8
  store %class.ap_uint.7* %P1, %class.ap_uint.7** %11, align 8
  store i16 %img_width, i16* %12, align 2
  %19 = getelementptr %class.ap_uint.45* %row_ind, i32 0, i32 0
  %20 = bitcast [2 x i8]* %19 to i16*
  store i16 %row_ind.coerce, i16* %20, align 1
  %21 = getelementptr %class.ap_uint.12* %tp, i32 0, i32 0
  %22 = bitcast [1 x i8]* %21 to i8*
  store i8 %tp.coerce, i8* %22, align 1
  %23 = getelementptr %class.ap_uint.12* %mid, i32 0, i32 0
  %24 = bitcast [1 x i8]* %23 to i8*
  store i8 %mid.coerce, i8* %24, align 1
  %25 = getelementptr %class.ap_uint.12* %bottom, i32 0, i32 0
  %26 = bitcast [1 x i8]* %25 to i8*
  store i8 %bottom.coerce, i8* %26, align 1
  %27 = zext i1 %flag to i8
  store i8 %27, i8* %13, align 1
  store i8 9, i8* %step, align 1
  store i16 9, i16* %max_loop, align 2
  store i8 3, i8* %buf_size, align 1
  store i16 0, i16* %col, align 2
  store i16 0, i16* %i, align 2
  store i16 0, i16* %j, align 2
  call void @_ZN7ap_uintILi3EEC1Ev(%class.ap_uint.44* %p)
  br label %28

; <label>:28                                      ; preds = %0
  store i16 0, i16* %col, align 2
  br label %29

; <label>:29                                      ; preds = %333, %28
  %30 = load i16* %col, align 2
  %31 = zext i16 %30 to i32
  %32 = load i16* %12, align 2
  %33 = zext i16 %32 to i32
  %34 = icmp slt i32 %31, %33
  br i1 %34, label %35, label %336

; <label>:35                                      ; preds = %29
  br label %36

; <label>:36                                      ; preds = %35
  %37 = call %class.ap_uint.44* @_ZN7ap_uintILi3EEaSEi(%class.ap_uint.44* %p, i32 0)
  br label %38

; <label>:38                                      ; preds = %94, %36
  %39 = bitcast %class.ap_uint.44* %14 to i8*
  %40 = bitcast %class.ap_uint.44* %p to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 1, i32 1, i1 false)
  %41 = getelementptr %class.ap_uint.44* %14, i32 0, i32 0
  %42 = bitcast [1 x i8]* %41 to i8*
  %43 = load i8* %42, align 1
  %44 = call zeroext i1 @_ZltILi3EEb7ap_uintIXT_EEi(i8 %43, i32 1)
  br i1 %44, label %45, label %98

; <label>:45                                      ; preds = %38
  call void @_ZN7ap_uintILi8EEC1Ei(%class.ap_uint.0* %in_data, i32 0)
  %46 = load i8* %13, align 1
  %47 = trunc i8 %46 to i1
  br i1 %47, label %48, label %65

; <label>:48                                      ; preds = %45
  %49 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %50 = load %"class.hls::stream.2"** %1, align 8
  %51 = getelementptr inbounds %"class.hls::stream.2"* %50, i64 %49
  %52 = call i8 @_ZN3hls6streamI7ap_uintILi8EEE4readEv(%"class.hls::stream.2"* %51)
  %53 = getelementptr %class.ap_uint.0* %15, i32 0, i32 0
  %54 = bitcast [1 x i8]* %53 to i8*
  store i8 %52, i8* %54, align 1
  %55 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %in_data, %class.ap_uint.0* %15)
  %56 = load i16* %col, align 2
  %57 = zext i16 %56 to i64
  %58 = call i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.45* %row_ind)
  %59 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %60 = load [3 x [3840 x %class.ap_uint.0]]** %4, align 8
  %61 = getelementptr inbounds [3 x [3840 x %class.ap_uint.0]]* %60, i64 %59
  %62 = getelementptr inbounds [3 x [3840 x %class.ap_uint.0]]* %61, i32 0, i64 %58
  %63 = getelementptr inbounds [3840 x %class.ap_uint.0]* %62, i32 0, i64 %57
  %64 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %63, %class.ap_uint.0* %in_data)
  br label %65

; <label>:65                                      ; preds = %48, %45
  %66 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %67 = load [3 x %class.ap_uint.0]** %5, align 8
  %68 = getelementptr inbounds [3 x %class.ap_uint.0]* %67, i64 %66
  %69 = getelementptr inbounds [3 x %class.ap_uint.0]* %68, i32 0, i64 2
  %70 = load i16* %col, align 2
  %71 = zext i16 %70 to i64
  %72 = call i64 @_ZNK7ap_uintILi2EEcvmEv(%class.ap_uint.12* %tp)
  %73 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %74 = load [3 x [3840 x %class.ap_uint.0]]** %4, align 8
  %75 = getelementptr inbounds [3 x [3840 x %class.ap_uint.0]]* %74, i64 %73
  %76 = getelementptr inbounds [3 x [3840 x %class.ap_uint.0]]* %75, i32 0, i64 %72
  %77 = getelementptr inbounds [3840 x %class.ap_uint.0]* %76, i32 0, i64 %71
  call void @_ZL67p_Z15xfExtractPixelsILi1ELi1ELi0EEP7ap_uintILi8EER7ap_uintILi8EEi_1P7ap_uintILi8EERS0_i(%class.ap_uint.0* %69, %class.ap_uint.0* %77, i32 0)
  %78 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %79 = load [3 x %class.ap_uint.0]** %6, align 8
  %80 = getelementptr inbounds [3 x %class.ap_uint.0]* %79, i64 %78
  %81 = getelementptr inbounds [3 x %class.ap_uint.0]* %80, i32 0, i64 2
  %82 = load i16* %col, align 2
  %83 = zext i16 %82 to i64
  %84 = call i64 @_ZNK7ap_uintILi2EEcvmEv(%class.ap_uint.12* %mid)
  %85 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %86 = load [3 x [3840 x %class.ap_uint.0]]** %4, align 8
  %87 = getelementptr inbounds [3 x [3840 x %class.ap_uint.0]]* %86, i64 %85
  %88 = getelementptr inbounds [3 x [3840 x %class.ap_uint.0]]* %87, i32 0, i64 %84
  %89 = getelementptr inbounds [3840 x %class.ap_uint.0]* %88, i32 0, i64 %83
  call void @_ZL67p_Z15xfExtractPixelsILi1ELi1ELi0EEP7ap_uintILi8EER7ap_uintILi8EEi_1P7ap_uintILi8EERS0_i(%class.ap_uint.0* %81, %class.ap_uint.0* %89, i32 0)
  %90 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %91 = load [3 x %class.ap_uint.0]** %7, align 8
  %92 = getelementptr inbounds [3 x %class.ap_uint.0]* %91, i64 %90
  %93 = getelementptr inbounds [3 x %class.ap_uint.0]* %92, i32 0, i64 2
  call void @_ZL67p_Z15xfExtractPixelsILi1ELi1ELi0EEP7ap_uintILi8EER7ap_uintILi8EEi_1P7ap_uintILi8EERS0_i(%class.ap_uint.0* %93, %class.ap_uint.0* %in_data, i32 0)
  br label %94

; <label>:94                                      ; preds = %65
  %95 = call i8 @_ZN7ap_uintILi3EEppEi(%class.ap_uint.44* %p, i32 0)
  %96 = getelementptr %class.ap_uint.44* %16, i32 0, i32 0
  %97 = bitcast [1 x i8]* %96 to i8*
  store i8 %95, i8* %97, align 1
  br label %38

; <label>:98                                      ; preds = %38
  %99 = load %class.ap_int.35** %8, align 8
  %100 = load %class.ap_int.35** %9, align 8
  %101 = load [3 x %class.ap_uint.0]** %5, align 8
  %102 = load [3 x %class.ap_uint.0]** %6, align 8
  %103 = load [3 x %class.ap_uint.0]** %7, align 8
  call void @_ZL146p_Z20xFHOGgradientComputeILi1ELi0ELi13ELi1E7ap_uintILi8EELi3EEP6ap_intILi9EEP6ap_intILi9EEPA3_7ap_uintILi8EEPA3_7ap_uintILi8EEPA3_7ap_uintILi8EE_1P6ap_intILi9EES1_PA3_7ap_uintILi8EES5_S5_(%class.ap_int.35* %99, %class.ap_int.35* %100, [3 x %class.ap_uint.0]* %101, [3 x %class.ap_uint.0]* %102, [3 x %class.ap_uint.0]* %103)
  %104 = load i16* %col, align 2
  %105 = zext i16 %104 to i32
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %158

; <label>:107                                     ; preds = %98
  store i16 1, i16* %j, align 2
  br label %108

; <label>:108                                     ; preds = %107
  store i16 0, i16* %i, align 2
  br label %109

; <label>:109                                     ; preds = %150, %108
  %110 = load i16* %i, align 2
  %111 = zext i16 %110 to i32
  %112 = load i16* %max_loop, align 2
  %113 = zext i16 %112 to i32
  %114 = load i8* %step, align 1
  %115 = zext i8 %114 to i32
  %116 = sub nsw i32 %113, %115
  %117 = icmp slt i32 %111, %116
  br i1 %117, label %118, label %157

; <label>:118                                     ; preds = %109
  %119 = load i16* %j, align 2
  %120 = zext i16 %119 to i64
  %121 = load %class.ap_int.35** %8, align 8
  %122 = getelementptr inbounds %class.ap_int.35* %121, i64 %120
  %123 = call i64 @_ZNK6ap_intILi9EEcvlEv(%class.ap_int.35* %122)
  %124 = load %class.ap_uint.7** %10, align 8
  %125 = load i16* %i, align 2
  %126 = zext i16 %125 to i32
  %127 = load i8* %step, align 1
  %128 = zext i8 %127 to i32
  %129 = sub nsw i32 %128, 1
  %130 = add nsw i32 %126, %129
  %131 = load i16* %i, align 2
  %132 = zext i16 %131 to i32
  %133 = call i64* @_ZN7ap_uintILi9EE5rangeEii(%class.ap_uint.7* %124, i32 %130, i32 %132)
  store i64 %123, i64* %133
  %134 = load i16* %j, align 2
  %135 = add i16 %134, 1
  store i16 %135, i16* %j, align 2
  %136 = zext i16 %134 to i64
  %137 = load %class.ap_int.35** %9, align 8
  %138 = getelementptr inbounds %class.ap_int.35* %137, i64 %136
  %139 = call i64 @_ZNK6ap_intILi9EEcvlEv(%class.ap_int.35* %138)
  %140 = load %class.ap_uint.7** %11, align 8
  %141 = load i16* %i, align 2
  %142 = zext i16 %141 to i32
  %143 = load i8* %step, align 1
  %144 = zext i8 %143 to i32
  %145 = sub nsw i32 %144, 1
  %146 = add nsw i32 %142, %145
  %147 = load i16* %i, align 2
  %148 = zext i16 %147 to i32
  %149 = call i64* @_ZN7ap_uintILi9EE5rangeEii(%class.ap_uint.7* %140, i32 %146, i32 %148)
  store i64 %139, i64* %149
  br label %150

; <label>:150                                     ; preds = %118
  %151 = load i16* %i, align 2
  %152 = zext i16 %151 to i32
  %153 = load i8* %step, align 1
  %154 = zext i8 %153 to i32
  %155 = add nsw i32 %152, %154
  %156 = trunc i32 %155 to i16
  store i16 %156, i16* %i, align 2
  br label %109

; <label>:157                                     ; preds = %109
  br label %239

; <label>:158                                     ; preds = %98
  %159 = load %class.ap_int.35** %8, align 8
  %160 = getelementptr inbounds %class.ap_int.35* %159, i64 0
  %161 = call i64 @_ZNK6ap_intILi9EEcvlEv(%class.ap_int.35* %160)
  %162 = load %class.ap_uint.7** %10, align 8
  %163 = load i16* %max_loop, align 2
  %164 = zext i16 %163 to i32
  %165 = sub nsw i32 %164, 1
  %166 = load i16* %max_loop, align 2
  %167 = zext i16 %166 to i32
  %168 = load i8* %step, align 1
  %169 = zext i8 %168 to i32
  %170 = sub nsw i32 %167, %169
  %171 = call i64* @_ZN7ap_uintILi9EE5rangeEii(%class.ap_uint.7* %162, i32 %165, i32 %170)
  store i64 %161, i64* %171
  %172 = load %class.ap_int.35** %9, align 8
  %173 = getelementptr inbounds %class.ap_int.35* %172, i64 0
  %174 = call i64 @_ZNK6ap_intILi9EEcvlEv(%class.ap_int.35* %173)
  %175 = load %class.ap_uint.7** %11, align 8
  %176 = load i16* %max_loop, align 2
  %177 = zext i16 %176 to i32
  %178 = sub nsw i32 %177, 1
  %179 = load i16* %max_loop, align 2
  %180 = zext i16 %179 to i32
  %181 = load i8* %step, align 1
  %182 = zext i8 %181 to i32
  %183 = sub nsw i32 %180, %182
  %184 = call i64* @_ZN7ap_uintILi9EE5rangeEii(%class.ap_uint.7* %175, i32 %178, i32 %183)
  store i64 %174, i64* %184
  %185 = load %"class.hls::stream.6"** %2, align 8
  %186 = load %class.ap_uint.7** %10, align 8
  call void @_ZN3hls6streamI7ap_uintILi9EEE5writeERKS2_(%"class.hls::stream.6"* %185, %class.ap_uint.7* %186)
  %187 = load %"class.hls::stream.6"** %3, align 8
  %188 = load %class.ap_uint.7** %11, align 8
  call void @_ZN3hls6streamI7ap_uintILi9EEE5writeERKS2_(%"class.hls::stream.6"* %187, %class.ap_uint.7* %188)
  store i16 1, i16* %j, align 2
  br label %189

; <label>:189                                     ; preds = %158
  store i16 0, i16* %i, align 2
  br label %190

; <label>:190                                     ; preds = %231, %189
  %191 = load i16* %i, align 2
  %192 = zext i16 %191 to i32
  %193 = load i16* %max_loop, align 2
  %194 = zext i16 %193 to i32
  %195 = load i8* %step, align 1
  %196 = zext i8 %195 to i32
  %197 = sub nsw i32 %194, %196
  %198 = icmp slt i32 %192, %197
  br i1 %198, label %199, label %238

; <label>:199                                     ; preds = %190
  %200 = load i16* %j, align 2
  %201 = zext i16 %200 to i64
  %202 = load %class.ap_int.35** %8, align 8
  %203 = getelementptr inbounds %class.ap_int.35* %202, i64 %201
  %204 = call i64 @_ZNK6ap_intILi9EEcvlEv(%class.ap_int.35* %203)
  %205 = load %class.ap_uint.7** %10, align 8
  %206 = load i16* %i, align 2
  %207 = zext i16 %206 to i32
  %208 = load i8* %step, align 1
  %209 = zext i8 %208 to i32
  %210 = sub nsw i32 %209, 1
  %211 = add nsw i32 %207, %210
  %212 = load i16* %i, align 2
  %213 = zext i16 %212 to i32
  %214 = call i64* @_ZN7ap_uintILi9EE5rangeEii(%class.ap_uint.7* %205, i32 %211, i32 %213)
  store i64 %204, i64* %214
  %215 = load i16* %j, align 2
  %216 = add i16 %215, 1
  store i16 %216, i16* %j, align 2
  %217 = zext i16 %215 to i64
  %218 = load %class.ap_int.35** %9, align 8
  %219 = getelementptr inbounds %class.ap_int.35* %218, i64 %217
  %220 = call i64 @_ZNK6ap_intILi9EEcvlEv(%class.ap_int.35* %219)
  %221 = load %class.ap_uint.7** %11, align 8
  %222 = load i16* %i, align 2
  %223 = zext i16 %222 to i32
  %224 = load i8* %step, align 1
  %225 = zext i8 %224 to i32
  %226 = sub nsw i32 %225, 1
  %227 = add nsw i32 %223, %226
  %228 = load i16* %i, align 2
  %229 = zext i16 %228 to i32
  %230 = call i64* @_ZN7ap_uintILi9EE5rangeEii(%class.ap_uint.7* %221, i32 %227, i32 %229)
  store i64 %220, i64* %230
  br label %231

; <label>:231                                     ; preds = %199
  %232 = load i16* %i, align 2
  %233 = zext i16 %232 to i32
  %234 = load i8* %step, align 1
  %235 = zext i8 %234 to i32
  %236 = add nsw i32 %233, %235
  %237 = trunc i32 %236 to i16
  store i16 %237, i16* %i, align 2
  br label %190

; <label>:238                                     ; preds = %190
  br label %239

; <label>:239                                     ; preds = %238, %157
  br label %240

; <label>:240                                     ; preds = %239
  %241 = call %class.ap_uint.44* @_ZN7ap_uintILi3EEaSEi(%class.ap_uint.44* %p, i32 0)
  br label %242

; <label>:242                                     ; preds = %328, %240
  %243 = bitcast %class.ap_uint.44* %17 to i8*
  %244 = bitcast %class.ap_uint.44* %p to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %243, i8* %244, i64 1, i32 1, i1 false)
  %245 = getelementptr %class.ap_uint.44* %17, i32 0, i32 0
  %246 = bitcast [1 x i8]* %245 to i8*
  %247 = load i8* %246, align 1
  %248 = call zeroext i1 @_ZltILi3EEb7ap_uintIXT_EEi(i8 %247, i32 1)
  br i1 %248, label %249, label %332

; <label>:249                                     ; preds = %242
  %250 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %251 = load [3 x %class.ap_uint.0]** %5, align 8
  %252 = getelementptr inbounds [3 x %class.ap_uint.0]* %251, i64 %250
  %253 = getelementptr inbounds [3 x %class.ap_uint.0]* %252, i32 0, i64 0
  %254 = load i8* %buf_size, align 1
  %255 = zext i8 %254 to i32
  %256 = sub nsw i32 %255, 2
  %257 = sext i32 %256 to i64
  %258 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %259 = load [3 x %class.ap_uint.0]** %5, align 8
  %260 = getelementptr inbounds [3 x %class.ap_uint.0]* %259, i64 %258
  %261 = getelementptr inbounds [3 x %class.ap_uint.0]* %260, i32 0, i64 %257
  %262 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %253, %class.ap_uint.0* %261)
  %263 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %264 = load [3 x %class.ap_uint.0]** %5, align 8
  %265 = getelementptr inbounds [3 x %class.ap_uint.0]* %264, i64 %263
  %266 = getelementptr inbounds [3 x %class.ap_uint.0]* %265, i32 0, i64 1
  %267 = load i8* %buf_size, align 1
  %268 = zext i8 %267 to i32
  %269 = sub nsw i32 %268, 1
  %270 = sext i32 %269 to i64
  %271 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %272 = load [3 x %class.ap_uint.0]** %5, align 8
  %273 = getelementptr inbounds [3 x %class.ap_uint.0]* %272, i64 %271
  %274 = getelementptr inbounds [3 x %class.ap_uint.0]* %273, i32 0, i64 %270
  %275 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %266, %class.ap_uint.0* %274)
  %276 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %277 = load [3 x %class.ap_uint.0]** %6, align 8
  %278 = getelementptr inbounds [3 x %class.ap_uint.0]* %277, i64 %276
  %279 = getelementptr inbounds [3 x %class.ap_uint.0]* %278, i32 0, i64 0
  %280 = load i8* %buf_size, align 1
  %281 = zext i8 %280 to i32
  %282 = sub nsw i32 %281, 2
  %283 = sext i32 %282 to i64
  %284 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %285 = load [3 x %class.ap_uint.0]** %6, align 8
  %286 = getelementptr inbounds [3 x %class.ap_uint.0]* %285, i64 %284
  %287 = getelementptr inbounds [3 x %class.ap_uint.0]* %286, i32 0, i64 %283
  %288 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %279, %class.ap_uint.0* %287)
  %289 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %290 = load [3 x %class.ap_uint.0]** %6, align 8
  %291 = getelementptr inbounds [3 x %class.ap_uint.0]* %290, i64 %289
  %292 = getelementptr inbounds [3 x %class.ap_uint.0]* %291, i32 0, i64 1
  %293 = load i8* %buf_size, align 1
  %294 = zext i8 %293 to i32
  %295 = sub nsw i32 %294, 1
  %296 = sext i32 %295 to i64
  %297 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %298 = load [3 x %class.ap_uint.0]** %6, align 8
  %299 = getelementptr inbounds [3 x %class.ap_uint.0]* %298, i64 %297
  %300 = getelementptr inbounds [3 x %class.ap_uint.0]* %299, i32 0, i64 %296
  %301 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %292, %class.ap_uint.0* %300)
  %302 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %303 = load [3 x %class.ap_uint.0]** %7, align 8
  %304 = getelementptr inbounds [3 x %class.ap_uint.0]* %303, i64 %302
  %305 = getelementptr inbounds [3 x %class.ap_uint.0]* %304, i32 0, i64 0
  %306 = load i8* %buf_size, align 1
  %307 = zext i8 %306 to i32
  %308 = sub nsw i32 %307, 2
  %309 = sext i32 %308 to i64
  %310 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %311 = load [3 x %class.ap_uint.0]** %7, align 8
  %312 = getelementptr inbounds [3 x %class.ap_uint.0]* %311, i64 %310
  %313 = getelementptr inbounds [3 x %class.ap_uint.0]* %312, i32 0, i64 %309
  %314 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %305, %class.ap_uint.0* %313)
  %315 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %316 = load [3 x %class.ap_uint.0]** %7, align 8
  %317 = getelementptr inbounds [3 x %class.ap_uint.0]* %316, i64 %315
  %318 = getelementptr inbounds [3 x %class.ap_uint.0]* %317, i32 0, i64 1
  %319 = load i8* %buf_size, align 1
  %320 = zext i8 %319 to i32
  %321 = sub nsw i32 %320, 1
  %322 = sext i32 %321 to i64
  %323 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %p)
  %324 = load [3 x %class.ap_uint.0]** %7, align 8
  %325 = getelementptr inbounds [3 x %class.ap_uint.0]* %324, i64 %323
  %326 = getelementptr inbounds [3 x %class.ap_uint.0]* %325, i32 0, i64 %322
  %327 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %318, %class.ap_uint.0* %326)
  br label %328

; <label>:328                                     ; preds = %249
  %329 = call i8 @_ZN7ap_uintILi3EEppEi(%class.ap_uint.44* %p, i32 0)
  %330 = getelementptr %class.ap_uint.44* %18, i32 0, i32 0
  %331 = bitcast [1 x i8]* %330 to i8*
  store i8 %329, i8* %331, align 1
  br label %242

; <label>:332                                     ; preds = %242
  br label %333

; <label>:333                                     ; preds = %332
  %334 = load i16* %col, align 2
  %335 = add i16 %334, 1
  store i16 %335, i16* %col, align 2
  br label %29

; <label>:336                                     ; preds = %29
  ret void
}

declare void @_ZN7ap_uintILi13EEC1Et(%class.ap_uint.45*, i16 zeroext)

define internal void @_ZL146p_Z20xFHOGgradientComputeILi1ELi0ELi13ELi1E7ap_uintILi8EELi3EEP6ap_intILi9EEP6ap_intILi9EEPA3_7ap_uintILi8EEPA3_7ap_uintILi8EEPA3_7ap_uintILi8EE_1P6ap_intILi9EES1_PA3_7ap_uintILi8EES5_S5_(%class.ap_int.35* %GradientvaluesX, %class.ap_int.35* %GradientvaluesY, [3 x %class.ap_uint.0]* %src_buf0, [3 x %class.ap_uint.0]* %src_buf1, [3 x %class.ap_uint.0]* %src_buf2) uwtable {
  %1 = alloca %class.ap_int.35*, align 8
  %2 = alloca %class.ap_int.35*, align 8
  %3 = alloca [3 x %class.ap_uint.0]*, align 8
  %4 = alloca [3 x %class.ap_uint.0]*, align 8
  %5 = alloca [3 x %class.ap_uint.0]*, align 8
  %_s_j = alloca i32, align 4
  %_l_j = alloca i8, align 1
  %6 = alloca %class.ap_int.35, align 1
  %7 = alloca %class.ap_uint.0, align 1
  %8 = alloca %class.ap_uint.0, align 1
  %9 = alloca %class.ap_int.35, align 1
  %10 = alloca %class.ap_uint.0, align 1
  %11 = alloca %class.ap_uint.0, align 1
  store %class.ap_int.35* %GradientvaluesX, %class.ap_int.35** %1, align 8
  store %class.ap_int.35* %GradientvaluesY, %class.ap_int.35** %2, align 8
  store [3 x %class.ap_uint.0]* %src_buf0, [3 x %class.ap_uint.0]** %3, align 8
  store [3 x %class.ap_uint.0]* %src_buf1, [3 x %class.ap_uint.0]** %4, align 8
  store [3 x %class.ap_uint.0]* %src_buf2, [3 x %class.ap_uint.0]** %5, align 8
  store i32 0, i32* %_s_j, align 4
  store i8 0, i8* %_l_j, align 1
  br label %12

; <label>:12                                      ; preds = %0
  store i32 0, i32* %_s_j, align 4
  br label %13

; <label>:13                                      ; preds = %76, %12
  %14 = load i32* %_s_j, align 4
  %15 = icmp sle i32 %14, 0
  br i1 %15, label %16, label %79

; <label>:16                                      ; preds = %13
  %17 = load i32* %_s_j, align 4
  %18 = sext i32 %17 to i64
  %19 = load %class.ap_int.35** %1, align 8
  %20 = getelementptr inbounds %class.ap_int.35* %19, i64 %18
  %21 = load i32* %_s_j, align 4
  %22 = sext i32 %21 to i64
  %23 = load [3 x %class.ap_uint.0]** %4, align 8
  %24 = getelementptr inbounds [3 x %class.ap_uint.0]* %23, i64 0
  %25 = getelementptr inbounds [3 x %class.ap_uint.0]* %24, i32 0, i64 %22
  %26 = bitcast %class.ap_uint.0* %7 to i8*
  %27 = bitcast %class.ap_uint.0* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %26, i8* %27, i64 1, i32 1, i1 false)
  %28 = load i32* %_s_j, align 4
  %29 = add nsw i32 %28, 2
  %30 = sext i32 %29 to i64
  %31 = load [3 x %class.ap_uint.0]** %4, align 8
  %32 = getelementptr inbounds [3 x %class.ap_uint.0]* %31, i64 0
  %33 = getelementptr inbounds [3 x %class.ap_uint.0]* %32, i32 0, i64 %30
  %34 = bitcast %class.ap_uint.0* %8 to i8*
  %35 = bitcast %class.ap_uint.0* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 1, i32 1, i1 false)
  %36 = getelementptr %class.ap_uint.0* %7, i32 0, i32 0
  %37 = bitcast [1 x i8]* %36 to i8*
  %38 = load i8* %37, align 1
  %39 = getelementptr %class.ap_uint.0* %8, i32 0, i32 0
  %40 = bitcast [1 x i8]* %39 to i8*
  %41 = load i8* %40, align 1
  %42 = call i16 @_ZL65p_Z15xFHOGgradientXYILi0ELi13ELi1EE7ap_uintILi8EE7ap_uintILi8EE_17ap_uintILi8EES0_(i8 %38, i8 %41)
  %43 = getelementptr %class.ap_int.35* %6, i32 0, i32 0
  %44 = bitcast [2 x i8]* %43 to i16*
  store i16 %42, i16* %44, align 1
  %45 = call %class.ap_int.35* @_ZN6ap_intILi9EEaSERKS0_(%class.ap_int.35* %20, %class.ap_int.35* %6)
  %46 = load i32* %_s_j, align 4
  %47 = sext i32 %46 to i64
  %48 = load %class.ap_int.35** %2, align 8
  %49 = getelementptr inbounds %class.ap_int.35* %48, i64 %47
  %50 = load i32* %_s_j, align 4
  %51 = add nsw i32 %50, 1
  %52 = sext i32 %51 to i64
  %53 = load [3 x %class.ap_uint.0]** %3, align 8
  %54 = getelementptr inbounds [3 x %class.ap_uint.0]* %53, i64 0
  %55 = getelementptr inbounds [3 x %class.ap_uint.0]* %54, i32 0, i64 %52
  %56 = bitcast %class.ap_uint.0* %10 to i8*
  %57 = bitcast %class.ap_uint.0* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 1, i32 1, i1 false)
  %58 = load i32* %_s_j, align 4
  %59 = add nsw i32 %58, 1
  %60 = sext i32 %59 to i64
  %61 = load [3 x %class.ap_uint.0]** %5, align 8
  %62 = getelementptr inbounds [3 x %class.ap_uint.0]* %61, i64 0
  %63 = getelementptr inbounds [3 x %class.ap_uint.0]* %62, i32 0, i64 %60
  %64 = bitcast %class.ap_uint.0* %11 to i8*
  %65 = bitcast %class.ap_uint.0* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 1, i32 1, i1 false)
  %66 = getelementptr %class.ap_uint.0* %10, i32 0, i32 0
  %67 = bitcast [1 x i8]* %66 to i8*
  %68 = load i8* %67, align 1
  %69 = getelementptr %class.ap_uint.0* %11, i32 0, i32 0
  %70 = bitcast [1 x i8]* %69 to i8*
  %71 = load i8* %70, align 1
  %72 = call i16 @_ZL65p_Z15xFHOGgradientXYILi0ELi13ELi1EE7ap_uintILi8EE7ap_uintILi8EE_17ap_uintILi8EES0_(i8 %68, i8 %71)
  %73 = getelementptr %class.ap_int.35* %9, i32 0, i32 0
  %74 = bitcast [2 x i8]* %73 to i16*
  store i16 %72, i16* %74, align 1
  %75 = call %class.ap_int.35* @_ZN6ap_intILi9EEaSERKS0_(%class.ap_int.35* %49, %class.ap_int.35* %9)
  br label %76

; <label>:76                                      ; preds = %16
  %77 = load i32* %_s_j, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %_s_j, align 4
  br label %13

; <label>:79                                      ; preds = %13
  ret void
}

declare void @_ZN3hls6streamI7ap_uintILi9EEE5writeERKS2_(%"class.hls::stream.6"*, %class.ap_uint.7*)

declare i64 @_ZNK7ap_uintILi2EEcvmEv(%class.ap_uint.12*)

declare %class.ap_int.35* @_ZN6ap_intILi9EEaSERKS0_(%class.ap_int.35*, %class.ap_int.35*)

define internal i16 @_ZL65p_Z15xFHOGgradientXYILi0ELi13ELi1EE7ap_uintILi8EE7ap_uintILi8EE_17ap_uintILi8EES0_(i8 %n1.coerce, i8 %n2.coerce) uwtable {
  %1 = alloca %class.ap_int.35, align 1
  %n1 = alloca %class.ap_uint.0, align 1
  %n2 = alloca %class.ap_uint.0, align 1
  %2 = alloca %class.ap_int.46, align 1
  %3 = alloca %class.ap_uint.0, align 1
  %4 = alloca %class.ap_uint.0, align 1
  %5 = getelementptr %class.ap_uint.0* %n1, i32 0, i32 0
  %6 = bitcast [1 x i8]* %5 to i8*
  store i8 %n1.coerce, i8* %6, align 1
  %7 = getelementptr %class.ap_uint.0* %n2, i32 0, i32 0
  %8 = bitcast [1 x i8]* %7 to i8*
  store i8 %n2.coerce, i8* %8, align 1
  call void @_ZN6ap_intILi9EEC1Ev(%class.ap_int.35* %1)
  %9 = bitcast %class.ap_uint.0* %3 to i8*
  %10 = bitcast %class.ap_uint.0* %n2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 1, i32 1, i1 false)
  %11 = bitcast %class.ap_uint.0* %4 to i8*
  %12 = bitcast %class.ap_uint.0* %n1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 1, i32 1, i1 false)
  %13 = getelementptr %class.ap_uint.0* %3, i32 0, i32 0
  %14 = bitcast [1 x i8]* %13 to i8*
  %15 = load i8* %14, align 1
  %16 = getelementptr %class.ap_uint.0* %4, i32 0, i32 0
  %17 = bitcast [1 x i8]* %16 to i8*
  %18 = load i8* %17, align 1
  %19 = call i16 @_ZmiILi8ELi8EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i8 %15, i8 %18)
  %20 = getelementptr %class.ap_int.46* %2, i32 0, i32 0
  %21 = bitcast [2 x i8]* %20 to i16*
  store i16 %19, i16* %21, align 1
  %22 = call %class.ap_int.35* @_ZN6ap_intILi9EEaSILi16EEERS0_RKS_IXT_EE(%class.ap_int.35* %1, %class.ap_int.46* %2)
  %23 = getelementptr %class.ap_int.35* %1, i32 0, i32 0
  %24 = bitcast [2 x i8]* %23 to i16*
  %25 = load i16* %24, align 1
  ret i16 %25
}

declare %class.ap_int.35* @_ZN6ap_intILi9EEaSILi16EEERS0_RKS_IXT_EE(%class.ap_int.35*, %class.ap_int.46*)

declare i16 @_ZmiILi8ELi8EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i8, i8)

declare void @_ZN7ap_uintILi8EEC1Ei(%class.ap_uint.0*, i32)

declare i64 @_ZNK7ap_uintILi13EEcvmEv(%class.ap_uint.45*)

define internal void @_ZL67p_Z15xfExtractPixelsILi1ELi1ELi0EEP7ap_uintILi8EER7ap_uintILi8EEi_1P7ap_uintILi8EERS0_i(%class.ap_uint.0* %tmp_buf, %class.ap_uint.0* %val1, i32 %pos) uwtable {
  %1 = alloca %class.ap_uint.0*, align 8
  %2 = alloca %class.ap_uint.0*, align 8
  %3 = alloca i32, align 4
  %v = alloca %class.ap_uint.0, align 1
  %shift = alloca i32, align 4
  %STEP = alloca i32, align 4
  %i = alloca i32, align 4
  store %class.ap_uint.0* %tmp_buf, %class.ap_uint.0** %1, align 8
  store %class.ap_uint.0* %val1, %class.ap_uint.0** %2, align 8
  store i32 %pos, i32* %3, align 4
  %4 = load %class.ap_uint.0** %2, align 8
  %5 = bitcast %class.ap_uint.0* %v to i8*
  %6 = bitcast %class.ap_uint.0* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 1, i32 1, i1 false)
  store i32 0, i32* %shift, align 4
  store i32 8, i32* %STEP, align 4
  br label %7

; <label>:7                                       ; preds = %0
  store i32 0, i32* %i, align 4
  br label %8

; <label>:8                                       ; preds = %29, %7
  %9 = load i32* %i, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %32

; <label>:11                                      ; preds = %8
  %12 = load i32* %3, align 4
  %13 = load i32* %i, align 4
  %14 = add nsw i32 %12, %13
  %15 = sext i32 %14 to i64
  %16 = load %class.ap_uint.0** %1, align 8
  %17 = getelementptr inbounds %class.ap_uint.0* %16, i64 %15
  %18 = load i32* %shift, align 4
  %19 = load i32* %STEP, align 4
  %20 = add nsw i32 %18, %19
  %21 = sub nsw i32 %20, 1
  %22 = load i32* %shift, align 4
  %23 = call i64* @_ZN7ap_uintILi8EE5rangeEii(%class.ap_uint.0* %v, i32 %21, i32 %22)
  %24 = load i64* %23
  %25 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEm(%class.ap_uint.0* %17, i64 %24)
  %26 = load i32* %shift, align 4
  %27 = load i32* %STEP, align 4
  %28 = add nsw i32 %26, %27
  store i32 %28, i32* %shift, align 4
  br label %29

; <label>:29                                      ; preds = %11
  %30 = load i32* %i, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %i, align 4
  br label %8

; <label>:32                                      ; preds = %8
  ret void
}

declare %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEm(%class.ap_uint.0*, i64)

declare i64* @_ZN7ap_uintILi8EE5rangeEii(%class.ap_uint.0*, i32, i32)

define internal void @_ZL130p_Z25xFHOGReadFromStreamKernelILi2160ELi3840ELi1E7ap_uintILi8EE7ap_uintILi8EEER6streamI7ap_uintILi8EEEP6streamI7ap_uintILi8EEEtt_1RN3hls6streamI7ap_uintILi8EEEEPS3_tt(%"class.hls::stream.2"* %in_stream, %"class.hls::stream.2"* %out_stream, i16 zeroext %height, i16 zeroext %width) uwtable {
  %1 = alloca %"class.hls::stream.2"*, align 8
  %2 = alloca %"class.hls::stream.2"*, align 8
  %3 = alloca i16, align 2
  %4 = alloca i16, align 2
  %input_data = alloca %class.ap_uint.1, align 1
  %i = alloca %class.ap_uint.1, align 1
  %j = alloca %class.ap_uint.1, align 1
  %upper_limit = alloca %class.ap_uint.22, align 1
  %lower_limit = alloca %class.ap_uint.22, align 1
  %k = alloca %class.ap_uint.44, align 1
  %5 = alloca %class.ap_uint.1, align 1
  %6 = alloca %class.ap_uint.1, align 1
  %7 = alloca %class.ap_uint.0, align 1
  %in_data = alloca [3 x i8], align 1
  %8 = alloca %class.ap_uint.44, align 1
  %9 = alloca %class.ap_uint.0, align 1
  %10 = alloca %class.ap_uint.44, align 1
  %11 = alloca %class.ap_uint.1, align 1
  %12 = alloca %class.ap_uint.1, align 1
  store %"class.hls::stream.2"* %in_stream, %"class.hls::stream.2"** %1, align 8
  store %"class.hls::stream.2"* %out_stream, %"class.hls::stream.2"** %2, align 8
  store i16 %height, i16* %3, align 2
  store i16 %width, i16* %4, align 2
  call void @_ZN7ap_uintILi32EEC1Ev(%class.ap_uint.1* %input_data)
  call void @_ZN7ap_uintILi32EEC1Ev(%class.ap_uint.1* %i)
  call void @_ZN7ap_uintILi32EEC1Ev(%class.ap_uint.1* %j)
  call void @_ZN7ap_uintILi5EEC1Ev(%class.ap_uint.22* %upper_limit)
  call void @_ZN7ap_uintILi5EEC1Ev(%class.ap_uint.22* %lower_limit)
  call void @_ZN7ap_uintILi3EEC1Ev(%class.ap_uint.44* %k)
  br label %13

; <label>:13                                      ; preds = %0
  %14 = call %class.ap_uint.1* @_ZN7ap_uintILi32EEaSEi(%class.ap_uint.1* %i, i32 0)
  br label %15

; <label>:15                                      ; preds = %75, %13
  %16 = bitcast %class.ap_uint.1* %5 to i8*
  %17 = bitcast %class.ap_uint.1* %i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 4, i32 1, i1 false)
  %18 = load i16* %3, align 2
  %19 = getelementptr %class.ap_uint.1* %5, i32 0, i32 0
  %20 = bitcast [4 x i8]* %19 to i32*
  %21 = load i32* %20, align 1
  %22 = call zeroext i1 @_ZltILi32EEb7ap_uintIXT_EEt(i32 %21, i16 zeroext %18)
  br i1 %22, label %23, label %79

; <label>:23                                      ; preds = %15
  br label %24

; <label>:24                                      ; preds = %23
  %25 = call %class.ap_uint.1* @_ZN7ap_uintILi32EEaSEi(%class.ap_uint.1* %j, i32 0)
  br label %26

; <label>:26                                      ; preds = %70, %24
  %27 = bitcast %class.ap_uint.1* %6 to i8*
  %28 = bitcast %class.ap_uint.1* %j to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %27, i8* %28, i64 4, i32 1, i1 false)
  %29 = load i16* %4, align 2
  %30 = getelementptr %class.ap_uint.1* %6, i32 0, i32 0
  %31 = bitcast [4 x i8]* %30 to i32*
  %32 = load i32* %31, align 1
  %33 = call zeroext i1 @_ZltILi32EEb7ap_uintIXT_EEt(i32 %32, i16 zeroext %29)
  br i1 %33, label %34, label %74

; <label>:34                                      ; preds = %26
  %35 = load %"class.hls::stream.2"** %1, align 8
  %36 = call i8 @_ZN3hls6streamI7ap_uintILi8EEE4readEv(%"class.hls::stream.2"* %35)
  %37 = getelementptr %class.ap_uint.0* %7, i32 0, i32 0
  %38 = bitcast [1 x i8]* %37 to i8*
  store i8 %36, i8* %38, align 1
  %39 = call %class.ap_uint.1* @_ZN7ap_uintILi32EEaSILi8EEERS0_RKS_IXT_EE(%class.ap_uint.1* %input_data, %class.ap_uint.0* %7)
  %40 = call %class.ap_uint.22* @_ZN7ap_uintILi5EEaSEi(%class.ap_uint.22* %upper_limit, i32 7)
  %41 = call %class.ap_uint.22* @_ZN7ap_uintILi5EEaSEi(%class.ap_uint.22* %lower_limit, i32 0)
  %42 = call i64* @_ZN7ap_uintILi5EEcmILi5EEERmRS_IXT_EE(%class.ap_uint.22* %40, %class.ap_uint.22* %41)
  br label %43

; <label>:43                                      ; preds = %34
  %44 = call %class.ap_uint.44* @_ZN7ap_uintILi3EEaSEi(%class.ap_uint.44* %k, i32 0)
  br label %45

; <label>:45                                      ; preds = %65, %43
  %46 = bitcast %class.ap_uint.44* %8 to i8*
  %47 = bitcast %class.ap_uint.44* %k to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 1, i32 1, i1 false)
  %48 = getelementptr %class.ap_uint.44* %8, i32 0, i32 0
  %49 = bitcast [1 x i8]* %48 to i8*
  %50 = load i8* %49, align 1
  %51 = call zeroext i1 @_ZltILi3EEb7ap_uintIXT_EEi(i8 %50, i32 1)
  br i1 %51, label %52, label %69

; <label>:52                                      ; preds = %45
  %53 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %k)
  %54 = load %"class.hls::stream.2"** %2, align 8
  %55 = getelementptr inbounds %"class.hls::stream.2"* %54, i64 %53
  %56 = call i64* @_ZN7ap_uintILi32EE5rangeILi5ELi5EEERmRKS_IXT_EERKS_IXT0_EE(%class.ap_uint.1* %input_data, %class.ap_uint.22* %upper_limit, %class.ap_uint.22* %lower_limit)
  %57 = load i64* %56
  call void @_ZN7ap_uintILi8EEC1Em(%class.ap_uint.0* %9, i64 %57)
  call void @_ZN3hls6streamI7ap_uintILi8EEE5writeERKS2_(%"class.hls::stream.2"* %55, %class.ap_uint.0* %9)
  %58 = call i64* @_ZN7ap_uintILi32EE5rangeILi5ELi5EEERmRKS_IXT_EERKS_IXT0_EE(%class.ap_uint.1* %input_data, %class.ap_uint.22* %upper_limit, %class.ap_uint.22* %lower_limit)
  %59 = load i64* %58
  %60 = trunc i64 %59 to i8
  %61 = call i64 @_ZNK7ap_uintILi3EEcvmEv(%class.ap_uint.44* %k)
  %62 = getelementptr inbounds [3 x i8]* %in_data, i32 0, i64 %61
  store i8 %60, i8* %62, align 1
  %63 = call %class.ap_uint.22* @_ZpLILi5EER7ap_uintIXT_EES2_i(%class.ap_uint.22* %upper_limit, i32 8)
  %64 = call %class.ap_uint.22* @_ZpLILi5EER7ap_uintIXT_EES2_i(%class.ap_uint.22* %lower_limit, i32 8)
  br label %65

; <label>:65                                      ; preds = %52
  %66 = call i8 @_ZN7ap_uintILi3EEppEi(%class.ap_uint.44* %k, i32 0)
  %67 = getelementptr %class.ap_uint.44* %10, i32 0, i32 0
  %68 = bitcast [1 x i8]* %67 to i8*
  store i8 %66, i8* %68, align 1
  br label %45

; <label>:69                                      ; preds = %45
  br label %70

; <label>:70                                      ; preds = %69
  %71 = call i32 @_ZN7ap_uintILi32EEppEi(%class.ap_uint.1* %j, i32 0)
  %72 = getelementptr %class.ap_uint.1* %11, i32 0, i32 0
  %73 = bitcast [4 x i8]* %72 to i32*
  store i32 %71, i32* %73, align 1
  br label %26

; <label>:74                                      ; preds = %26
  br label %75

; <label>:75                                      ; preds = %74
  %76 = call i32 @_ZN7ap_uintILi32EEppEi(%class.ap_uint.1* %i, i32 0)
  %77 = getelementptr %class.ap_uint.1* %12, i32 0, i32 0
  %78 = bitcast [4 x i8]* %77 to i32*
  store i32 %76, i32* %78, align 1
  br label %15

; <label>:79                                      ; preds = %15
  ret void
}

declare void @_ZN7ap_uintILi5EEC1Ev(%class.ap_uint.22*)

declare zeroext i1 @_ZltILi32EEb7ap_uintIXT_EEt(i32, i16 zeroext)

declare %class.ap_uint.1* @_ZN7ap_uintILi32EEaSILi8EEERS0_RKS_IXT_EE(%class.ap_uint.1*, %class.ap_uint.0*)

declare %class.ap_uint.22* @_ZN7ap_uintILi5EEaSEi(%class.ap_uint.22*, i32)

declare i64* @_ZN7ap_uintILi5EEcmILi5EEERmRS_IXT_EE(%class.ap_uint.22*, %class.ap_uint.22*)

declare void @_ZN7ap_uintILi8EEC1Em(%class.ap_uint.0*, i64)

declare i64* @_ZN7ap_uintILi32EE5rangeILi5ELi5EEERmRKS_IXT_EERKS_IXT0_EE(%class.ap_uint.1*, %class.ap_uint.22*, %class.ap_uint.22*)

declare %class.ap_uint.22* @_ZpLILi5EER7ap_uintIXT_EES2_i(%class.ap_uint.22*, i32)

declare i32 @_ZN7ap_uintILi32EEppEi(%class.ap_uint.1*, i32)

define internal void @_ZL112p_ZN2xf11accel_utils11Array2xfMatILi256ELi0ELi2160ELi3840ELi1EEEP7ap_uintILi256EER3MatILi0ELi2160ELi3840ELi1EE_1P14xf_accel_utilsP7ap_uintILi256EER21xf_Mat_0_2160_3840_1_(%struct.xf_accel_utils* %this_, %class.ap_uint* %srcPtr, %struct.xf_Mat_0_2160_3840_1_* %dstMat) uwtable {
  %1 = alloca %struct.xf_accel_utils*, align 8
  %2 = alloca %class.ap_uint*, align 8
  %3 = alloca %struct.xf_Mat_0_2160_3840_1_*, align 8
  %ch_width = alloca i32, align 4
  %strm = alloca %"class.hls::stream", align 1
  %rows = alloca i32, align 4
  %cols = alloca i32, align 4
  store %struct.xf_accel_utils* %this_, %struct.xf_accel_utils** %1, align 8
  store %class.ap_uint* %srcPtr, %class.ap_uint** %2, align 8
  store %struct.xf_Mat_0_2160_3840_1_* %dstMat, %struct.xf_Mat_0_2160_3840_1_** %3, align 8
  store i32 8, i32* %ch_width, align 4
  call void @_ZN3hls6streamI7ap_uintILi256EEEC1Ev(%"class.hls::stream"* %strm)
  %4 = load %struct.xf_Mat_0_2160_3840_1_** %3, align 8
  %5 = getelementptr inbounds %struct.xf_Mat_0_2160_3840_1_* %4, i32 0, i32 1
  %6 = load i32* %5, align 4
  store i32 %6, i32* %rows, align 4
  %7 = load %struct.xf_Mat_0_2160_3840_1_** %3, align 8
  %8 = getelementptr inbounds %struct.xf_Mat_0_2160_3840_1_* %7, i32 0, i32 2
  %9 = load i32* %8, align 4
  store i32 %9, i32* %cols, align 4
  %10 = load %struct.xf_accel_utils** %1, align 8
  %11 = load %class.ap_uint** %2, align 8
  %12 = load i32* %rows, align 4
  %13 = load i32* %cols, align 4
  call void @_ZL126p_ZN2xf11accel_utils13Array2hlsStrmILi256ELi2160ELi3840ELi1ELi1ELi8ELi259200EEEP7ap_uintILi256EER6streamI7ap_uintILi256EEEii_1P14xf_accel_utilsP7ap_uintILi256EERN3hls6streamIS2_EEii(%struct.xf_accel_utils* %10, %class.ap_uint* %11, %"class.hls::stream"* %strm, i32 %12, i32 %13)
  %14 = load %struct.xf_accel_utils** %1, align 8
  %15 = load %struct.xf_Mat_0_2160_3840_1_** %3, align 8
  call void @_ZL133p_ZN2xf11accel_utils13hlsStrm2xfMatILi256ELi0ELi2160ELi3840ELi1ELi8294400EEER6streamI7ap_uintILi256EEER3MatILi0ELi2160ELi3840ELi1EE_1P14xf_accel_utilsRN3hls6streamI7ap_uintILi256EEEER21xf_Mat_0_2160_3840_1_(%struct.xf_accel_utils* %14, %"class.hls::stream"* %strm, %struct.xf_Mat_0_2160_3840_1_* %15)
  ret void
}

define internal void @_ZL126p_ZN2xf11accel_utils13Array2hlsStrmILi256ELi2160ELi3840ELi1ELi1ELi8ELi259200EEEP7ap_uintILi256EER6streamI7ap_uintILi256EEEii_1P14xf_accel_utilsP7ap_uintILi256EERN3hls6streamIS2_EEii(%struct.xf_accel_utils* %this_, %class.ap_uint* %srcPtr, %"class.hls::stream"* %dstStrm, i32 %rows, i32 %cols) uwtable {
  %1 = alloca %struct.xf_accel_utils*, align 8
  %2 = alloca %class.ap_uint*, align 8
  %3 = alloca %"class.hls::stream"*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %pixel_width = alloca i32, align 4
  %loop_count = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.xf_accel_utils* %this_, %struct.xf_accel_utils** %1, align 8
  store %class.ap_uint* %srcPtr, %class.ap_uint** %2, align 8
  store %"class.hls::stream"* %dstStrm, %"class.hls::stream"** %3, align 8
  store i32 %rows, i32* %4, align 4
  store i32 %cols, i32* %5, align 4
  store i32 8, i32* %pixel_width, align 4
  %6 = load i32* %4, align 4
  %7 = load i32* %5, align 4
  %8 = mul nsw i32 %6, %7
  %9 = load i32* %pixel_width, align 4
  %10 = mul nsw i32 %8, %9
  %11 = add nsw i32 %10, 256
  %12 = sub nsw i32 %11, 1
  %13 = sdiv i32 %12, 256
  store i32 %13, i32* %loop_count, align 4
  store i32 0, i32* %i, align 4
  br label %14

; <label>:14                                      ; preds = %24, %0
  %15 = load i32* %i, align 4
  %16 = load i32* %loop_count, align 4
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %27

; <label>:18                                      ; preds = %14
  %19 = load %"class.hls::stream"** %3, align 8
  %20 = load i32* %i, align 4
  %21 = sext i32 %20 to i64
  %22 = load %class.ap_uint** %2, align 8
  %23 = getelementptr inbounds %class.ap_uint* %22, i64 %21
  call void @_ZN3hls6streamI7ap_uintILi256EEE5writeERKS2_(%"class.hls::stream"* %19, %class.ap_uint* %23)
  br label %24

; <label>:24                                      ; preds = %18
  %25 = load i32* %i, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %i, align 4
  br label %14

; <label>:27                                      ; preds = %14
  ret void
}

define internal void @_ZL133p_ZN2xf11accel_utils13hlsStrm2xfMatILi256ELi0ELi2160ELi3840ELi1ELi8294400EEER6streamI7ap_uintILi256EEER3MatILi0ELi2160ELi3840ELi1EE_1P14xf_accel_utilsRN3hls6streamI7ap_uintILi256EEEER21xf_Mat_0_2160_3840_1_(%struct.xf_accel_utils* %this_, %"class.hls::stream"* %srcStrm, %struct.xf_Mat_0_2160_3840_1_* %dstMat) uwtable {
  %1 = alloca %struct.xf_accel_utils*, align 8
  %2 = alloca %"class.hls::stream"*, align 8
  %3 = alloca %struct.xf_Mat_0_2160_3840_1_*, align 8
  %rows = alloca i32, align 4
  %cols = alloca i32, align 4
  %loop_count = alloca i32, align 4
  %valid_bits = alloca i32, align 4
  %N_size = alloca i32, align 4
  %r = alloca %class.ap_uint, align 1
  %out = alloca %class.ap_uint.0, align 1
  %i = alloca i32, align 4
  %4 = alloca %class.ap_uint, align 1
  %5 = alloca %class.ap_uint.0, align 1
  store %struct.xf_accel_utils* %this_, %struct.xf_accel_utils** %1, align 8
  store %"class.hls::stream"* %srcStrm, %"class.hls::stream"** %2, align 8
  store %struct.xf_Mat_0_2160_3840_1_* %dstMat, %struct.xf_Mat_0_2160_3840_1_** %3, align 8
  %6 = load %struct.xf_Mat_0_2160_3840_1_** %3, align 8
  %7 = getelementptr inbounds %struct.xf_Mat_0_2160_3840_1_* %6, i32 0, i32 1
  %8 = load i32* %7, align 4
  store i32 %8, i32* %rows, align 4
  %9 = load %struct.xf_Mat_0_2160_3840_1_** %3, align 8
  %10 = getelementptr inbounds %struct.xf_Mat_0_2160_3840_1_* %9, i32 0, i32 2
  %11 = load i32* %10, align 4
  store i32 %11, i32* %cols, align 4
  %12 = load i32* %rows, align 4
  %13 = load i32* %cols, align 4
  %14 = mul nsw i32 %12, %13
  %15 = sdiv i32 %14, 1
  store i32 %15, i32* %loop_count, align 4
  store i32 0, i32* %valid_bits, align 4
  store i32 8, i32* %N_size, align 4
  call void @_ZN7ap_uintILi256EEC1Ev(%class.ap_uint* %r)
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %out)
  br label %16

; <label>:16                                      ; preds = %0
  store i32 0, i32* %i, align 4
  br label %17

; <label>:17                                      ; preds = %68, %16
  %18 = load i32* %i, align 4
  %19 = load i32* %loop_count, align 4
  %20 = icmp slt i32 %18, %19
  br i1 %20, label %21, label %71

; <label>:21                                      ; preds = %17
  %22 = load i32* %valid_bits, align 4
  %23 = icmp slt i32 %22, 8
  br i1 %23, label %24, label %48

; <label>:24                                      ; preds = %21
  %25 = load i32* %valid_bits, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %35

; <label>:27                                      ; preds = %24
  %28 = load i32* %valid_bits, align 4
  %29 = sub nsw i32 256, %28
  %30 = call i64* @_ZN7ap_uintILi256EE5rangeEii(%class.ap_uint* %r, i32 255, i32 %29)
  %31 = load i64* %30
  %32 = load i32* %valid_bits, align 4
  %33 = sub nsw i32 %32, 1
  %34 = call i64* @_ZN7ap_uintILi8EE5rangeEii(%class.ap_uint.0* %out, i32 %33, i32 0)
  store i64 %31, i64* %34
  br label %35

; <label>:35                                      ; preds = %27, %24
  %36 = load %"class.hls::stream"** %2, align 8
  call void @_ZN3hls6streamI7ap_uintILi256EEE4readEv(%class.ap_uint* sret %4, %"class.hls::stream"* %36)
  %37 = call %class.ap_uint* @_ZN7ap_uintILi256EEaSERKS0_(%class.ap_uint* %r, %class.ap_uint* %4)
  %38 = load i32* %valid_bits, align 4
  %39 = sub nsw i32 8, %38
  %40 = sub nsw i32 %39, 1
  %41 = call i64* @_ZN7ap_uintILi256EE5rangeEii(%class.ap_uint* %r, i32 %40, i32 0)
  %42 = load i64* %41
  %43 = load i32* %valid_bits, align 4
  %44 = call i64* @_ZN7ap_uintILi8EE5rangeEii(%class.ap_uint.0* %out, i32 7, i32 %43)
  store i64 %42, i64* %44
  %45 = load i32* %valid_bits, align 4
  %46 = sub nsw i32 8, %45
  %47 = sub nsw i32 256, %46
  store i32 %47, i32* %valid_bits, align 4
  br label %60

; <label>:48                                      ; preds = %21
  %49 = load i32* %valid_bits, align 4
  %50 = sub nsw i32 256, %49
  %51 = add nsw i32 %50, 8
  %52 = sub nsw i32 %51, 1
  %53 = load i32* %valid_bits, align 4
  %54 = sub nsw i32 256, %53
  %55 = call i64* @_ZN7ap_uintILi256EE5rangeEii(%class.ap_uint* %r, i32 %52, i32 %54)
  %56 = load i64* %55
  %57 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSEm(%class.ap_uint.0* %out, i64 %56)
  %58 = load i32* %valid_bits, align 4
  %59 = sub nsw i32 %58, 8
  store i32 %59, i32* %valid_bits, align 4
  br label %60

; <label>:60                                      ; preds = %48, %35
  %61 = load %struct.xf_Mat_0_2160_3840_1_** %3, align 8
  %62 = load i32* %i, align 4
  %63 = bitcast %class.ap_uint.0* %5 to i8*
  %64 = bitcast %class.ap_uint.0* %out to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 1, i32 1, i1 false)
  %65 = getelementptr %class.ap_uint.0* %5, i32 0, i32 0
  %66 = bitcast [1 x i8]* %65 to i8*
  %67 = load i8* %66, align 1
  call void @_ZL53p_ZN2xf18Mat_0_2160_3840_1_5writeIEEi7ap_uintILi8EE_1P21xf_Mat_0_2160_3840_1_i7ap_uintILi8EE(%struct.xf_Mat_0_2160_3840_1_* %61, i32 %62, i8 %67)
  br label %68

; <label>:68                                      ; preds = %60
  %69 = load i32* %i, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %i, align 4
  br label %17

; <label>:71                                      ; preds = %17
  ret void
}

define internal void @_ZL53p_ZN2xf18Mat_0_2160_3840_1_5writeIEEi7ap_uintILi8EE_1P21xf_Mat_0_2160_3840_1_i7ap_uintILi8EE(%struct.xf_Mat_0_2160_3840_1_* %this_, i32 %index, i8 %val.coerce) uwtable {
  %1 = alloca %struct.xf_Mat_0_2160_3840_1_*, align 8
  %2 = alloca i32, align 4
  %val = alloca %class.ap_uint.0, align 1
  store %struct.xf_Mat_0_2160_3840_1_* %this_, %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  store i32 %index, i32* %2, align 4
  %3 = getelementptr %class.ap_uint.0* %val, i32 0, i32 0
  %4 = bitcast [1 x i8]* %3 to i8*
  store i8 %val.coerce, i8* %4, align 1
  %5 = load i32* %2, align 4
  %6 = sext i32 %5 to i64
  %7 = load %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  %8 = getelementptr inbounds %struct.xf_Mat_0_2160_3840_1_* %7, i32 0, i32 4
  %9 = getelementptr inbounds [8294400 x %class.ap_uint.0]* %8, i32 0, i64 %6
  %10 = call %class.ap_uint.0* @_ZN7ap_uintILi8EEaSERKS0_(%class.ap_uint.0* %9, %class.ap_uint.0* %val)
  ret void
}

define internal void @_ZL40p_ZN2xf18Mat_3_1_2319318_1_4initIEEiib_1P21xf_Mat_3_1_2319318_1_iib(%struct.xf_Mat_3_1_2319318_1_* %this_, i32 %_rows, i32 %_cols, i1 zeroext %allocate) nounwind uwtable {
  %1 = alloca %struct.xf_Mat_3_1_2319318_1_*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store %struct.xf_Mat_3_1_2319318_1_* %this_, %struct.xf_Mat_3_1_2319318_1_** %1, align 8
  store i32 %_rows, i32* %2, align 4
  store i32 %_cols, i32* %3, align 4
  %5 = zext i1 %allocate to i8
  store i8 %5, i8* %4, align 1
  %6 = load i32* %2, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %18

; <label>:8                                       ; preds = %0
  %9 = load i32* %2, align 4
  %10 = icmp sle i32 %9, 1
  br i1 %10, label %11, label %18

; <label>:11                                      ; preds = %8
  %12 = load i32* %3, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %18

; <label>:14                                      ; preds = %11
  %15 = load i32* %3, align 4
  %16 = icmp sle i32 %15, 2319318
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %14
  br label %20

; <label>:18                                      ; preds = %14, %11, %8, %0
  call void @__assert_fail(i8* getelementptr inbounds ([143 x i8]* @.str14, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str15, i32 0, i32 0), i32 517, i8* getelementptr inbounds ([94 x i8]* @__PRETTY_FUNCTION__._ZL40p_ZN2xf18Mat_3_1_2319318_1_4initIEEiib_1P21xf_Mat_3_1_2319318_1_iib, i32 0, i32 0)) noreturn nounwind
  unreachable
                                                  ; No predecessors!
  br label %20

; <label>:20                                      ; preds = %19, %17
  %21 = load i32* %2, align 4
  %22 = load %struct.xf_Mat_3_1_2319318_1_** %1, align 8
  %23 = getelementptr inbounds %struct.xf_Mat_3_1_2319318_1_* %22, i32 0, i32 1
  store i32 %21, i32* %23, align 4
  %24 = load i32* %3, align 4
  %25 = load %struct.xf_Mat_3_1_2319318_1_** %1, align 8
  %26 = getelementptr inbounds %struct.xf_Mat_3_1_2319318_1_* %25, i32 0, i32 2
  store i32 %24, i32* %26, align 4
  %27 = load i32* %2, align 4
  %28 = load i32* %3, align 4
  %29 = ashr i32 %28, 0
  %30 = mul nsw i32 %27, %29
  %31 = load %struct.xf_Mat_3_1_2319318_1_** %1, align 8
  %32 = getelementptr inbounds %struct.xf_Mat_3_1_2319318_1_* %31, i32 0, i32 3
  store i32 %30, i32* %32, align 4
  %33 = load i8* %4, align 1
  %34 = trunc i8 %33 to i1
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %20
  br label %36

; <label>:36                                      ; preds = %35, %20
  ret void
}

define linkonce_odr void @_ZN21xf_Mat_3_1_2319318_1_C2Ev(%struct.xf_Mat_3_1_2319318_1_* %this) unnamed_addr uwtable inlinehint align 2 {
  %1 = alloca %struct.xf_Mat_3_1_2319318_1_*, align 8
  store %struct.xf_Mat_3_1_2319318_1_* %this, %struct.xf_Mat_3_1_2319318_1_** %1, align 8
  %2 = load %struct.xf_Mat_3_1_2319318_1_** %1
  %3 = getelementptr inbounds %struct.xf_Mat_3_1_2319318_1_* %2, i32 0, i32 4
  %4 = getelementptr inbounds [2319318 x %class.ap_uint.1]* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.ap_uint.1* %4, i64 2319318
  br label %6

; <label>:6                                       ; preds = %6, %0
  %7 = phi %class.ap_uint.1* [ %4, %0 ], [ %8, %6 ]
  call void @_ZN7ap_uintILi32EEC1Ev(%class.ap_uint.1* %7)
  %8 = getelementptr inbounds %class.ap_uint.1* %7, i64 1
  %9 = icmp eq %class.ap_uint.1* %8, %5
  br i1 %9, label %10, label %6

; <label>:10                                      ; preds = %6
  ret void
}

define internal void @_ZL40p_ZN2xf18Mat_0_2160_3840_1_4initIEEiib_1P21xf_Mat_0_2160_3840_1_iib(%struct.xf_Mat_0_2160_3840_1_* %this_, i32 %_rows, i32 %_cols, i1 zeroext %allocate) nounwind uwtable {
  %1 = alloca %struct.xf_Mat_0_2160_3840_1_*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store %struct.xf_Mat_0_2160_3840_1_* %this_, %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  store i32 %_rows, i32* %2, align 4
  store i32 %_cols, i32* %3, align 4
  %5 = zext i1 %allocate to i8
  store i8 %5, i8* %4, align 1
  %6 = load i32* %2, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %18

; <label>:8                                       ; preds = %0
  %9 = load i32* %2, align 4
  %10 = icmp sle i32 %9, 2160
  br i1 %10, label %11, label %18

; <label>:11                                      ; preds = %8
  %12 = load i32* %3, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %18

; <label>:14                                      ; preds = %11
  %15 = load i32* %3, align 4
  %16 = icmp sle i32 %15, 3840
  br i1 %16, label %17, label %18

; <label>:17                                      ; preds = %14
  br label %20

; <label>:18                                      ; preds = %14, %11, %8, %0
  call void @__assert_fail(i8* getelementptr inbounds ([143 x i8]* @.str14, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str15, i32 0, i32 0), i32 517, i8* getelementptr inbounds ([94 x i8]* @__PRETTY_FUNCTION__._ZL40p_ZN2xf18Mat_0_2160_3840_1_4initIEEiib_1P21xf_Mat_0_2160_3840_1_iib, i32 0, i32 0)) noreturn nounwind
  unreachable
                                                  ; No predecessors!
  br label %20

; <label>:20                                      ; preds = %19, %17
  %21 = load i32* %2, align 4
  %22 = load %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  %23 = getelementptr inbounds %struct.xf_Mat_0_2160_3840_1_* %22, i32 0, i32 1
  store i32 %21, i32* %23, align 4
  %24 = load i32* %3, align 4
  %25 = load %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  %26 = getelementptr inbounds %struct.xf_Mat_0_2160_3840_1_* %25, i32 0, i32 2
  store i32 %24, i32* %26, align 4
  %27 = load i32* %2, align 4
  %28 = load i32* %3, align 4
  %29 = ashr i32 %28, 0
  %30 = mul nsw i32 %27, %29
  %31 = load %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  %32 = getelementptr inbounds %struct.xf_Mat_0_2160_3840_1_* %31, i32 0, i32 3
  store i32 %30, i32* %32, align 4
  %33 = load i8* %4, align 1
  %34 = trunc i8 %33 to i1
  br i1 %34, label %35, label %36

; <label>:35                                      ; preds = %20
  br label %36

; <label>:36                                      ; preds = %35, %20
  ret void
}

define linkonce_odr void @_ZN21xf_Mat_0_2160_3840_1_C2Ev(%struct.xf_Mat_0_2160_3840_1_* %this) unnamed_addr uwtable inlinehint align 2 {
  %1 = alloca %struct.xf_Mat_0_2160_3840_1_*, align 8
  store %struct.xf_Mat_0_2160_3840_1_* %this, %struct.xf_Mat_0_2160_3840_1_** %1, align 8
  %2 = load %struct.xf_Mat_0_2160_3840_1_** %1
  %3 = getelementptr inbounds %struct.xf_Mat_0_2160_3840_1_* %2, i32 0, i32 4
  %4 = getelementptr inbounds [8294400 x %class.ap_uint.0]* %3, i32 0, i32 0
  %5 = getelementptr inbounds %class.ap_uint.0* %4, i64 8294400
  br label %6

; <label>:6                                       ; preds = %6, %0
  %7 = phi %class.ap_uint.0* [ %4, %0 ], [ %8, %6 ]
  call void @_ZN7ap_uintILi8EEC1Ev(%class.ap_uint.0* %7)
  %8 = getelementptr inbounds %class.ap_uint.0* %7, i64 1
  %9 = icmp eq %class.ap_uint.0* %8, %5
  br i1 %9, label %10, label %6

; <label>:10                                      ; preds = %6
  ret void
}
