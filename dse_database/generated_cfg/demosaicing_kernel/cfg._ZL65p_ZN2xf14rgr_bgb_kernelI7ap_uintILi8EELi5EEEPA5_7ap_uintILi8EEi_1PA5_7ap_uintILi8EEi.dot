digraph "CFG for '_ZL65p_ZN2xf14rgr_bgb_kernelI7ap_uintILi8EELi5EEEPA5_7ap_uintILi8EEi_1PA5_7ap_uintILi8EEi' function" {
	label="CFG for '_ZL65p_ZN2xf14rgr_bgb_kernelI7ap_uintILi8EELi5EEEPA5_7ap_uintILi8EEi_1PA5_7ap_uintILi8EEi' function";

	Node0x2988410 [shape=record,label="{%0:\l  %1 = alloca i32, align 4\l  %2 = alloca [5 x %class.ap_uint.0]*, align 8\l  %3 = alloca i32, align 4\l  %t1 = alloca i16, align 2\l  %4 = alloca %class.ap_uint.0, align 1\l  %5 = alloca %class.ap_uint.0, align 1\l  %6 = alloca %class.ap_int, align 1\l  %t2 = alloca i16, align 2\l  %7 = alloca %class.ap_int.4, align 1\l  %8 = alloca %class.ap_int.5, align 1\l  %9 = alloca %class.ap_int.6, align 1\l  %10 = alloca %class.ap_int, align 1\l  %11 = alloca %class.ap_uint.0, align 1\l  %12 = alloca %class.ap_uint.0, align 1\l  %13 = alloca %class.ap_uint.0, align 1\l  %14 = alloca i24\l  %15 = alloca %class.ap_uint.0, align 1\l  %16 = alloca i24\l  %17 = alloca %class.ap_uint.0, align 1\l  %18 = alloca i40\l  %19 = alloca %class.ap_uint.0, align 1\l  %20 = alloca i40\l  %21 = alloca %class.ap_int.3, align 1\l  %22 = alloca i48\l  %t3 = alloca i16, align 2\l  %23 = alloca %class.ap_uint.0, align 1\l  %24 = alloca %class.ap_uint.0, align 1\l  %25 = alloca %class.ap_int, align 1\l  %t4 = alloca i16, align 2\l  %26 = alloca %class.ap_uint.0, align 1\l  %res = alloca i32, align 4\l  store [5 x %class.ap_uint.0]* %imgblock, [5 x %class.ap_uint.0]** %2, align 8\l  store i32 %loop, i32* %3, align 4\l  %27 = load i32* %3, align 4\l  %28 = add nsw i32 2, %27\l  %29 = sext i32 %28 to i64\l  %30 = load [5 x %class.ap_uint.0]** %2, align 8\l  %31 = getelementptr inbounds [5 x %class.ap_uint.0]* %30, i64 0\l  %32 = getelementptr inbounds [5 x %class.ap_uint.0]* %31, i32 0, i64 %29\l  %33 = bitcast %class.ap_uint.0* %4 to i8*\l  %34 = bitcast %class.ap_uint.0* %32 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 1, i32 1, i1 false)\l  %35 = load i32* %3, align 4\l  %36 = add nsw i32 2, %35\l  %37 = sext i32 %36 to i64\l  %38 = load [5 x %class.ap_uint.0]** %2, align 8\l  %39 = getelementptr inbounds [5 x %class.ap_uint.0]* %38, i64 4\l  %40 = getelementptr inbounds [5 x %class.ap_uint.0]* %39, i32 0, i64 %37\l  %41 = bitcast %class.ap_uint.0* %5 to i8*\l  %42 = bitcast %class.ap_uint.0* %40 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 1, i32 1, i1 false)\l  %43 = getelementptr %class.ap_uint.0* %4, i32 0, i32 0\l  %44 = bitcast [1 x i8]* %43 to i8*\l  %45 = load i8* %44, align 1\l  %46 = getelementptr %class.ap_uint.0* %5, i32 0, i32 0\l  %47 = bitcast [1 x i8]* %46 to i8*\l  %48 = load i8* %47, align 1\l  %49 = call i16 @_ZplILi8ELi8EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i8 %45, i8 %48)\l  %50 = getelementptr %class.ap_int* %6, i32 0, i32 0\l  %51 = bitcast [2 x i8]* %50 to i16*\l  store i16 %49, i16* %51, align 1\l  %52 = call i64 @_ZNK6ap_intILi16EEcvlEv(%class.ap_int* %6)\l  %53 = trunc i64 %52 to i16\l  store i16 %53, i16* %t1, align 2\l  %54 = load i32* %3, align 4\l  %55 = add nsw i32 1, %54\l  %56 = sext i32 %55 to i64\l  %57 = load [5 x %class.ap_uint.0]** %2, align 8\l  %58 = getelementptr inbounds [5 x %class.ap_uint.0]* %57, i64 1\l  %59 = getelementptr inbounds [5 x %class.ap_uint.0]* %58, i32 0, i64 %56\l  %60 = bitcast %class.ap_uint.0* %11 to i8*\l  %61 = bitcast %class.ap_uint.0* %59 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %60, i8* %61, i64 1, i32 1, i1 false)\l  %62 = load i32* %3, align 4\l  %63 = add nsw i32 3, %62\l  %64 = sext i32 %63 to i64\l  %65 = load [5 x %class.ap_uint.0]** %2, align 8\l  %66 = getelementptr inbounds [5 x %class.ap_uint.0]* %65, i64 1\l  %67 = getelementptr inbounds [5 x %class.ap_uint.0]* %66, i32 0, i64 %64\l  %68 = bitcast %class.ap_uint.0* %12 to i8*\l  %69 = bitcast %class.ap_uint.0* %67 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 1, i32 1, i1 false)\l  %70 = getelementptr %class.ap_uint.0* %11, i32 0, i32 0\l  %71 = bitcast [1 x i8]* %70 to i8*\l  %72 = load i8* %71, align 1\l  %73 = getelementptr %class.ap_uint.0* %12, i32 0, i32 0\l  %74 = bitcast [1 x i8]* %73 to i8*\l  %75 = load i8* %74, align 1\l  %76 = call i16 @_ZplILi8ELi8EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i8 %72, i8 %75)\l  %77 = getelementptr %class.ap_int* %10, i32 0, i32 0\l  %78 = bitcast [2 x i8]* %77 to i16*\l  store i16 %76, i16* %78, align 1\l  %79 = load i32* %3, align 4\l  %80 = add nsw i32 0, %79\l  %81 = sext i32 %80 to i64\l  %82 = load [5 x %class.ap_uint.0]** %2, align 8\l  %83 = getelementptr inbounds [5 x %class.ap_uint.0]* %82, i64 2\l  %84 = getelementptr inbounds [5 x %class.ap_uint.0]* %83, i32 0, i64 %81\l  %85 = bitcast %class.ap_uint.0* %13 to i8*\l  %86 = bitcast %class.ap_uint.0* %84 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 1, i32 1, i1 false)\l  %87 = getelementptr %class.ap_int* %10, i32 0, i32 0\l  %88 = bitcast [2 x i8]* %87 to i16*\l  %89 = load i16* %88, align 1\l  %90 = getelementptr %class.ap_uint.0* %13, i32 0, i32 0\l  %91 = bitcast [1 x i8]* %90 to i8*\l  %92 = load i8* %91, align 1\l  %93 = call i24 @_ZplILi16ELi8EE6ap_intIXplT_T0_EES0_IXT_EE7ap_uintIXT0_EE(i16 %89, i8 %92)\l  %94 = getelementptr %class.ap_int.6* %9, i32 0, i32 0\l  store i24 %93, i24* %14\l  %95 = bitcast i24* %14 to [3 x i8]*\l  %96 = load [3 x i8]* %95, align 1\l  store [3 x i8] %96, [3 x i8]* %94\l  %97 = load i32* %3, align 4\l  %98 = add nsw i32 4, %97\l  %99 = sext i32 %98 to i64\l  %100 = load [5 x %class.ap_uint.0]** %2, align 8\l  %101 = getelementptr inbounds [5 x %class.ap_uint.0]* %100, i64 2\l  %102 = getelementptr inbounds [5 x %class.ap_uint.0]* %101, i32 0, i64 %99\l  %103 = bitcast %class.ap_uint.0* %15 to i8*\l  %104 = bitcast %class.ap_uint.0* %102 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %104, i64 1, i32 1, i1 false)\l  %105 = getelementptr %class.ap_int.6* %9, i32 0, i32 0\l  %106 = bitcast i24* %16 to [3 x i8]*\l  %107 = load [3 x i8]* %105\l  store [3 x i8] %107, [3 x i8]* %106, align 1\l  %108 = load i24* %16\l  %109 = getelementptr %class.ap_uint.0* %15, i32 0, i32 0\l  %110 = bitcast [1 x i8]* %109 to i8*\l  %111 = load i8* %110, align 1\l  %112 = call i32 @_ZplILi24ELi8EE6ap_intIXplT_T0_EES0_IXT_EE7ap_uintIXT0_EE(i24 %108, i8 %111)\l  %113 = getelementptr %class.ap_int.5* %8, i32 0, i32 0\l  %114 = bitcast [4 x i8]* %113 to i32*\l  store i32 %112, i32* %114, align 1\l  %115 = load i32* %3, align 4\l  %116 = add nsw i32 1, %115\l  %117 = sext i32 %116 to i64\l  %118 = load [5 x %class.ap_uint.0]** %2, align 8\l  %119 = getelementptr inbounds [5 x %class.ap_uint.0]* %118, i64 3\l  %120 = getelementptr inbounds [5 x %class.ap_uint.0]* %119, i32 0, i64 %117\l  %121 = bitcast %class.ap_uint.0* %17 to i8*\l  %122 = bitcast %class.ap_uint.0* %120 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %121, i8* %122, i64 1, i32 1, i1 false)\l  %123 = getelementptr %class.ap_int.5* %8, i32 0, i32 0\l  %124 = bitcast [4 x i8]* %123 to i32*\l  %125 = load i32* %124, align 1\l  %126 = getelementptr %class.ap_uint.0* %17, i32 0, i32 0\l  %127 = bitcast [1 x i8]* %126 to i8*\l  %128 = load i8* %127, align 1\l  %129 = call i40 @_ZplILi32ELi8EE6ap_intIXplT_T0_EES0_IXT_EE7ap_uintIXT0_EE(i32 %125, i8 %128)\l  %130 = getelementptr %class.ap_int.4* %7, i32 0, i32 0\l  store i40 %129, i40* %18\l  %131 = bitcast i40* %18 to [5 x i8]*\l  %132 = load [5 x i8]* %131, align 1\l  store [5 x i8] %132, [5 x i8]* %130\l  %133 = load i32* %3, align 4\l  %134 = add nsw i32 3, %133\l  %135 = sext i32 %134 to i64\l  %136 = load [5 x %class.ap_uint.0]** %2, align 8\l  %137 = getelementptr inbounds [5 x %class.ap_uint.0]* %136, i64 3\l  %138 = getelementptr inbounds [5 x %class.ap_uint.0]* %137, i32 0, i64 %135\l  %139 = bitcast %class.ap_uint.0* %19 to i8*\l  %140 = bitcast %class.ap_uint.0* %138 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %139, i8* %140, i64 1, i32 1, i1 false)\l  %141 = getelementptr %class.ap_int.4* %7, i32 0, i32 0\l  %142 = bitcast i40* %20 to [5 x i8]*\l  %143 = load [5 x i8]* %141\l  store [5 x i8] %143, [5 x i8]* %142, align 1\l  %144 = load i40* %20\l  %145 = getelementptr %class.ap_uint.0* %19, i32 0, i32 0\l  %146 = bitcast [1 x i8]* %145 to i8*\l  %147 = load i8* %146, align 1\l  %148 = call i48 @_ZplILi40ELi8EE6ap_intIXplT_T0_EES0_IXT_EE7ap_uintIXT0_EE(i40 %144, i8 %147)\l  %149 = getelementptr %class.ap_int.3* %21, i32 0, i32 0\l  store i48 %148, i48* %22\l  %150 = bitcast i48* %22 to [6 x i8]*\l  %151 = load [6 x i8]* %150, align 1\l  store [6 x i8] %151, [6 x i8]* %149\l  %152 = call i64 @_ZNK6ap_intILi48EEcvlEv(%class.ap_int.3* %21)\l  %153 = trunc i64 %152 to i16\l  store i16 %153, i16* %t2, align 2\l  %154 = load i32* %3, align 4\l  %155 = add nsw i32 1, %154\l  %156 = sext i32 %155 to i64\l  %157 = load [5 x %class.ap_uint.0]** %2, align 8\l  %158 = getelementptr inbounds [5 x %class.ap_uint.0]* %157, i64 2\l  %159 = getelementptr inbounds [5 x %class.ap_uint.0]* %158, i32 0, i64 %156\l  %160 = bitcast %class.ap_uint.0* %23 to i8*\l  %161 = bitcast %class.ap_uint.0* %159 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %160, i8* %161, i64 1, i32 1, i1 false)\l  %162 = load i32* %3, align 4\l  %163 = add nsw i32 3, %162\l  %164 = sext i32 %163 to i64\l  %165 = load [5 x %class.ap_uint.0]** %2, align 8\l  %166 = getelementptr inbounds [5 x %class.ap_uint.0]* %165, i64 2\l  %167 = getelementptr inbounds [5 x %class.ap_uint.0]* %166, i32 0, i64 %164\l  %168 = bitcast %class.ap_uint.0* %24 to i8*\l  %169 = bitcast %class.ap_uint.0* %167 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %168, i8* %169, i64 1, i32 1, i1 false)\l  %170 = getelementptr %class.ap_uint.0* %23, i32 0, i32 0\l  %171 = bitcast [1 x i8]* %170 to i8*\l  %172 = load i8* %171, align 1\l  %173 = getelementptr %class.ap_uint.0* %24, i32 0, i32 0\l  %174 = bitcast [1 x i8]* %173 to i8*\l  %175 = load i8* %174, align 1\l  %176 = call i16 @_ZplILi8ELi8EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i8 %172, i8 %175)\l  %177 = getelementptr %class.ap_int* %25, i32 0, i32 0\l  %178 = bitcast [2 x i8]* %177 to i16*\l  store i16 %176, i16* %178, align 1\l  %179 = call i64 @_ZNK6ap_intILi16EEcvlEv(%class.ap_int* %25)\l  %180 = trunc i64 %179 to i16\l  store i16 %180, i16* %t3, align 2\l  %181 = load i16* %t3, align 2\l  %182 = sext i16 %181 to i32\l  %183 = mul nsw i32 %182, 4\l  %184 = trunc i32 %183 to i16\l  store i16 %184, i16* %t3, align 2\l  %185 = load i32* %3, align 4\l  %186 = add nsw i32 2, %185\l  %187 = sext i32 %186 to i64\l  %188 = load [5 x %class.ap_uint.0]** %2, align 8\l  %189 = getelementptr inbounds [5 x %class.ap_uint.0]* %188, i64 2\l  %190 = getelementptr inbounds [5 x %class.ap_uint.0]* %189, i32 0, i64 %187\l  %191 = call i8 @_ZmlILi8EE7ap_uintIXT_EERKS1_i(%class.ap_uint.0* %190, i32 5)\l  %192 = getelementptr %class.ap_uint.0* %26, i32 0, i32 0\l  %193 = bitcast [1 x i8]* %192 to i8*\l  store i8 %191, i8* %193, align 1\l  %194 = call i64 @_ZNK7ap_uintILi8EEcvmEv(%class.ap_uint.0* %26)\l  %195 = trunc i64 %194 to i16\l  store i16 %195, i16* %t4, align 2\l  %196 = load i16* %t1, align 2\l  %197 = sext i16 %196 to i32\l  %198 = ashr i32 %197, 1\l  %199 = load i16* %t2, align 2\l  %200 = sext i16 %199 to i32\l  %201 = sub nsw i32 %198, %200\l  %202 = load i16* %t3, align 2\l  %203 = sext i16 %202 to i32\l  %204 = add nsw i32 %201, %203\l  %205 = load i16* %t4, align 2\l  %206 = sext i16 %205 to i32\l  %207 = add nsw i32 %204, %206\l  store i32 %207, i32* %res, align 4\l  %208 = load i32* %res, align 4\l  %209 = sdiv i32 %208, 8\l  store i32 %209, i32* %res, align 4\l  %210 = load i32* %res, align 4\l  %211 = icmp slt i32 %210, 0\l  br i1 %211, label %212, label %213\l|{<s0>T|<s1>F}}"];
	Node0x2988410:s0 -> Node0x298f590;
	Node0x2988410:s1 -> Node0x2996bc0;
	Node0x298f590 [shape=record,label="{%212:\l\l  store i32 0, i32* %1\l  br label %215\l}"];
	Node0x298f590 -> Node0x2996d60;
	Node0x2996bc0 [shape=record,label="{%213:\l\l  %214 = load i32* %res, align 4\l  store i32 %214, i32* %1\l  br label %215\l}"];
	Node0x2996bc0 -> Node0x2996d60;
	Node0x2996d60 [shape=record,label="{%215:\l\l  %216 = load i32* %1\l  ret i32 %216\l}"];
}
