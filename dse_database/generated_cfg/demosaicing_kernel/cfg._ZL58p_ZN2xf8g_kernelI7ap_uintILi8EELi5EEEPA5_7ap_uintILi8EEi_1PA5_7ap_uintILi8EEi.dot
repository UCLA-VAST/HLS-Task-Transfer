digraph "CFG for '_ZL58p_ZN2xf8g_kernelI7ap_uintILi8EELi5EEEPA5_7ap_uintILi8EEi_1PA5_7ap_uintILi8EEi' function" {
	label="CFG for '_ZL58p_ZN2xf8g_kernelI7ap_uintILi8EELi5EEEPA5_7ap_uintILi8EEi_1PA5_7ap_uintILi8EEi' function";

	Node0x2975f80 [shape=record,label="{%0:\l  %1 = alloca i32, align 4\l  %2 = alloca [5 x %class.ap_uint.0]*, align 8\l  %3 = alloca i32, align 4\l  %res = alloca i32, align 4\l  %4 = alloca %class.ap_int.8, align 1\l  %5 = alloca %class.ap_int.9, align 1\l  %6 = alloca %class.ap_int.6, align 1\l  %7 = alloca %class.ap_int, align 1\l  %8 = alloca %class.ap_uint.0, align 1\l  %9 = alloca %class.ap_uint.0, align 1\l  %10 = alloca %class.ap_uint.0, align 1\l  %11 = alloca i24\l  %12 = alloca %class.ap_uint.0, align 1\l  %13 = alloca i24\l  %14 = alloca %class.ap_int.5, align 1\l  %15 = alloca i40\l  %16 = alloca %class.ap_int.5, align 1\l  %17 = alloca %class.ap_int.5, align 1\l  %18 = alloca %class.ap_int.6, align 1\l  %19 = alloca %class.ap_int, align 1\l  %20 = alloca %class.ap_uint.0, align 1\l  %21 = alloca %class.ap_uint.0, align 1\l  %22 = alloca %class.ap_uint.0, align 1\l  %23 = alloca i24\l  %24 = alloca %class.ap_uint.0, align 1\l  %25 = alloca i24\l  %26 = alloca i40\l  %27 = alloca \{ i64, i8 \}\l  %28 = alloca %class.ap_uint.0, align 1\l  %29 = alloca \{ i64, i8 \}\l  %30 = alloca %class.ap_int.7, align 1\l  %31 = alloca \{ i64, i16 \}\l  store [5 x %class.ap_uint.0]* %imgblock, [5 x %class.ap_uint.0]** %2, align 8\l  store i32 %loop, i32* %3, align 4\l  %32 = load i32* %3, align 4\l  %33 = add nsw i32 2, %32\l  %34 = sext i32 %33 to i64\l  %35 = load [5 x %class.ap_uint.0]** %2, align 8\l  %36 = getelementptr inbounds [5 x %class.ap_uint.0]* %35, i64 0\l  %37 = getelementptr inbounds [5 x %class.ap_uint.0]* %36, i32 0, i64 %34\l  %38 = bitcast %class.ap_uint.0* %8 to i8*\l  %39 = bitcast %class.ap_uint.0* %37 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 1, i32 1, i1 false)\l  %40 = load i32* %3, align 4\l  %41 = add nsw i32 0, %40\l  %42 = sext i32 %41 to i64\l  %43 = load [5 x %class.ap_uint.0]** %2, align 8\l  %44 = getelementptr inbounds [5 x %class.ap_uint.0]* %43, i64 2\l  %45 = getelementptr inbounds [5 x %class.ap_uint.0]* %44, i32 0, i64 %42\l  %46 = bitcast %class.ap_uint.0* %9 to i8*\l  %47 = bitcast %class.ap_uint.0* %45 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 1, i32 1, i1 false)\l  %48 = getelementptr %class.ap_uint.0* %8, i32 0, i32 0\l  %49 = bitcast [1 x i8]* %48 to i8*\l  %50 = load i8* %49, align 1\l  %51 = getelementptr %class.ap_uint.0* %9, i32 0, i32 0\l  %52 = bitcast [1 x i8]* %51 to i8*\l  %53 = load i8* %52, align 1\l  %54 = call i16 @_ZplILi8ELi8EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i8 %50, i8 %53)\l  %55 = getelementptr %class.ap_int* %7, i32 0, i32 0\l  %56 = bitcast [2 x i8]* %55 to i16*\l  store i16 %54, i16* %56, align 1\l  %57 = load i32* %3, align 4\l  %58 = add nsw i32 4, %57\l  %59 = sext i32 %58 to i64\l  %60 = load [5 x %class.ap_uint.0]** %2, align 8\l  %61 = getelementptr inbounds [5 x %class.ap_uint.0]* %60, i64 2\l  %62 = getelementptr inbounds [5 x %class.ap_uint.0]* %61, i32 0, i64 %59\l  %63 = bitcast %class.ap_uint.0* %10 to i8*\l  %64 = bitcast %class.ap_uint.0* %62 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 1, i32 1, i1 false)\l  %65 = getelementptr %class.ap_int* %7, i32 0, i32 0\l  %66 = bitcast [2 x i8]* %65 to i16*\l  %67 = load i16* %66, align 1\l  %68 = getelementptr %class.ap_uint.0* %10, i32 0, i32 0\l  %69 = bitcast [1 x i8]* %68 to i8*\l  %70 = load i8* %69, align 1\l  %71 = call i24 @_ZplILi16ELi8EE6ap_intIXplT_T0_EES0_IXT_EE7ap_uintIXT0_EE(i16 %67, i8 %70)\l  %72 = getelementptr %class.ap_int.6* %6, i32 0, i32 0\l  store i24 %71, i24* %11\l  %73 = bitcast i24* %11 to [3 x i8]*\l  %74 = load [3 x i8]* %73, align 1\l  store [3 x i8] %74, [3 x i8]* %72\l  %75 = load i32* %3, align 4\l  %76 = add nsw i32 2, %75\l  %77 = sext i32 %76 to i64\l  %78 = load [5 x %class.ap_uint.0]** %2, align 8\l  %79 = getelementptr inbounds [5 x %class.ap_uint.0]* %78, i64 4\l  %80 = getelementptr inbounds [5 x %class.ap_uint.0]* %79, i32 0, i64 %77\l  %81 = bitcast %class.ap_uint.0* %12 to i8*\l  %82 = bitcast %class.ap_uint.0* %80 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %81, i8* %82, i64 1, i32 1, i1 false)\l  %83 = getelementptr %class.ap_int.6* %6, i32 0, i32 0\l  %84 = bitcast i24* %13 to [3 x i8]*\l  %85 = load [3 x i8]* %83\l  store [3 x i8] %85, [3 x i8]* %84, align 1\l  %86 = load i24* %13\l  %87 = getelementptr %class.ap_uint.0* %12, i32 0, i32 0\l  %88 = bitcast [1 x i8]* %87 to i8*\l  %89 = load i8* %88, align 1\l  %90 = call i32 @_ZplILi24ELi8EE6ap_intIXplT_T0_EES0_IXT_EE7ap_uintIXT0_EE(i24 %86, i8 %89)\l  %91 = getelementptr %class.ap_int.5* %14, i32 0, i32 0\l  %92 = bitcast [4 x i8]* %91 to i32*\l  store i32 %90, i32* %92, align 1\l  %93 = call i40 @_ZNK6ap_intILi32EEngEv(%class.ap_int.5* %14)\l  %94 = getelementptr %class.ap_int.9* %5, i32 0, i32 0\l  store i40 %93, i40* %15\l  %95 = bitcast i40* %15 to [5 x i8]*\l  %96 = load [5 x i8]* %95, align 1\l  store [5 x i8] %96, [5 x i8]* %94\l  %97 = load i32* %3, align 4\l  %98 = add nsw i32 2, %97\l  %99 = sext i32 %98 to i64\l  %100 = load [5 x %class.ap_uint.0]** %2, align 8\l  %101 = getelementptr inbounds [5 x %class.ap_uint.0]* %100, i64 1\l  %102 = getelementptr inbounds [5 x %class.ap_uint.0]* %101, i32 0, i64 %99\l  %103 = bitcast %class.ap_uint.0* %20 to i8*\l  %104 = bitcast %class.ap_uint.0* %102 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %103, i8* %104, i64 1, i32 1, i1 false)\l  %105 = load i32* %3, align 4\l  %106 = add nsw i32 1, %105\l  %107 = sext i32 %106 to i64\l  %108 = load [5 x %class.ap_uint.0]** %2, align 8\l  %109 = getelementptr inbounds [5 x %class.ap_uint.0]* %108, i64 2\l  %110 = getelementptr inbounds [5 x %class.ap_uint.0]* %109, i32 0, i64 %107\l  %111 = bitcast %class.ap_uint.0* %21 to i8*\l  %112 = bitcast %class.ap_uint.0* %110 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %111, i8* %112, i64 1, i32 1, i1 false)\l  %113 = getelementptr %class.ap_uint.0* %20, i32 0, i32 0\l  %114 = bitcast [1 x i8]* %113 to i8*\l  %115 = load i8* %114, align 1\l  %116 = getelementptr %class.ap_uint.0* %21, i32 0, i32 0\l  %117 = bitcast [1 x i8]* %116 to i8*\l  %118 = load i8* %117, align 1\l  %119 = call i16 @_ZplILi8ELi8EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i8 %115, i8 %118)\l  %120 = getelementptr %class.ap_int* %19, i32 0, i32 0\l  %121 = bitcast [2 x i8]* %120 to i16*\l  store i16 %119, i16* %121, align 1\l  %122 = load i32* %3, align 4\l  %123 = add nsw i32 3, %122\l  %124 = sext i32 %123 to i64\l  %125 = load [5 x %class.ap_uint.0]** %2, align 8\l  %126 = getelementptr inbounds [5 x %class.ap_uint.0]* %125, i64 2\l  %127 = getelementptr inbounds [5 x %class.ap_uint.0]* %126, i32 0, i64 %124\l  %128 = bitcast %class.ap_uint.0* %22 to i8*\l  %129 = bitcast %class.ap_uint.0* %127 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* %129, i64 1, i32 1, i1 false)\l  %130 = getelementptr %class.ap_int* %19, i32 0, i32 0\l  %131 = bitcast [2 x i8]* %130 to i16*\l  %132 = load i16* %131, align 1\l  %133 = getelementptr %class.ap_uint.0* %22, i32 0, i32 0\l  %134 = bitcast [1 x i8]* %133 to i8*\l  %135 = load i8* %134, align 1\l  %136 = call i24 @_ZplILi16ELi8EE6ap_intIXplT_T0_EES0_IXT_EE7ap_uintIXT0_EE(i16 %132, i8 %135)\l  %137 = getelementptr %class.ap_int.6* %18, i32 0, i32 0\l  store i24 %136, i24* %23\l  %138 = bitcast i24* %23 to [3 x i8]*\l  %139 = load [3 x i8]* %138, align 1\l  store [3 x i8] %139, [3 x i8]* %137\l  %140 = load i32* %3, align 4\l  %141 = add nsw i32 2, %140\l  %142 = sext i32 %141 to i64\l  %143 = load [5 x %class.ap_uint.0]** %2, align 8\l  %144 = getelementptr inbounds [5 x %class.ap_uint.0]* %143, i64 3\l  %145 = getelementptr inbounds [5 x %class.ap_uint.0]* %144, i32 0, i64 %142\l  %146 = bitcast %class.ap_uint.0* %24 to i8*\l  %147 = bitcast %class.ap_uint.0* %145 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %146, i8* %147, i64 1, i32 1, i1 false)\l  %148 = getelementptr %class.ap_int.6* %18, i32 0, i32 0\l  %149 = bitcast i24* %25 to [3 x i8]*\l  %150 = load [3 x i8]* %148\l  store [3 x i8] %150, [3 x i8]* %149, align 1\l  %151 = load i24* %25\l  %152 = getelementptr %class.ap_uint.0* %24, i32 0, i32 0\l  %153 = bitcast [1 x i8]* %152 to i8*\l  %154 = load i8* %153, align 1\l  %155 = call i32 @_ZplILi24ELi8EE6ap_intIXplT_T0_EES0_IXT_EE7ap_uintIXT0_EE(i24 %151, i8 %154)\l  %156 = getelementptr %class.ap_int.5* %17, i32 0, i32 0\l  %157 = bitcast [4 x i8]* %156 to i32*\l  store i32 %155, i32* %157, align 1\l  %158 = call i32 @_ZmlILi32EE6ap_intIXT_EERKS1_i(%class.ap_int.5* %17, i32 2)\l  %159 = getelementptr %class.ap_int.5* %16, i32 0, i32 0\l  %160 = bitcast [4 x i8]* %159 to i32*\l  store i32 %158, i32* %160, align 1\l  %161 = getelementptr %class.ap_int.9* %5, i32 0, i32 0\l  %162 = bitcast i40* %26 to [5 x i8]*\l  %163 = load [5 x i8]* %161\l  store [5 x i8] %163, [5 x i8]* %162, align 1\l  %164 = load i40* %26\l  %165 = getelementptr %class.ap_int.5* %16, i32 0, i32 0\l  %166 = bitcast [4 x i8]* %165 to i32*\l  %167 = load i32* %166, align 1\l  %168 = call \{ i64, i8 \} @_ZplILi33ELi32EE6ap_intIXplT_T0_EES0_IXT_EES0_IXT0_EE(i40 %164, i32 %167)\l  %169 = getelementptr %class.ap_int.8* %4, i32 0, i32 0\l  store \{ i64, i8 \} %168, \{ i64, i8 \}* %27\l  %170 = bitcast \{ i64, i8 \}* %27 to [9 x i8]*\l  %171 = load [9 x i8]* %170, align 1\l  store [9 x i8] %171, [9 x i8]* %169\l  %172 = load i32* %3, align 4\l  %173 = add nsw i32 2, %172\l  %174 = sext i32 %173 to i64\l  %175 = load [5 x %class.ap_uint.0]** %2, align 8\l  %176 = getelementptr inbounds [5 x %class.ap_uint.0]* %175, i64 2\l  %177 = getelementptr inbounds [5 x %class.ap_uint.0]* %176, i32 0, i64 %174\l  %178 = call i8 @_ZmlILi8EE7ap_uintIXT_EERKS1_i(%class.ap_uint.0* %177, i32 4)\l  %179 = getelementptr %class.ap_uint.0* %28, i32 0, i32 0\l  %180 = bitcast [1 x i8]* %179 to i8*\l  store i8 %178, i8* %180, align 1\l  %181 = bitcast \{ i64, i8 \}* %29 to i8*\l  %182 = bitcast %class.ap_int.8* %4 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %181, i8* %182, i64 9, i32 0, i1 false)\l  %183 = getelementptr \{ i64, i8 \}* %29, i32 0, i32 0\l  %184 = load i64* %183, align 1\l  %185 = getelementptr \{ i64, i8 \}* %29, i32 0, i32 1\l  %186 = load i8* %185, align 1\l  %187 = getelementptr %class.ap_uint.0* %28, i32 0, i32 0\l  %188 = bitcast [1 x i8]* %187 to i8*\l  %189 = load i8* %188, align 1\l  %190 = call \{ i64, i16 \} @_ZplILi65ELi8EE6ap_intIXplT_T0_EES0_IXT_EE7ap_uintIXT0_EE(i64 %184, i8 %186, i8 %189)\l  %191 = getelementptr %class.ap_int.7* %30, i32 0, i32 0\l  store \{ i64, i16 \} %190, \{ i64, i16 \}* %31\l  %192 = bitcast \{ i64, i16 \}* %31 to [10 x i8]*\l  %193 = load [10 x i8]* %192, align 1\l  store [10 x i8] %193, [10 x i8]* %191\l  %194 = call i64 @_ZNK6ap_intILi73EEcvlEv(%class.ap_int.7* %30)\l  %195 = trunc i64 %194 to i32\l  store i32 %195, i32* %res, align 4\l  %196 = load i32* %res, align 4\l  %197 = sdiv i32 %196, 8\l  store i32 %197, i32* %res, align 4\l  %198 = load i32* %res, align 4\l  %199 = icmp slt i32 %198, 0\l  br i1 %199, label %200, label %201\l|{<s0>T|<s1>F}}"];
	Node0x2975f80:s0 -> Node0x2982bd0;
	Node0x2975f80:s1 -> Node0x2982c30;
	Node0x2982bd0 [shape=record,label="{%200:\l\l  store i32 0, i32* %1\l  br label %203\l}"];
	Node0x2982bd0 -> Node0x2982dd0;
	Node0x2982c30 [shape=record,label="{%201:\l\l  %202 = load i32* %res, align 4\l  store i32 %202, i32* %1\l  br label %203\l}"];
	Node0x2982c30 -> Node0x2982dd0;
	Node0x2982dd0 [shape=record,label="{%203:\l\l  %204 = load i32* %1\l  ret i32 %204\l}"];
}
