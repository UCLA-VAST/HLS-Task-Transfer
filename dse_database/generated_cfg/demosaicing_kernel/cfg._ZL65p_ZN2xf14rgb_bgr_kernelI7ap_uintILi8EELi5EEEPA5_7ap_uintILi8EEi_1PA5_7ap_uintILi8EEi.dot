digraph "CFG for '_ZL65p_ZN2xf14rgb_bgr_kernelI7ap_uintILi8EELi5EEEPA5_7ap_uintILi8EEi_1PA5_7ap_uintILi8EEi' function" {
	label="CFG for '_ZL65p_ZN2xf14rgb_bgr_kernelI7ap_uintILi8EELi5EEEPA5_7ap_uintILi8EEi_1PA5_7ap_uintILi8EEi' function";

	Node0x297de70 [shape=record,label="{%0:\l  %1 = alloca i32, align 4\l  %2 = alloca [5 x %class.ap_uint.0]*, align 8\l  %3 = alloca i32, align 4\l  %t1 = alloca i16, align 2\l  %4 = alloca %class.ap_uint.0, align 1\l  %5 = alloca %class.ap_uint.0, align 1\l  %6 = alloca %class.ap_int, align 1\l  %t2 = alloca i16, align 2\l  %7 = alloca %class.ap_int.4, align 1\l  %8 = alloca %class.ap_int.5, align 1\l  %9 = alloca %class.ap_int.6, align 1\l  %10 = alloca %class.ap_int, align 1\l  %11 = alloca %class.ap_uint.0, align 1\l  %12 = alloca %class.ap_uint.0, align 1\l  %13 = alloca %class.ap_uint.0, align 1\l  %14 = alloca i24\l  %15 = alloca %class.ap_uint.0, align 1\l  %16 = alloca i24\l  %17 = alloca %class.ap_uint.0, align 1\l  %18 = alloca i40\l  %19 = alloca %class.ap_uint.0, align 1\l  %20 = alloca i40\l  %21 = alloca %class.ap_int.3, align 1\l  %22 = alloca i48\l  %t3 = alloca i16, align 2\l  %23 = alloca %class.ap_uint.0, align 1\l  %24 = alloca %class.ap_uint.0, align 1\l  %25 = alloca %class.ap_int, align 1\l  %t4 = alloca i16, align 2\l  %26 = alloca %class.ap_uint.0, align 1\l  %res = alloca i32, align 4\l  store [5 x %class.ap_uint.0]* %imgblock, [5 x %class.ap_uint.0]** %2, align 8\l  store i32 %loop, i32* %3, align 4\l  %27 = load i32* %3, align 4\l  %28 = add nsw i32 0, %27\l  %29 = sext i32 %28 to i64\l  %30 = load [5 x %class.ap_uint.0]** %2, align 8\l  %31 = getelementptr inbounds [5 x %class.ap_uint.0]* %30, i64 2\l  %32 = getelementptr inbounds [5 x %class.ap_uint.0]* %31, i32 0, i64 %29\l  %33 = bitcast %class.ap_uint.0* %4 to i8*\l  %34 = bitcast %class.ap_uint.0* %32 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 1, i32 1, i1 false)\l  %35 = load i32* %3, align 4\l  %36 = add nsw i32 4, %35\l  %37 = sext i32 %36 to i64\l  %38 = load [5 x %class.ap_uint.0]** %2, align 8\l  %39 = getelementptr inbounds [5 x %class.ap_uint.0]* %38, i64 2\l  %40 = getelementptr inbounds [5 x %class.ap_uint.0]* %39, i32 0, i64 %37\l  %41 = bitcast %class.ap_uint.0* %5 to i8*\l  %42 = bitcast %class.ap_uint.0* %40 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 1, i32 1, i1 false)\l  %43 = getelementptr %class.ap_uint.0* %4, i32 0, i32 0\l  %44 = bitcast [1 x i8]* %43 to i8*\l  %45 = load i8* %44, align 1\l  %46 = getelementptr %class.ap_uint.0* %5, i32 0, i32 0\l  %47 = bitcast [1 x i8]* %46 to i8*\l  %48 = load i8* %47, align 1\l  %49 = call i16 @_ZplILi8ELi8EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i8 %45, i8 %48)\l  %50 = getelementptr %class.ap_int* %6, i32 0, i32 0\l  %51 = bitcast [2 x i8]* %50 to i16*\l  store i16 %49, i16* %51, align 1\l  %52 = call i64 @_ZNK6ap_intILi16EEcvlEv(%class.ap_int* %6)\l  %53 = trunc i64 %52 to i16\l  store i16 %53, i16* %t1, align 2\l  %54 = load i16* %t1, align 2\l  %55 = sext i16 %54 to i32\l  %56 = sdiv i32 %55, 2\l  %57 = trunc i32 %56 to i16\l  store i16 %57, i16* %t1, align 2\l  %58 = load i32* %3, align 4\l  %59 = add nsw i32 2, %58\l  %60 = sext i32 %59 to i64\l  %61 = load [5 x %class.ap_uint.0]** %2, align 8\l  %62 = getelementptr inbounds [5 x %class.ap_uint.0]* %61, i64 0\l  %63 = getelementptr inbounds [5 x %class.ap_uint.0]* %62, i32 0, i64 %60\l  %64 = bitcast %class.ap_uint.0* %11 to i8*\l  %65 = bitcast %class.ap_uint.0* %63 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 1, i32 1, i1 false)\l  %66 = load i32* %3, align 4\l  %67 = add nsw i32 1, %66\l  %68 = sext i32 %67 to i64\l  %69 = load [5 x %class.ap_uint.0]** %2, align 8\l  %70 = getelementptr inbounds [5 x %class.ap_uint.0]* %69, i64 1\l  %71 = getelementptr inbounds [5 x %class.ap_uint.0]* %70, i32 0, i64 %68\l  %72 = bitcast %class.ap_uint.0* %12 to i8*\l  %73 = bitcast %class.ap_uint.0* %71 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %72, i8* %73, i64 1, i32 1, i1 false)\l  %74 = getelementptr %class.ap_uint.0* %11, i32 0, i32 0\l  %75 = bitcast [1 x i8]* %74 to i8*\l  %76 = load i8* %75, align 1\l  %77 = getelementptr %class.ap_uint.0* %12, i32 0, i32 0\l  %78 = bitcast [1 x i8]* %77 to i8*\l  %79 = load i8* %78, align 1\l  %80 = call i16 @_ZplILi8ELi8EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i8 %76, i8 %79)\l  %81 = getelementptr %class.ap_int* %10, i32 0, i32 0\l  %82 = bitcast [2 x i8]* %81 to i16*\l  store i16 %80, i16* %82, align 1\l  %83 = load i32* %3, align 4\l  %84 = add nsw i32 3, %83\l  %85 = sext i32 %84 to i64\l  %86 = load [5 x %class.ap_uint.0]** %2, align 8\l  %87 = getelementptr inbounds [5 x %class.ap_uint.0]* %86, i64 1\l  %88 = getelementptr inbounds [5 x %class.ap_uint.0]* %87, i32 0, i64 %85\l  %89 = bitcast %class.ap_uint.0* %13 to i8*\l  %90 = bitcast %class.ap_uint.0* %88 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 1, i32 1, i1 false)\l  %91 = getelementptr %class.ap_int* %10, i32 0, i32 0\l  %92 = bitcast [2 x i8]* %91 to i16*\l  %93 = load i16* %92, align 1\l  %94 = getelementptr %class.ap_uint.0* %13, i32 0, i32 0\l  %95 = bitcast [1 x i8]* %94 to i8*\l  %96 = load i8* %95, align 1\l  %97 = call i24 @_ZplILi16ELi8EE6ap_intIXplT_T0_EES0_IXT_EE7ap_uintIXT0_EE(i16 %93, i8 %96)\l  %98 = getelementptr %class.ap_int.6* %9, i32 0, i32 0\l  store i24 %97, i24* %14\l  %99 = bitcast i24* %14 to [3 x i8]*\l  %100 = load [3 x i8]* %99, align 1\l  store [3 x i8] %100, [3 x i8]* %98\l  %101 = load i32* %3, align 4\l  %102 = add nsw i32 1, %101\l  %103 = sext i32 %102 to i64\l  %104 = load [5 x %class.ap_uint.0]** %2, align 8\l  %105 = getelementptr inbounds [5 x %class.ap_uint.0]* %104, i64 3\l  %106 = getelementptr inbounds [5 x %class.ap_uint.0]* %105, i32 0, i64 %103\l  %107 = bitcast %class.ap_uint.0* %15 to i8*\l  %108 = bitcast %class.ap_uint.0* %106 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 1, i32 1, i1 false)\l  %109 = getelementptr %class.ap_int.6* %9, i32 0, i32 0\l  %110 = bitcast i24* %16 to [3 x i8]*\l  %111 = load [3 x i8]* %109\l  store [3 x i8] %111, [3 x i8]* %110, align 1\l  %112 = load i24* %16\l  %113 = getelementptr %class.ap_uint.0* %15, i32 0, i32 0\l  %114 = bitcast [1 x i8]* %113 to i8*\l  %115 = load i8* %114, align 1\l  %116 = call i32 @_ZplILi24ELi8EE6ap_intIXplT_T0_EES0_IXT_EE7ap_uintIXT0_EE(i24 %112, i8 %115)\l  %117 = getelementptr %class.ap_int.5* %8, i32 0, i32 0\l  %118 = bitcast [4 x i8]* %117 to i32*\l  store i32 %116, i32* %118, align 1\l  %119 = load i32* %3, align 4\l  %120 = add nsw i32 3, %119\l  %121 = sext i32 %120 to i64\l  %122 = load [5 x %class.ap_uint.0]** %2, align 8\l  %123 = getelementptr inbounds [5 x %class.ap_uint.0]* %122, i64 3\l  %124 = getelementptr inbounds [5 x %class.ap_uint.0]* %123, i32 0, i64 %121\l  %125 = bitcast %class.ap_uint.0* %17 to i8*\l  %126 = bitcast %class.ap_uint.0* %124 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %125, i8* %126, i64 1, i32 1, i1 false)\l  %127 = getelementptr %class.ap_int.5* %8, i32 0, i32 0\l  %128 = bitcast [4 x i8]* %127 to i32*\l  %129 = load i32* %128, align 1\l  %130 = getelementptr %class.ap_uint.0* %17, i32 0, i32 0\l  %131 = bitcast [1 x i8]* %130 to i8*\l  %132 = load i8* %131, align 1\l  %133 = call i40 @_ZplILi32ELi8EE6ap_intIXplT_T0_EES0_IXT_EE7ap_uintIXT0_EE(i32 %129, i8 %132)\l  %134 = getelementptr %class.ap_int.4* %7, i32 0, i32 0\l  store i40 %133, i40* %18\l  %135 = bitcast i40* %18 to [5 x i8]*\l  %136 = load [5 x i8]* %135, align 1\l  store [5 x i8] %136, [5 x i8]* %134\l  %137 = load i32* %3, align 4\l  %138 = add nsw i32 2, %137\l  %139 = sext i32 %138 to i64\l  %140 = load [5 x %class.ap_uint.0]** %2, align 8\l  %141 = getelementptr inbounds [5 x %class.ap_uint.0]* %140, i64 4\l  %142 = getelementptr inbounds [5 x %class.ap_uint.0]* %141, i32 0, i64 %139\l  %143 = bitcast %class.ap_uint.0* %19 to i8*\l  %144 = bitcast %class.ap_uint.0* %142 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %143, i8* %144, i64 1, i32 1, i1 false)\l  %145 = getelementptr %class.ap_int.4* %7, i32 0, i32 0\l  %146 = bitcast i40* %20 to [5 x i8]*\l  %147 = load [5 x i8]* %145\l  store [5 x i8] %147, [5 x i8]* %146, align 1\l  %148 = load i40* %20\l  %149 = getelementptr %class.ap_uint.0* %19, i32 0, i32 0\l  %150 = bitcast [1 x i8]* %149 to i8*\l  %151 = load i8* %150, align 1\l  %152 = call i48 @_ZplILi40ELi8EE6ap_intIXplT_T0_EES0_IXT_EE7ap_uintIXT0_EE(i40 %148, i8 %151)\l  %153 = getelementptr %class.ap_int.3* %21, i32 0, i32 0\l  store i48 %152, i48* %22\l  %154 = bitcast i48* %22 to [6 x i8]*\l  %155 = load [6 x i8]* %154, align 1\l  store [6 x i8] %155, [6 x i8]* %153\l  %156 = call i64 @_ZNK6ap_intILi48EEcvlEv(%class.ap_int.3* %21)\l  %157 = trunc i64 %156 to i16\l  store i16 %157, i16* %t2, align 2\l  %158 = load i32* %3, align 4\l  %159 = add nsw i32 2, %158\l  %160 = sext i32 %159 to i64\l  %161 = load [5 x %class.ap_uint.0]** %2, align 8\l  %162 = getelementptr inbounds [5 x %class.ap_uint.0]* %161, i64 1\l  %163 = getelementptr inbounds [5 x %class.ap_uint.0]* %162, i32 0, i64 %160\l  %164 = bitcast %class.ap_uint.0* %23 to i8*\l  %165 = bitcast %class.ap_uint.0* %163 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %164, i8* %165, i64 1, i32 1, i1 false)\l  %166 = load i32* %3, align 4\l  %167 = add nsw i32 2, %166\l  %168 = sext i32 %167 to i64\l  %169 = load [5 x %class.ap_uint.0]** %2, align 8\l  %170 = getelementptr inbounds [5 x %class.ap_uint.0]* %169, i64 3\l  %171 = getelementptr inbounds [5 x %class.ap_uint.0]* %170, i32 0, i64 %168\l  %172 = bitcast %class.ap_uint.0* %24 to i8*\l  %173 = bitcast %class.ap_uint.0* %171 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %172, i8* %173, i64 1, i32 1, i1 false)\l  %174 = getelementptr %class.ap_uint.0* %23, i32 0, i32 0\l  %175 = bitcast [1 x i8]* %174 to i8*\l  %176 = load i8* %175, align 1\l  %177 = getelementptr %class.ap_uint.0* %24, i32 0, i32 0\l  %178 = bitcast [1 x i8]* %177 to i8*\l  %179 = load i8* %178, align 1\l  %180 = call i16 @_ZplILi8ELi8EE6ap_intIXplT_T0_EE7ap_uintIXT_EES2_IXT0_EE(i8 %176, i8 %179)\l  %181 = getelementptr %class.ap_int* %25, i32 0, i32 0\l  %182 = bitcast [2 x i8]* %181 to i16*\l  store i16 %180, i16* %182, align 1\l  %183 = call i64 @_ZNK6ap_intILi16EEcvlEv(%class.ap_int* %25)\l  %184 = trunc i64 %183 to i16\l  store i16 %184, i16* %t3, align 2\l  %185 = load i16* %t3, align 2\l  %186 = sext i16 %185 to i32\l  %187 = mul nsw i32 %186, 4\l  %188 = trunc i32 %187 to i16\l  store i16 %188, i16* %t3, align 2\l  %189 = load i32* %3, align 4\l  %190 = add nsw i32 2, %189\l  %191 = sext i32 %190 to i64\l  %192 = load [5 x %class.ap_uint.0]** %2, align 8\l  %193 = getelementptr inbounds [5 x %class.ap_uint.0]* %192, i64 2\l  %194 = getelementptr inbounds [5 x %class.ap_uint.0]* %193, i32 0, i64 %191\l  %195 = call i8 @_ZmlILi8EE7ap_uintIXT_EERKS1_i(%class.ap_uint.0* %194, i32 5)\l  %196 = getelementptr %class.ap_uint.0* %26, i32 0, i32 0\l  %197 = bitcast [1 x i8]* %196 to i8*\l  store i8 %195, i8* %197, align 1\l  %198 = call i64 @_ZNK7ap_uintILi8EEcvmEv(%class.ap_uint.0* %26)\l  %199 = trunc i64 %198 to i16\l  store i16 %199, i16* %t4, align 2\l  %200 = load i16* %t1, align 2\l  %201 = sext i16 %200 to i32\l  %202 = load i16* %t2, align 2\l  %203 = sext i16 %202 to i32\l  %204 = sub nsw i32 %201, %203\l  %205 = load i16* %t3, align 2\l  %206 = sext i16 %205 to i32\l  %207 = add nsw i32 %204, %206\l  %208 = load i16* %t4, align 2\l  %209 = sext i16 %208 to i32\l  %210 = add nsw i32 %207, %209\l  store i32 %210, i32* %res, align 4\l  %211 = load i32* %res, align 4\l  %212 = sdiv i32 %211, 8\l  store i32 %212, i32* %res, align 4\l  %213 = load i32* %res, align 4\l  %214 = icmp slt i32 %213, 0\l  br i1 %214, label %215, label %216\l|{<s0>T|<s1>F}}"];
	Node0x297de70:s0 -> Node0x298bff0;
	Node0x297de70:s1 -> Node0x298d770;
	Node0x298bff0 [shape=record,label="{%215:\l\l  store i32 0, i32* %1\l  br label %218\l}"];
	Node0x298bff0 -> Node0x298d910;
	Node0x298d770 [shape=record,label="{%216:\l\l  %217 = load i32* %res, align 4\l  store i32 %217, i32* %1\l  br label %218\l}"];
	Node0x298d770 -> Node0x298d910;
	Node0x298d910 [shape=record,label="{%218:\l\l  %219 = load i32* %1\l  ret i32 %219\l}"];
}
